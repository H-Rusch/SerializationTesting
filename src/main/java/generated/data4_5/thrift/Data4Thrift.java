/**
 * Autogenerated by Thrift Compiler (0.16.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package generated.data4_5.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.16.0)", date = "2022-07-20")
public class Data4Thrift implements org.apache.thrift.TBase<Data4Thrift, Data4Thrift._Fields>, java.io.Serializable, Cloneable, Comparable<Data4Thrift> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Data4Thrift");

  private static final org.apache.thrift.protocol.TField STRING1_FIELD_DESC = new org.apache.thrift.protocol.TField("string1", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField STRING2_FIELD_DESC = new org.apache.thrift.protocol.TField("string2", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField STRING3_FIELD_DESC = new org.apache.thrift.protocol.TField("string3", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField STRING4_FIELD_DESC = new org.apache.thrift.protocol.TField("string4", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField STRING5_FIELD_DESC = new org.apache.thrift.protocol.TField("string5", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField STRING6_FIELD_DESC = new org.apache.thrift.protocol.TField("string6", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField STRING7_FIELD_DESC = new org.apache.thrift.protocol.TField("string7", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField STRING8_FIELD_DESC = new org.apache.thrift.protocol.TField("string8", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField STRING9_FIELD_DESC = new org.apache.thrift.protocol.TField("string9", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField STRING10_FIELD_DESC = new org.apache.thrift.protocol.TField("string10", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField STRING11_FIELD_DESC = new org.apache.thrift.protocol.TField("string11", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField STRING12_FIELD_DESC = new org.apache.thrift.protocol.TField("string12", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField STRING13_FIELD_DESC = new org.apache.thrift.protocol.TField("string13", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField STRING14_FIELD_DESC = new org.apache.thrift.protocol.TField("string14", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField STRING15_FIELD_DESC = new org.apache.thrift.protocol.TField("string15", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField STRING16_FIELD_DESC = new org.apache.thrift.protocol.TField("string16", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField STRING17_FIELD_DESC = new org.apache.thrift.protocol.TField("string17", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField STRING18_FIELD_DESC = new org.apache.thrift.protocol.TField("string18", org.apache.thrift.protocol.TType.STRING, (short)18);
  private static final org.apache.thrift.protocol.TField STRING19_FIELD_DESC = new org.apache.thrift.protocol.TField("string19", org.apache.thrift.protocol.TType.STRING, (short)19);
  private static final org.apache.thrift.protocol.TField STRING20_FIELD_DESC = new org.apache.thrift.protocol.TField("string20", org.apache.thrift.protocol.TType.STRING, (short)20);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new Data4ThriftStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new Data4ThriftTupleSchemeFactory();

  public @org.apache.thrift.annotation.Nullable java.lang.String string1; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String string2; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String string3; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String string4; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String string5; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String string6; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String string7; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String string8; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String string9; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String string10; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String string11; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String string12; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String string13; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String string14; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String string15; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String string16; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String string17; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String string18; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String string19; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String string20; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    STRING1((short)1, "string1"),
    STRING2((short)2, "string2"),
    STRING3((short)3, "string3"),
    STRING4((short)4, "string4"),
    STRING5((short)5, "string5"),
    STRING6((short)6, "string6"),
    STRING7((short)7, "string7"),
    STRING8((short)8, "string8"),
    STRING9((short)9, "string9"),
    STRING10((short)10, "string10"),
    STRING11((short)11, "string11"),
    STRING12((short)12, "string12"),
    STRING13((short)13, "string13"),
    STRING14((short)14, "string14"),
    STRING15((short)15, "string15"),
    STRING16((short)16, "string16"),
    STRING17((short)17, "string17"),
    STRING18((short)18, "string18"),
    STRING19((short)19, "string19"),
    STRING20((short)20, "string20");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // STRING1
          return STRING1;
        case 2: // STRING2
          return STRING2;
        case 3: // STRING3
          return STRING3;
        case 4: // STRING4
          return STRING4;
        case 5: // STRING5
          return STRING5;
        case 6: // STRING6
          return STRING6;
        case 7: // STRING7
          return STRING7;
        case 8: // STRING8
          return STRING8;
        case 9: // STRING9
          return STRING9;
        case 10: // STRING10
          return STRING10;
        case 11: // STRING11
          return STRING11;
        case 12: // STRING12
          return STRING12;
        case 13: // STRING13
          return STRING13;
        case 14: // STRING14
          return STRING14;
        case 15: // STRING15
          return STRING15;
        case 16: // STRING16
          return STRING16;
        case 17: // STRING17
          return STRING17;
        case 18: // STRING18
          return STRING18;
        case 19: // STRING19
          return STRING19;
        case 20: // STRING20
          return STRING20;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.STRING1, new org.apache.thrift.meta_data.FieldMetaData("string1", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STRING2, new org.apache.thrift.meta_data.FieldMetaData("string2", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STRING3, new org.apache.thrift.meta_data.FieldMetaData("string3", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STRING4, new org.apache.thrift.meta_data.FieldMetaData("string4", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STRING5, new org.apache.thrift.meta_data.FieldMetaData("string5", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STRING6, new org.apache.thrift.meta_data.FieldMetaData("string6", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STRING7, new org.apache.thrift.meta_data.FieldMetaData("string7", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STRING8, new org.apache.thrift.meta_data.FieldMetaData("string8", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STRING9, new org.apache.thrift.meta_data.FieldMetaData("string9", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STRING10, new org.apache.thrift.meta_data.FieldMetaData("string10", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STRING11, new org.apache.thrift.meta_data.FieldMetaData("string11", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STRING12, new org.apache.thrift.meta_data.FieldMetaData("string12", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STRING13, new org.apache.thrift.meta_data.FieldMetaData("string13", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STRING14, new org.apache.thrift.meta_data.FieldMetaData("string14", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STRING15, new org.apache.thrift.meta_data.FieldMetaData("string15", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STRING16, new org.apache.thrift.meta_data.FieldMetaData("string16", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STRING17, new org.apache.thrift.meta_data.FieldMetaData("string17", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STRING18, new org.apache.thrift.meta_data.FieldMetaData("string18", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STRING19, new org.apache.thrift.meta_data.FieldMetaData("string19", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STRING20, new org.apache.thrift.meta_data.FieldMetaData("string20", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Data4Thrift.class, metaDataMap);
  }

  public Data4Thrift() {
  }

  public Data4Thrift(
    java.lang.String string1,
    java.lang.String string2,
    java.lang.String string3,
    java.lang.String string4,
    java.lang.String string5,
    java.lang.String string6,
    java.lang.String string7,
    java.lang.String string8,
    java.lang.String string9,
    java.lang.String string10,
    java.lang.String string11,
    java.lang.String string12,
    java.lang.String string13,
    java.lang.String string14,
    java.lang.String string15,
    java.lang.String string16,
    java.lang.String string17,
    java.lang.String string18,
    java.lang.String string19,
    java.lang.String string20)
  {
    this();
    this.string1 = string1;
    this.string2 = string2;
    this.string3 = string3;
    this.string4 = string4;
    this.string5 = string5;
    this.string6 = string6;
    this.string7 = string7;
    this.string8 = string8;
    this.string9 = string9;
    this.string10 = string10;
    this.string11 = string11;
    this.string12 = string12;
    this.string13 = string13;
    this.string14 = string14;
    this.string15 = string15;
    this.string16 = string16;
    this.string17 = string17;
    this.string18 = string18;
    this.string19 = string19;
    this.string20 = string20;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Data4Thrift(Data4Thrift other) {
    if (other.isSetString1()) {
      this.string1 = other.string1;
    }
    if (other.isSetString2()) {
      this.string2 = other.string2;
    }
    if (other.isSetString3()) {
      this.string3 = other.string3;
    }
    if (other.isSetString4()) {
      this.string4 = other.string4;
    }
    if (other.isSetString5()) {
      this.string5 = other.string5;
    }
    if (other.isSetString6()) {
      this.string6 = other.string6;
    }
    if (other.isSetString7()) {
      this.string7 = other.string7;
    }
    if (other.isSetString8()) {
      this.string8 = other.string8;
    }
    if (other.isSetString9()) {
      this.string9 = other.string9;
    }
    if (other.isSetString10()) {
      this.string10 = other.string10;
    }
    if (other.isSetString11()) {
      this.string11 = other.string11;
    }
    if (other.isSetString12()) {
      this.string12 = other.string12;
    }
    if (other.isSetString13()) {
      this.string13 = other.string13;
    }
    if (other.isSetString14()) {
      this.string14 = other.string14;
    }
    if (other.isSetString15()) {
      this.string15 = other.string15;
    }
    if (other.isSetString16()) {
      this.string16 = other.string16;
    }
    if (other.isSetString17()) {
      this.string17 = other.string17;
    }
    if (other.isSetString18()) {
      this.string18 = other.string18;
    }
    if (other.isSetString19()) {
      this.string19 = other.string19;
    }
    if (other.isSetString20()) {
      this.string20 = other.string20;
    }
  }

  public Data4Thrift deepCopy() {
    return new Data4Thrift(this);
  }

  @Override
  public void clear() {
    this.string1 = null;
    this.string2 = null;
    this.string3 = null;
    this.string4 = null;
    this.string5 = null;
    this.string6 = null;
    this.string7 = null;
    this.string8 = null;
    this.string9 = null;
    this.string10 = null;
    this.string11 = null;
    this.string12 = null;
    this.string13 = null;
    this.string14 = null;
    this.string15 = null;
    this.string16 = null;
    this.string17 = null;
    this.string18 = null;
    this.string19 = null;
    this.string20 = null;
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getString1() {
    return this.string1;
  }

  public Data4Thrift setString1(@org.apache.thrift.annotation.Nullable java.lang.String string1) {
    this.string1 = string1;
    return this;
  }

  public void unsetString1() {
    this.string1 = null;
  }

  /** Returns true if field string1 is set (has been assigned a value) and false otherwise */
  public boolean isSetString1() {
    return this.string1 != null;
  }

  public void setString1IsSet(boolean value) {
    if (!value) {
      this.string1 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getString2() {
    return this.string2;
  }

  public Data4Thrift setString2(@org.apache.thrift.annotation.Nullable java.lang.String string2) {
    this.string2 = string2;
    return this;
  }

  public void unsetString2() {
    this.string2 = null;
  }

  /** Returns true if field string2 is set (has been assigned a value) and false otherwise */
  public boolean isSetString2() {
    return this.string2 != null;
  }

  public void setString2IsSet(boolean value) {
    if (!value) {
      this.string2 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getString3() {
    return this.string3;
  }

  public Data4Thrift setString3(@org.apache.thrift.annotation.Nullable java.lang.String string3) {
    this.string3 = string3;
    return this;
  }

  public void unsetString3() {
    this.string3 = null;
  }

  /** Returns true if field string3 is set (has been assigned a value) and false otherwise */
  public boolean isSetString3() {
    return this.string3 != null;
  }

  public void setString3IsSet(boolean value) {
    if (!value) {
      this.string3 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getString4() {
    return this.string4;
  }

  public Data4Thrift setString4(@org.apache.thrift.annotation.Nullable java.lang.String string4) {
    this.string4 = string4;
    return this;
  }

  public void unsetString4() {
    this.string4 = null;
  }

  /** Returns true if field string4 is set (has been assigned a value) and false otherwise */
  public boolean isSetString4() {
    return this.string4 != null;
  }

  public void setString4IsSet(boolean value) {
    if (!value) {
      this.string4 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getString5() {
    return this.string5;
  }

  public Data4Thrift setString5(@org.apache.thrift.annotation.Nullable java.lang.String string5) {
    this.string5 = string5;
    return this;
  }

  public void unsetString5() {
    this.string5 = null;
  }

  /** Returns true if field string5 is set (has been assigned a value) and false otherwise */
  public boolean isSetString5() {
    return this.string5 != null;
  }

  public void setString5IsSet(boolean value) {
    if (!value) {
      this.string5 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getString6() {
    return this.string6;
  }

  public Data4Thrift setString6(@org.apache.thrift.annotation.Nullable java.lang.String string6) {
    this.string6 = string6;
    return this;
  }

  public void unsetString6() {
    this.string6 = null;
  }

  /** Returns true if field string6 is set (has been assigned a value) and false otherwise */
  public boolean isSetString6() {
    return this.string6 != null;
  }

  public void setString6IsSet(boolean value) {
    if (!value) {
      this.string6 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getString7() {
    return this.string7;
  }

  public Data4Thrift setString7(@org.apache.thrift.annotation.Nullable java.lang.String string7) {
    this.string7 = string7;
    return this;
  }

  public void unsetString7() {
    this.string7 = null;
  }

  /** Returns true if field string7 is set (has been assigned a value) and false otherwise */
  public boolean isSetString7() {
    return this.string7 != null;
  }

  public void setString7IsSet(boolean value) {
    if (!value) {
      this.string7 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getString8() {
    return this.string8;
  }

  public Data4Thrift setString8(@org.apache.thrift.annotation.Nullable java.lang.String string8) {
    this.string8 = string8;
    return this;
  }

  public void unsetString8() {
    this.string8 = null;
  }

  /** Returns true if field string8 is set (has been assigned a value) and false otherwise */
  public boolean isSetString8() {
    return this.string8 != null;
  }

  public void setString8IsSet(boolean value) {
    if (!value) {
      this.string8 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getString9() {
    return this.string9;
  }

  public Data4Thrift setString9(@org.apache.thrift.annotation.Nullable java.lang.String string9) {
    this.string9 = string9;
    return this;
  }

  public void unsetString9() {
    this.string9 = null;
  }

  /** Returns true if field string9 is set (has been assigned a value) and false otherwise */
  public boolean isSetString9() {
    return this.string9 != null;
  }

  public void setString9IsSet(boolean value) {
    if (!value) {
      this.string9 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getString10() {
    return this.string10;
  }

  public Data4Thrift setString10(@org.apache.thrift.annotation.Nullable java.lang.String string10) {
    this.string10 = string10;
    return this;
  }

  public void unsetString10() {
    this.string10 = null;
  }

  /** Returns true if field string10 is set (has been assigned a value) and false otherwise */
  public boolean isSetString10() {
    return this.string10 != null;
  }

  public void setString10IsSet(boolean value) {
    if (!value) {
      this.string10 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getString11() {
    return this.string11;
  }

  public Data4Thrift setString11(@org.apache.thrift.annotation.Nullable java.lang.String string11) {
    this.string11 = string11;
    return this;
  }

  public void unsetString11() {
    this.string11 = null;
  }

  /** Returns true if field string11 is set (has been assigned a value) and false otherwise */
  public boolean isSetString11() {
    return this.string11 != null;
  }

  public void setString11IsSet(boolean value) {
    if (!value) {
      this.string11 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getString12() {
    return this.string12;
  }

  public Data4Thrift setString12(@org.apache.thrift.annotation.Nullable java.lang.String string12) {
    this.string12 = string12;
    return this;
  }

  public void unsetString12() {
    this.string12 = null;
  }

  /** Returns true if field string12 is set (has been assigned a value) and false otherwise */
  public boolean isSetString12() {
    return this.string12 != null;
  }

  public void setString12IsSet(boolean value) {
    if (!value) {
      this.string12 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getString13() {
    return this.string13;
  }

  public Data4Thrift setString13(@org.apache.thrift.annotation.Nullable java.lang.String string13) {
    this.string13 = string13;
    return this;
  }

  public void unsetString13() {
    this.string13 = null;
  }

  /** Returns true if field string13 is set (has been assigned a value) and false otherwise */
  public boolean isSetString13() {
    return this.string13 != null;
  }

  public void setString13IsSet(boolean value) {
    if (!value) {
      this.string13 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getString14() {
    return this.string14;
  }

  public Data4Thrift setString14(@org.apache.thrift.annotation.Nullable java.lang.String string14) {
    this.string14 = string14;
    return this;
  }

  public void unsetString14() {
    this.string14 = null;
  }

  /** Returns true if field string14 is set (has been assigned a value) and false otherwise */
  public boolean isSetString14() {
    return this.string14 != null;
  }

  public void setString14IsSet(boolean value) {
    if (!value) {
      this.string14 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getString15() {
    return this.string15;
  }

  public Data4Thrift setString15(@org.apache.thrift.annotation.Nullable java.lang.String string15) {
    this.string15 = string15;
    return this;
  }

  public void unsetString15() {
    this.string15 = null;
  }

  /** Returns true if field string15 is set (has been assigned a value) and false otherwise */
  public boolean isSetString15() {
    return this.string15 != null;
  }

  public void setString15IsSet(boolean value) {
    if (!value) {
      this.string15 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getString16() {
    return this.string16;
  }

  public Data4Thrift setString16(@org.apache.thrift.annotation.Nullable java.lang.String string16) {
    this.string16 = string16;
    return this;
  }

  public void unsetString16() {
    this.string16 = null;
  }

  /** Returns true if field string16 is set (has been assigned a value) and false otherwise */
  public boolean isSetString16() {
    return this.string16 != null;
  }

  public void setString16IsSet(boolean value) {
    if (!value) {
      this.string16 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getString17() {
    return this.string17;
  }

  public Data4Thrift setString17(@org.apache.thrift.annotation.Nullable java.lang.String string17) {
    this.string17 = string17;
    return this;
  }

  public void unsetString17() {
    this.string17 = null;
  }

  /** Returns true if field string17 is set (has been assigned a value) and false otherwise */
  public boolean isSetString17() {
    return this.string17 != null;
  }

  public void setString17IsSet(boolean value) {
    if (!value) {
      this.string17 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getString18() {
    return this.string18;
  }

  public Data4Thrift setString18(@org.apache.thrift.annotation.Nullable java.lang.String string18) {
    this.string18 = string18;
    return this;
  }

  public void unsetString18() {
    this.string18 = null;
  }

  /** Returns true if field string18 is set (has been assigned a value) and false otherwise */
  public boolean isSetString18() {
    return this.string18 != null;
  }

  public void setString18IsSet(boolean value) {
    if (!value) {
      this.string18 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getString19() {
    return this.string19;
  }

  public Data4Thrift setString19(@org.apache.thrift.annotation.Nullable java.lang.String string19) {
    this.string19 = string19;
    return this;
  }

  public void unsetString19() {
    this.string19 = null;
  }

  /** Returns true if field string19 is set (has been assigned a value) and false otherwise */
  public boolean isSetString19() {
    return this.string19 != null;
  }

  public void setString19IsSet(boolean value) {
    if (!value) {
      this.string19 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getString20() {
    return this.string20;
  }

  public Data4Thrift setString20(@org.apache.thrift.annotation.Nullable java.lang.String string20) {
    this.string20 = string20;
    return this;
  }

  public void unsetString20() {
    this.string20 = null;
  }

  /** Returns true if field string20 is set (has been assigned a value) and false otherwise */
  public boolean isSetString20() {
    return this.string20 != null;
  }

  public void setString20IsSet(boolean value) {
    if (!value) {
      this.string20 = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case STRING1:
      if (value == null) {
        unsetString1();
      } else {
        setString1((java.lang.String)value);
      }
      break;

    case STRING2:
      if (value == null) {
        unsetString2();
      } else {
        setString2((java.lang.String)value);
      }
      break;

    case STRING3:
      if (value == null) {
        unsetString3();
      } else {
        setString3((java.lang.String)value);
      }
      break;

    case STRING4:
      if (value == null) {
        unsetString4();
      } else {
        setString4((java.lang.String)value);
      }
      break;

    case STRING5:
      if (value == null) {
        unsetString5();
      } else {
        setString5((java.lang.String)value);
      }
      break;

    case STRING6:
      if (value == null) {
        unsetString6();
      } else {
        setString6((java.lang.String)value);
      }
      break;

    case STRING7:
      if (value == null) {
        unsetString7();
      } else {
        setString7((java.lang.String)value);
      }
      break;

    case STRING8:
      if (value == null) {
        unsetString8();
      } else {
        setString8((java.lang.String)value);
      }
      break;

    case STRING9:
      if (value == null) {
        unsetString9();
      } else {
        setString9((java.lang.String)value);
      }
      break;

    case STRING10:
      if (value == null) {
        unsetString10();
      } else {
        setString10((java.lang.String)value);
      }
      break;

    case STRING11:
      if (value == null) {
        unsetString11();
      } else {
        setString11((java.lang.String)value);
      }
      break;

    case STRING12:
      if (value == null) {
        unsetString12();
      } else {
        setString12((java.lang.String)value);
      }
      break;

    case STRING13:
      if (value == null) {
        unsetString13();
      } else {
        setString13((java.lang.String)value);
      }
      break;

    case STRING14:
      if (value == null) {
        unsetString14();
      } else {
        setString14((java.lang.String)value);
      }
      break;

    case STRING15:
      if (value == null) {
        unsetString15();
      } else {
        setString15((java.lang.String)value);
      }
      break;

    case STRING16:
      if (value == null) {
        unsetString16();
      } else {
        setString16((java.lang.String)value);
      }
      break;

    case STRING17:
      if (value == null) {
        unsetString17();
      } else {
        setString17((java.lang.String)value);
      }
      break;

    case STRING18:
      if (value == null) {
        unsetString18();
      } else {
        setString18((java.lang.String)value);
      }
      break;

    case STRING19:
      if (value == null) {
        unsetString19();
      } else {
        setString19((java.lang.String)value);
      }
      break;

    case STRING20:
      if (value == null) {
        unsetString20();
      } else {
        setString20((java.lang.String)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case STRING1:
      return getString1();

    case STRING2:
      return getString2();

    case STRING3:
      return getString3();

    case STRING4:
      return getString4();

    case STRING5:
      return getString5();

    case STRING6:
      return getString6();

    case STRING7:
      return getString7();

    case STRING8:
      return getString8();

    case STRING9:
      return getString9();

    case STRING10:
      return getString10();

    case STRING11:
      return getString11();

    case STRING12:
      return getString12();

    case STRING13:
      return getString13();

    case STRING14:
      return getString14();

    case STRING15:
      return getString15();

    case STRING16:
      return getString16();

    case STRING17:
      return getString17();

    case STRING18:
      return getString18();

    case STRING19:
      return getString19();

    case STRING20:
      return getString20();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case STRING1:
      return isSetString1();
    case STRING2:
      return isSetString2();
    case STRING3:
      return isSetString3();
    case STRING4:
      return isSetString4();
    case STRING5:
      return isSetString5();
    case STRING6:
      return isSetString6();
    case STRING7:
      return isSetString7();
    case STRING8:
      return isSetString8();
    case STRING9:
      return isSetString9();
    case STRING10:
      return isSetString10();
    case STRING11:
      return isSetString11();
    case STRING12:
      return isSetString12();
    case STRING13:
      return isSetString13();
    case STRING14:
      return isSetString14();
    case STRING15:
      return isSetString15();
    case STRING16:
      return isSetString16();
    case STRING17:
      return isSetString17();
    case STRING18:
      return isSetString18();
    case STRING19:
      return isSetString19();
    case STRING20:
      return isSetString20();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof Data4Thrift)
      return this.equals((Data4Thrift)that);
    return false;
  }

  public boolean equals(Data4Thrift that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_string1 = true && this.isSetString1();
    boolean that_present_string1 = true && that.isSetString1();
    if (this_present_string1 || that_present_string1) {
      if (!(this_present_string1 && that_present_string1))
        return false;
      if (!this.string1.equals(that.string1))
        return false;
    }

    boolean this_present_string2 = true && this.isSetString2();
    boolean that_present_string2 = true && that.isSetString2();
    if (this_present_string2 || that_present_string2) {
      if (!(this_present_string2 && that_present_string2))
        return false;
      if (!this.string2.equals(that.string2))
        return false;
    }

    boolean this_present_string3 = true && this.isSetString3();
    boolean that_present_string3 = true && that.isSetString3();
    if (this_present_string3 || that_present_string3) {
      if (!(this_present_string3 && that_present_string3))
        return false;
      if (!this.string3.equals(that.string3))
        return false;
    }

    boolean this_present_string4 = true && this.isSetString4();
    boolean that_present_string4 = true && that.isSetString4();
    if (this_present_string4 || that_present_string4) {
      if (!(this_present_string4 && that_present_string4))
        return false;
      if (!this.string4.equals(that.string4))
        return false;
    }

    boolean this_present_string5 = true && this.isSetString5();
    boolean that_present_string5 = true && that.isSetString5();
    if (this_present_string5 || that_present_string5) {
      if (!(this_present_string5 && that_present_string5))
        return false;
      if (!this.string5.equals(that.string5))
        return false;
    }

    boolean this_present_string6 = true && this.isSetString6();
    boolean that_present_string6 = true && that.isSetString6();
    if (this_present_string6 || that_present_string6) {
      if (!(this_present_string6 && that_present_string6))
        return false;
      if (!this.string6.equals(that.string6))
        return false;
    }

    boolean this_present_string7 = true && this.isSetString7();
    boolean that_present_string7 = true && that.isSetString7();
    if (this_present_string7 || that_present_string7) {
      if (!(this_present_string7 && that_present_string7))
        return false;
      if (!this.string7.equals(that.string7))
        return false;
    }

    boolean this_present_string8 = true && this.isSetString8();
    boolean that_present_string8 = true && that.isSetString8();
    if (this_present_string8 || that_present_string8) {
      if (!(this_present_string8 && that_present_string8))
        return false;
      if (!this.string8.equals(that.string8))
        return false;
    }

    boolean this_present_string9 = true && this.isSetString9();
    boolean that_present_string9 = true && that.isSetString9();
    if (this_present_string9 || that_present_string9) {
      if (!(this_present_string9 && that_present_string9))
        return false;
      if (!this.string9.equals(that.string9))
        return false;
    }

    boolean this_present_string10 = true && this.isSetString10();
    boolean that_present_string10 = true && that.isSetString10();
    if (this_present_string10 || that_present_string10) {
      if (!(this_present_string10 && that_present_string10))
        return false;
      if (!this.string10.equals(that.string10))
        return false;
    }

    boolean this_present_string11 = true && this.isSetString11();
    boolean that_present_string11 = true && that.isSetString11();
    if (this_present_string11 || that_present_string11) {
      if (!(this_present_string11 && that_present_string11))
        return false;
      if (!this.string11.equals(that.string11))
        return false;
    }

    boolean this_present_string12 = true && this.isSetString12();
    boolean that_present_string12 = true && that.isSetString12();
    if (this_present_string12 || that_present_string12) {
      if (!(this_present_string12 && that_present_string12))
        return false;
      if (!this.string12.equals(that.string12))
        return false;
    }

    boolean this_present_string13 = true && this.isSetString13();
    boolean that_present_string13 = true && that.isSetString13();
    if (this_present_string13 || that_present_string13) {
      if (!(this_present_string13 && that_present_string13))
        return false;
      if (!this.string13.equals(that.string13))
        return false;
    }

    boolean this_present_string14 = true && this.isSetString14();
    boolean that_present_string14 = true && that.isSetString14();
    if (this_present_string14 || that_present_string14) {
      if (!(this_present_string14 && that_present_string14))
        return false;
      if (!this.string14.equals(that.string14))
        return false;
    }

    boolean this_present_string15 = true && this.isSetString15();
    boolean that_present_string15 = true && that.isSetString15();
    if (this_present_string15 || that_present_string15) {
      if (!(this_present_string15 && that_present_string15))
        return false;
      if (!this.string15.equals(that.string15))
        return false;
    }

    boolean this_present_string16 = true && this.isSetString16();
    boolean that_present_string16 = true && that.isSetString16();
    if (this_present_string16 || that_present_string16) {
      if (!(this_present_string16 && that_present_string16))
        return false;
      if (!this.string16.equals(that.string16))
        return false;
    }

    boolean this_present_string17 = true && this.isSetString17();
    boolean that_present_string17 = true && that.isSetString17();
    if (this_present_string17 || that_present_string17) {
      if (!(this_present_string17 && that_present_string17))
        return false;
      if (!this.string17.equals(that.string17))
        return false;
    }

    boolean this_present_string18 = true && this.isSetString18();
    boolean that_present_string18 = true && that.isSetString18();
    if (this_present_string18 || that_present_string18) {
      if (!(this_present_string18 && that_present_string18))
        return false;
      if (!this.string18.equals(that.string18))
        return false;
    }

    boolean this_present_string19 = true && this.isSetString19();
    boolean that_present_string19 = true && that.isSetString19();
    if (this_present_string19 || that_present_string19) {
      if (!(this_present_string19 && that_present_string19))
        return false;
      if (!this.string19.equals(that.string19))
        return false;
    }

    boolean this_present_string20 = true && this.isSetString20();
    boolean that_present_string20 = true && that.isSetString20();
    if (this_present_string20 || that_present_string20) {
      if (!(this_present_string20 && that_present_string20))
        return false;
      if (!this.string20.equals(that.string20))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetString1()) ? 131071 : 524287);
    if (isSetString1())
      hashCode = hashCode * 8191 + string1.hashCode();

    hashCode = hashCode * 8191 + ((isSetString2()) ? 131071 : 524287);
    if (isSetString2())
      hashCode = hashCode * 8191 + string2.hashCode();

    hashCode = hashCode * 8191 + ((isSetString3()) ? 131071 : 524287);
    if (isSetString3())
      hashCode = hashCode * 8191 + string3.hashCode();

    hashCode = hashCode * 8191 + ((isSetString4()) ? 131071 : 524287);
    if (isSetString4())
      hashCode = hashCode * 8191 + string4.hashCode();

    hashCode = hashCode * 8191 + ((isSetString5()) ? 131071 : 524287);
    if (isSetString5())
      hashCode = hashCode * 8191 + string5.hashCode();

    hashCode = hashCode * 8191 + ((isSetString6()) ? 131071 : 524287);
    if (isSetString6())
      hashCode = hashCode * 8191 + string6.hashCode();

    hashCode = hashCode * 8191 + ((isSetString7()) ? 131071 : 524287);
    if (isSetString7())
      hashCode = hashCode * 8191 + string7.hashCode();

    hashCode = hashCode * 8191 + ((isSetString8()) ? 131071 : 524287);
    if (isSetString8())
      hashCode = hashCode * 8191 + string8.hashCode();

    hashCode = hashCode * 8191 + ((isSetString9()) ? 131071 : 524287);
    if (isSetString9())
      hashCode = hashCode * 8191 + string9.hashCode();

    hashCode = hashCode * 8191 + ((isSetString10()) ? 131071 : 524287);
    if (isSetString10())
      hashCode = hashCode * 8191 + string10.hashCode();

    hashCode = hashCode * 8191 + ((isSetString11()) ? 131071 : 524287);
    if (isSetString11())
      hashCode = hashCode * 8191 + string11.hashCode();

    hashCode = hashCode * 8191 + ((isSetString12()) ? 131071 : 524287);
    if (isSetString12())
      hashCode = hashCode * 8191 + string12.hashCode();

    hashCode = hashCode * 8191 + ((isSetString13()) ? 131071 : 524287);
    if (isSetString13())
      hashCode = hashCode * 8191 + string13.hashCode();

    hashCode = hashCode * 8191 + ((isSetString14()) ? 131071 : 524287);
    if (isSetString14())
      hashCode = hashCode * 8191 + string14.hashCode();

    hashCode = hashCode * 8191 + ((isSetString15()) ? 131071 : 524287);
    if (isSetString15())
      hashCode = hashCode * 8191 + string15.hashCode();

    hashCode = hashCode * 8191 + ((isSetString16()) ? 131071 : 524287);
    if (isSetString16())
      hashCode = hashCode * 8191 + string16.hashCode();

    hashCode = hashCode * 8191 + ((isSetString17()) ? 131071 : 524287);
    if (isSetString17())
      hashCode = hashCode * 8191 + string17.hashCode();

    hashCode = hashCode * 8191 + ((isSetString18()) ? 131071 : 524287);
    if (isSetString18())
      hashCode = hashCode * 8191 + string18.hashCode();

    hashCode = hashCode * 8191 + ((isSetString19()) ? 131071 : 524287);
    if (isSetString19())
      hashCode = hashCode * 8191 + string19.hashCode();

    hashCode = hashCode * 8191 + ((isSetString20()) ? 131071 : 524287);
    if (isSetString20())
      hashCode = hashCode * 8191 + string20.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(Data4Thrift other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetString1(), other.isSetString1());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetString1()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.string1, other.string1);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetString2(), other.isSetString2());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetString2()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.string2, other.string2);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetString3(), other.isSetString3());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetString3()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.string3, other.string3);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetString4(), other.isSetString4());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetString4()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.string4, other.string4);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetString5(), other.isSetString5());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetString5()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.string5, other.string5);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetString6(), other.isSetString6());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetString6()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.string6, other.string6);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetString7(), other.isSetString7());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetString7()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.string7, other.string7);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetString8(), other.isSetString8());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetString8()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.string8, other.string8);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetString9(), other.isSetString9());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetString9()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.string9, other.string9);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetString10(), other.isSetString10());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetString10()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.string10, other.string10);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetString11(), other.isSetString11());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetString11()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.string11, other.string11);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetString12(), other.isSetString12());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetString12()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.string12, other.string12);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetString13(), other.isSetString13());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetString13()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.string13, other.string13);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetString14(), other.isSetString14());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetString14()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.string14, other.string14);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetString15(), other.isSetString15());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetString15()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.string15, other.string15);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetString16(), other.isSetString16());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetString16()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.string16, other.string16);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetString17(), other.isSetString17());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetString17()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.string17, other.string17);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetString18(), other.isSetString18());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetString18()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.string18, other.string18);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetString19(), other.isSetString19());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetString19()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.string19, other.string19);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetString20(), other.isSetString20());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetString20()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.string20, other.string20);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("Data4Thrift(");
    boolean first = true;

    sb.append("string1:");
    if (this.string1 == null) {
      sb.append("null");
    } else {
      sb.append(this.string1);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("string2:");
    if (this.string2 == null) {
      sb.append("null");
    } else {
      sb.append(this.string2);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("string3:");
    if (this.string3 == null) {
      sb.append("null");
    } else {
      sb.append(this.string3);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("string4:");
    if (this.string4 == null) {
      sb.append("null");
    } else {
      sb.append(this.string4);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("string5:");
    if (this.string5 == null) {
      sb.append("null");
    } else {
      sb.append(this.string5);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("string6:");
    if (this.string6 == null) {
      sb.append("null");
    } else {
      sb.append(this.string6);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("string7:");
    if (this.string7 == null) {
      sb.append("null");
    } else {
      sb.append(this.string7);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("string8:");
    if (this.string8 == null) {
      sb.append("null");
    } else {
      sb.append(this.string8);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("string9:");
    if (this.string9 == null) {
      sb.append("null");
    } else {
      sb.append(this.string9);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("string10:");
    if (this.string10 == null) {
      sb.append("null");
    } else {
      sb.append(this.string10);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("string11:");
    if (this.string11 == null) {
      sb.append("null");
    } else {
      sb.append(this.string11);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("string12:");
    if (this.string12 == null) {
      sb.append("null");
    } else {
      sb.append(this.string12);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("string13:");
    if (this.string13 == null) {
      sb.append("null");
    } else {
      sb.append(this.string13);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("string14:");
    if (this.string14 == null) {
      sb.append("null");
    } else {
      sb.append(this.string14);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("string15:");
    if (this.string15 == null) {
      sb.append("null");
    } else {
      sb.append(this.string15);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("string16:");
    if (this.string16 == null) {
      sb.append("null");
    } else {
      sb.append(this.string16);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("string17:");
    if (this.string17 == null) {
      sb.append("null");
    } else {
      sb.append(this.string17);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("string18:");
    if (this.string18 == null) {
      sb.append("null");
    } else {
      sb.append(this.string18);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("string19:");
    if (this.string19 == null) {
      sb.append("null");
    } else {
      sb.append(this.string19);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("string20:");
    if (this.string20 == null) {
      sb.append("null");
    } else {
      sb.append(this.string20);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class Data4ThriftStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public Data4ThriftStandardScheme getScheme() {
      return new Data4ThriftStandardScheme();
    }
  }

  private static class Data4ThriftStandardScheme extends org.apache.thrift.scheme.StandardScheme<Data4Thrift> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, Data4Thrift struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // STRING1
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.string1 = iprot.readString();
              struct.setString1IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // STRING2
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.string2 = iprot.readString();
              struct.setString2IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // STRING3
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.string3 = iprot.readString();
              struct.setString3IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // STRING4
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.string4 = iprot.readString();
              struct.setString4IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // STRING5
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.string5 = iprot.readString();
              struct.setString5IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // STRING6
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.string6 = iprot.readString();
              struct.setString6IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // STRING7
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.string7 = iprot.readString();
              struct.setString7IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // STRING8
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.string8 = iprot.readString();
              struct.setString8IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // STRING9
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.string9 = iprot.readString();
              struct.setString9IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // STRING10
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.string10 = iprot.readString();
              struct.setString10IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // STRING11
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.string11 = iprot.readString();
              struct.setString11IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // STRING12
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.string12 = iprot.readString();
              struct.setString12IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // STRING13
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.string13 = iprot.readString();
              struct.setString13IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // STRING14
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.string14 = iprot.readString();
              struct.setString14IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // STRING15
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.string15 = iprot.readString();
              struct.setString15IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // STRING16
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.string16 = iprot.readString();
              struct.setString16IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // STRING17
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.string17 = iprot.readString();
              struct.setString17IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // STRING18
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.string18 = iprot.readString();
              struct.setString18IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // STRING19
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.string19 = iprot.readString();
              struct.setString19IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // STRING20
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.string20 = iprot.readString();
              struct.setString20IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, Data4Thrift struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.string1 != null) {
        oprot.writeFieldBegin(STRING1_FIELD_DESC);
        oprot.writeString(struct.string1);
        oprot.writeFieldEnd();
      }
      if (struct.string2 != null) {
        oprot.writeFieldBegin(STRING2_FIELD_DESC);
        oprot.writeString(struct.string2);
        oprot.writeFieldEnd();
      }
      if (struct.string3 != null) {
        oprot.writeFieldBegin(STRING3_FIELD_DESC);
        oprot.writeString(struct.string3);
        oprot.writeFieldEnd();
      }
      if (struct.string4 != null) {
        oprot.writeFieldBegin(STRING4_FIELD_DESC);
        oprot.writeString(struct.string4);
        oprot.writeFieldEnd();
      }
      if (struct.string5 != null) {
        oprot.writeFieldBegin(STRING5_FIELD_DESC);
        oprot.writeString(struct.string5);
        oprot.writeFieldEnd();
      }
      if (struct.string6 != null) {
        oprot.writeFieldBegin(STRING6_FIELD_DESC);
        oprot.writeString(struct.string6);
        oprot.writeFieldEnd();
      }
      if (struct.string7 != null) {
        oprot.writeFieldBegin(STRING7_FIELD_DESC);
        oprot.writeString(struct.string7);
        oprot.writeFieldEnd();
      }
      if (struct.string8 != null) {
        oprot.writeFieldBegin(STRING8_FIELD_DESC);
        oprot.writeString(struct.string8);
        oprot.writeFieldEnd();
      }
      if (struct.string9 != null) {
        oprot.writeFieldBegin(STRING9_FIELD_DESC);
        oprot.writeString(struct.string9);
        oprot.writeFieldEnd();
      }
      if (struct.string10 != null) {
        oprot.writeFieldBegin(STRING10_FIELD_DESC);
        oprot.writeString(struct.string10);
        oprot.writeFieldEnd();
      }
      if (struct.string11 != null) {
        oprot.writeFieldBegin(STRING11_FIELD_DESC);
        oprot.writeString(struct.string11);
        oprot.writeFieldEnd();
      }
      if (struct.string12 != null) {
        oprot.writeFieldBegin(STRING12_FIELD_DESC);
        oprot.writeString(struct.string12);
        oprot.writeFieldEnd();
      }
      if (struct.string13 != null) {
        oprot.writeFieldBegin(STRING13_FIELD_DESC);
        oprot.writeString(struct.string13);
        oprot.writeFieldEnd();
      }
      if (struct.string14 != null) {
        oprot.writeFieldBegin(STRING14_FIELD_DESC);
        oprot.writeString(struct.string14);
        oprot.writeFieldEnd();
      }
      if (struct.string15 != null) {
        oprot.writeFieldBegin(STRING15_FIELD_DESC);
        oprot.writeString(struct.string15);
        oprot.writeFieldEnd();
      }
      if (struct.string16 != null) {
        oprot.writeFieldBegin(STRING16_FIELD_DESC);
        oprot.writeString(struct.string16);
        oprot.writeFieldEnd();
      }
      if (struct.string17 != null) {
        oprot.writeFieldBegin(STRING17_FIELD_DESC);
        oprot.writeString(struct.string17);
        oprot.writeFieldEnd();
      }
      if (struct.string18 != null) {
        oprot.writeFieldBegin(STRING18_FIELD_DESC);
        oprot.writeString(struct.string18);
        oprot.writeFieldEnd();
      }
      if (struct.string19 != null) {
        oprot.writeFieldBegin(STRING19_FIELD_DESC);
        oprot.writeString(struct.string19);
        oprot.writeFieldEnd();
      }
      if (struct.string20 != null) {
        oprot.writeFieldBegin(STRING20_FIELD_DESC);
        oprot.writeString(struct.string20);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class Data4ThriftTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public Data4ThriftTupleScheme getScheme() {
      return new Data4ThriftTupleScheme();
    }
  }

  private static class Data4ThriftTupleScheme extends org.apache.thrift.scheme.TupleScheme<Data4Thrift> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, Data4Thrift struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetString1()) {
        optionals.set(0);
      }
      if (struct.isSetString2()) {
        optionals.set(1);
      }
      if (struct.isSetString3()) {
        optionals.set(2);
      }
      if (struct.isSetString4()) {
        optionals.set(3);
      }
      if (struct.isSetString5()) {
        optionals.set(4);
      }
      if (struct.isSetString6()) {
        optionals.set(5);
      }
      if (struct.isSetString7()) {
        optionals.set(6);
      }
      if (struct.isSetString8()) {
        optionals.set(7);
      }
      if (struct.isSetString9()) {
        optionals.set(8);
      }
      if (struct.isSetString10()) {
        optionals.set(9);
      }
      if (struct.isSetString11()) {
        optionals.set(10);
      }
      if (struct.isSetString12()) {
        optionals.set(11);
      }
      if (struct.isSetString13()) {
        optionals.set(12);
      }
      if (struct.isSetString14()) {
        optionals.set(13);
      }
      if (struct.isSetString15()) {
        optionals.set(14);
      }
      if (struct.isSetString16()) {
        optionals.set(15);
      }
      if (struct.isSetString17()) {
        optionals.set(16);
      }
      if (struct.isSetString18()) {
        optionals.set(17);
      }
      if (struct.isSetString19()) {
        optionals.set(18);
      }
      if (struct.isSetString20()) {
        optionals.set(19);
      }
      oprot.writeBitSet(optionals, 20);
      if (struct.isSetString1()) {
        oprot.writeString(struct.string1);
      }
      if (struct.isSetString2()) {
        oprot.writeString(struct.string2);
      }
      if (struct.isSetString3()) {
        oprot.writeString(struct.string3);
      }
      if (struct.isSetString4()) {
        oprot.writeString(struct.string4);
      }
      if (struct.isSetString5()) {
        oprot.writeString(struct.string5);
      }
      if (struct.isSetString6()) {
        oprot.writeString(struct.string6);
      }
      if (struct.isSetString7()) {
        oprot.writeString(struct.string7);
      }
      if (struct.isSetString8()) {
        oprot.writeString(struct.string8);
      }
      if (struct.isSetString9()) {
        oprot.writeString(struct.string9);
      }
      if (struct.isSetString10()) {
        oprot.writeString(struct.string10);
      }
      if (struct.isSetString11()) {
        oprot.writeString(struct.string11);
      }
      if (struct.isSetString12()) {
        oprot.writeString(struct.string12);
      }
      if (struct.isSetString13()) {
        oprot.writeString(struct.string13);
      }
      if (struct.isSetString14()) {
        oprot.writeString(struct.string14);
      }
      if (struct.isSetString15()) {
        oprot.writeString(struct.string15);
      }
      if (struct.isSetString16()) {
        oprot.writeString(struct.string16);
      }
      if (struct.isSetString17()) {
        oprot.writeString(struct.string17);
      }
      if (struct.isSetString18()) {
        oprot.writeString(struct.string18);
      }
      if (struct.isSetString19()) {
        oprot.writeString(struct.string19);
      }
      if (struct.isSetString20()) {
        oprot.writeString(struct.string20);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, Data4Thrift struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(20);
      if (incoming.get(0)) {
        struct.string1 = iprot.readString();
        struct.setString1IsSet(true);
      }
      if (incoming.get(1)) {
        struct.string2 = iprot.readString();
        struct.setString2IsSet(true);
      }
      if (incoming.get(2)) {
        struct.string3 = iprot.readString();
        struct.setString3IsSet(true);
      }
      if (incoming.get(3)) {
        struct.string4 = iprot.readString();
        struct.setString4IsSet(true);
      }
      if (incoming.get(4)) {
        struct.string5 = iprot.readString();
        struct.setString5IsSet(true);
      }
      if (incoming.get(5)) {
        struct.string6 = iprot.readString();
        struct.setString6IsSet(true);
      }
      if (incoming.get(6)) {
        struct.string7 = iprot.readString();
        struct.setString7IsSet(true);
      }
      if (incoming.get(7)) {
        struct.string8 = iprot.readString();
        struct.setString8IsSet(true);
      }
      if (incoming.get(8)) {
        struct.string9 = iprot.readString();
        struct.setString9IsSet(true);
      }
      if (incoming.get(9)) {
        struct.string10 = iprot.readString();
        struct.setString10IsSet(true);
      }
      if (incoming.get(10)) {
        struct.string11 = iprot.readString();
        struct.setString11IsSet(true);
      }
      if (incoming.get(11)) {
        struct.string12 = iprot.readString();
        struct.setString12IsSet(true);
      }
      if (incoming.get(12)) {
        struct.string13 = iprot.readString();
        struct.setString13IsSet(true);
      }
      if (incoming.get(13)) {
        struct.string14 = iprot.readString();
        struct.setString14IsSet(true);
      }
      if (incoming.get(14)) {
        struct.string15 = iprot.readString();
        struct.setString15IsSet(true);
      }
      if (incoming.get(15)) {
        struct.string16 = iprot.readString();
        struct.setString16IsSet(true);
      }
      if (incoming.get(16)) {
        struct.string17 = iprot.readString();
        struct.setString17IsSet(true);
      }
      if (incoming.get(17)) {
        struct.string18 = iprot.readString();
        struct.setString18IsSet(true);
      }
      if (incoming.get(18)) {
        struct.string19 = iprot.readString();
        struct.setString19IsSet(true);
      }
      if (incoming.get(19)) {
        struct.string20 = iprot.readString();
        struct.setString20IsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

