// automatically generated by the FlatBuffers compiler, do not modify

package generated.data1.flatbuffers;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Data1Flat extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_2_0_0(); }
  public static Data1Flat getRootAsData1Flat(ByteBuffer _bb) { return getRootAsData1Flat(_bb, new Data1Flat()); }
  public static Data1Flat getRootAsData1Flat(ByteBuffer _bb, Data1Flat obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Data1Flat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String string1() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer string1AsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer string1InByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public String string2() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer string2AsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer string2InByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public int number1() { int o = __offset(8); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public int number2() { int o = __offset(10); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public int number3() { int o = __offset(12); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public int number4() { int o = __offset(14); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public double number5() { int o = __offset(16); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }
  public double number6() { int o = __offset(18); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }
  public double number7() { int o = __offset(20); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }
  public double number8() { int o = __offset(22); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }

  public static int createData1Flat(FlatBufferBuilder builder,
      int string1Offset,
      int string2Offset,
      int number1,
      int number2,
      int number3,
      int number4,
      double number5,
      double number6,
      double number7,
      double number8) {
    builder.startTable(10);
    Data1Flat.addNumber8(builder, number8);
    Data1Flat.addNumber7(builder, number7);
    Data1Flat.addNumber6(builder, number6);
    Data1Flat.addNumber5(builder, number5);
    Data1Flat.addNumber4(builder, number4);
    Data1Flat.addNumber3(builder, number3);
    Data1Flat.addNumber2(builder, number2);
    Data1Flat.addNumber1(builder, number1);
    Data1Flat.addString2(builder, string2Offset);
    Data1Flat.addString1(builder, string1Offset);
    return Data1Flat.endData1Flat(builder);
  }

  public static void startData1Flat(FlatBufferBuilder builder) { builder.startTable(10); }
  public static void addString1(FlatBufferBuilder builder, int string1Offset) { builder.addOffset(0, string1Offset, 0); }
  public static void addString2(FlatBufferBuilder builder, int string2Offset) { builder.addOffset(1, string2Offset, 0); }
  public static void addNumber1(FlatBufferBuilder builder, int number1) { builder.addInt(2, number1, 0); }
  public static void addNumber2(FlatBufferBuilder builder, int number2) { builder.addInt(3, number2, 0); }
  public static void addNumber3(FlatBufferBuilder builder, int number3) { builder.addInt(4, number3, 0); }
  public static void addNumber4(FlatBufferBuilder builder, int number4) { builder.addInt(5, number4, 0); }
  public static void addNumber5(FlatBufferBuilder builder, double number5) { builder.addDouble(6, number5, 0.0); }
  public static void addNumber6(FlatBufferBuilder builder, double number6) { builder.addDouble(7, number6, 0.0); }
  public static void addNumber7(FlatBufferBuilder builder, double number7) { builder.addDouble(8, number7, 0.0); }
  public static void addNumber8(FlatBufferBuilder builder, double number8) { builder.addDouble(9, number8, 0.0); }
  public static int endData1Flat(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Data1Flat get(int j) { return get(new Data1Flat(), j); }
    public Data1Flat get(Data1Flat obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

