/**
 * Autogenerated by Thrift Compiler (0.16.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package generated.data6.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.16.0)", date = "2022-07-20")
public class Data6Thrift implements org.apache.thrift.TBase<Data6Thrift, Data6Thrift._Fields>, java.io.Serializable, Cloneable, Comparable<Data6Thrift> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Data6Thrift");

  private static final org.apache.thrift.protocol.TField STRING1_FIELD_DESC = new org.apache.thrift.protocol.TField("string1", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField STRING2_FIELD_DESC = new org.apache.thrift.protocol.TField("string2", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField STRING3_FIELD_DESC = new org.apache.thrift.protocol.TField("string3", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField STRING4_FIELD_DESC = new org.apache.thrift.protocol.TField("string4", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField STRING5_FIELD_DESC = new org.apache.thrift.protocol.TField("string5", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField STRING6_FIELD_DESC = new org.apache.thrift.protocol.TField("string6", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField STRING7_FIELD_DESC = new org.apache.thrift.protocol.TField("string7", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField STRING8_FIELD_DESC = new org.apache.thrift.protocol.TField("string8", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField STRING9_FIELD_DESC = new org.apache.thrift.protocol.TField("string9", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField STRING10_FIELD_DESC = new org.apache.thrift.protocol.TField("string10", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField STRING11_FIELD_DESC = new org.apache.thrift.protocol.TField("string11", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField STRING12_FIELD_DESC = new org.apache.thrift.protocol.TField("string12", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField STRING13_FIELD_DESC = new org.apache.thrift.protocol.TField("string13", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField STRING14_FIELD_DESC = new org.apache.thrift.protocol.TField("string14", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField STRING15_FIELD_DESC = new org.apache.thrift.protocol.TField("string15", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField STRING16_FIELD_DESC = new org.apache.thrift.protocol.TField("string16", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField STRING17_FIELD_DESC = new org.apache.thrift.protocol.TField("string17", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField STRING18_FIELD_DESC = new org.apache.thrift.protocol.TField("string18", org.apache.thrift.protocol.TType.STRING, (short)18);
  private static final org.apache.thrift.protocol.TField STRING19_FIELD_DESC = new org.apache.thrift.protocol.TField("string19", org.apache.thrift.protocol.TType.STRING, (short)19);
  private static final org.apache.thrift.protocol.TField STRING20_FIELD_DESC = new org.apache.thrift.protocol.TField("string20", org.apache.thrift.protocol.TType.STRING, (short)20);
  private static final org.apache.thrift.protocol.TField STRING21_FIELD_DESC = new org.apache.thrift.protocol.TField("string21", org.apache.thrift.protocol.TType.STRING, (short)21);
  private static final org.apache.thrift.protocol.TField STRING22_FIELD_DESC = new org.apache.thrift.protocol.TField("string22", org.apache.thrift.protocol.TType.STRING, (short)22);
  private static final org.apache.thrift.protocol.TField STRING23_FIELD_DESC = new org.apache.thrift.protocol.TField("string23", org.apache.thrift.protocol.TType.STRING, (short)23);
  private static final org.apache.thrift.protocol.TField STRING24_FIELD_DESC = new org.apache.thrift.protocol.TField("string24", org.apache.thrift.protocol.TType.STRING, (short)24);
  private static final org.apache.thrift.protocol.TField STRING25_FIELD_DESC = new org.apache.thrift.protocol.TField("string25", org.apache.thrift.protocol.TType.STRING, (short)25);
  private static final org.apache.thrift.protocol.TField STRING26_FIELD_DESC = new org.apache.thrift.protocol.TField("string26", org.apache.thrift.protocol.TType.STRING, (short)26);
  private static final org.apache.thrift.protocol.TField STRING27_FIELD_DESC = new org.apache.thrift.protocol.TField("string27", org.apache.thrift.protocol.TType.STRING, (short)27);
  private static final org.apache.thrift.protocol.TField STRING28_FIELD_DESC = new org.apache.thrift.protocol.TField("string28", org.apache.thrift.protocol.TType.STRING, (short)28);
  private static final org.apache.thrift.protocol.TField STRING29_FIELD_DESC = new org.apache.thrift.protocol.TField("string29", org.apache.thrift.protocol.TType.STRING, (short)29);
  private static final org.apache.thrift.protocol.TField STRING30_FIELD_DESC = new org.apache.thrift.protocol.TField("string30", org.apache.thrift.protocol.TType.STRING, (short)30);
  private static final org.apache.thrift.protocol.TField NUMBER1_FIELD_DESC = new org.apache.thrift.protocol.TField("number1", org.apache.thrift.protocol.TType.I32, (short)31);
  private static final org.apache.thrift.protocol.TField NUMBER2_FIELD_DESC = new org.apache.thrift.protocol.TField("number2", org.apache.thrift.protocol.TType.I32, (short)32);
  private static final org.apache.thrift.protocol.TField NUMBER3_FIELD_DESC = new org.apache.thrift.protocol.TField("number3", org.apache.thrift.protocol.TType.I32, (short)33);
  private static final org.apache.thrift.protocol.TField NUMBER4_FIELD_DESC = new org.apache.thrift.protocol.TField("number4", org.apache.thrift.protocol.TType.I32, (short)34);
  private static final org.apache.thrift.protocol.TField NUMBER5_FIELD_DESC = new org.apache.thrift.protocol.TField("number5", org.apache.thrift.protocol.TType.I32, (short)35);
  private static final org.apache.thrift.protocol.TField NUMBER6_FIELD_DESC = new org.apache.thrift.protocol.TField("number6", org.apache.thrift.protocol.TType.I32, (short)36);
  private static final org.apache.thrift.protocol.TField NUMBER7_FIELD_DESC = new org.apache.thrift.protocol.TField("number7", org.apache.thrift.protocol.TType.I32, (short)37);
  private static final org.apache.thrift.protocol.TField NUMBER8_FIELD_DESC = new org.apache.thrift.protocol.TField("number8", org.apache.thrift.protocol.TType.I32, (short)38);
  private static final org.apache.thrift.protocol.TField NUMBER9_FIELD_DESC = new org.apache.thrift.protocol.TField("number9", org.apache.thrift.protocol.TType.I32, (short)39);
  private static final org.apache.thrift.protocol.TField NUMBER10_FIELD_DESC = new org.apache.thrift.protocol.TField("number10", org.apache.thrift.protocol.TType.I32, (short)40);
  private static final org.apache.thrift.protocol.TField NUMBER11_FIELD_DESC = new org.apache.thrift.protocol.TField("number11", org.apache.thrift.protocol.TType.I32, (short)41);
  private static final org.apache.thrift.protocol.TField NUMBER12_FIELD_DESC = new org.apache.thrift.protocol.TField("number12", org.apache.thrift.protocol.TType.I32, (short)42);
  private static final org.apache.thrift.protocol.TField NUMBER13_FIELD_DESC = new org.apache.thrift.protocol.TField("number13", org.apache.thrift.protocol.TType.I32, (short)43);
  private static final org.apache.thrift.protocol.TField NUMBER14_FIELD_DESC = new org.apache.thrift.protocol.TField("number14", org.apache.thrift.protocol.TType.I32, (short)44);
  private static final org.apache.thrift.protocol.TField NUMBER15_FIELD_DESC = new org.apache.thrift.protocol.TField("number15", org.apache.thrift.protocol.TType.I32, (short)45);
  private static final org.apache.thrift.protocol.TField NUMBER16_FIELD_DESC = new org.apache.thrift.protocol.TField("number16", org.apache.thrift.protocol.TType.I32, (short)46);
  private static final org.apache.thrift.protocol.TField NUMBER17_FIELD_DESC = new org.apache.thrift.protocol.TField("number17", org.apache.thrift.protocol.TType.I32, (short)47);
  private static final org.apache.thrift.protocol.TField NUMBER18_FIELD_DESC = new org.apache.thrift.protocol.TField("number18", org.apache.thrift.protocol.TType.I32, (short)48);
  private static final org.apache.thrift.protocol.TField NUMBER19_FIELD_DESC = new org.apache.thrift.protocol.TField("number19", org.apache.thrift.protocol.TType.I32, (short)49);
  private static final org.apache.thrift.protocol.TField NUMBER20_FIELD_DESC = new org.apache.thrift.protocol.TField("number20", org.apache.thrift.protocol.TType.I32, (short)50);
  private static final org.apache.thrift.protocol.TField NUMBER21_FIELD_DESC = new org.apache.thrift.protocol.TField("number21", org.apache.thrift.protocol.TType.I32, (short)51);
  private static final org.apache.thrift.protocol.TField NUMBER22_FIELD_DESC = new org.apache.thrift.protocol.TField("number22", org.apache.thrift.protocol.TType.I32, (short)52);
  private static final org.apache.thrift.protocol.TField NUMBER23_FIELD_DESC = new org.apache.thrift.protocol.TField("number23", org.apache.thrift.protocol.TType.I32, (short)53);
  private static final org.apache.thrift.protocol.TField NUMBER24_FIELD_DESC = new org.apache.thrift.protocol.TField("number24", org.apache.thrift.protocol.TType.I32, (short)54);
  private static final org.apache.thrift.protocol.TField NUMBER25_FIELD_DESC = new org.apache.thrift.protocol.TField("number25", org.apache.thrift.protocol.TType.I32, (short)55);
  private static final org.apache.thrift.protocol.TField NUMBER26_FIELD_DESC = new org.apache.thrift.protocol.TField("number26", org.apache.thrift.protocol.TType.I32, (short)56);
  private static final org.apache.thrift.protocol.TField NUMBER27_FIELD_DESC = new org.apache.thrift.protocol.TField("number27", org.apache.thrift.protocol.TType.I32, (short)57);
  private static final org.apache.thrift.protocol.TField NUMBER28_FIELD_DESC = new org.apache.thrift.protocol.TField("number28", org.apache.thrift.protocol.TType.I32, (short)58);
  private static final org.apache.thrift.protocol.TField NUMBER29_FIELD_DESC = new org.apache.thrift.protocol.TField("number29", org.apache.thrift.protocol.TType.I32, (short)59);
  private static final org.apache.thrift.protocol.TField NUMBER30_FIELD_DESC = new org.apache.thrift.protocol.TField("number30", org.apache.thrift.protocol.TType.I32, (short)60);
  private static final org.apache.thrift.protocol.TField NUMBER31_FIELD_DESC = new org.apache.thrift.protocol.TField("number31", org.apache.thrift.protocol.TType.I32, (short)61);
  private static final org.apache.thrift.protocol.TField NUMBER32_FIELD_DESC = new org.apache.thrift.protocol.TField("number32", org.apache.thrift.protocol.TType.I32, (short)62);
  private static final org.apache.thrift.protocol.TField NUMBER33_FIELD_DESC = new org.apache.thrift.protocol.TField("number33", org.apache.thrift.protocol.TType.I32, (short)63);
  private static final org.apache.thrift.protocol.TField NUMBER34_FIELD_DESC = new org.apache.thrift.protocol.TField("number34", org.apache.thrift.protocol.TType.I32, (short)64);
  private static final org.apache.thrift.protocol.TField NUMBER35_FIELD_DESC = new org.apache.thrift.protocol.TField("number35", org.apache.thrift.protocol.TType.I32, (short)65);
  private static final org.apache.thrift.protocol.TField NUMBER36_FIELD_DESC = new org.apache.thrift.protocol.TField("number36", org.apache.thrift.protocol.TType.I32, (short)66);
  private static final org.apache.thrift.protocol.TField NUMBER37_FIELD_DESC = new org.apache.thrift.protocol.TField("number37", org.apache.thrift.protocol.TType.I32, (short)67);
  private static final org.apache.thrift.protocol.TField NUMBER38_FIELD_DESC = new org.apache.thrift.protocol.TField("number38", org.apache.thrift.protocol.TType.I32, (short)68);
  private static final org.apache.thrift.protocol.TField NUMBER39_FIELD_DESC = new org.apache.thrift.protocol.TField("number39", org.apache.thrift.protocol.TType.I32, (short)69);
  private static final org.apache.thrift.protocol.TField NUMBER40_FIELD_DESC = new org.apache.thrift.protocol.TField("number40", org.apache.thrift.protocol.TType.I32, (short)70);
  private static final org.apache.thrift.protocol.TField NUMBER41_FIELD_DESC = new org.apache.thrift.protocol.TField("number41", org.apache.thrift.protocol.TType.I32, (short)71);
  private static final org.apache.thrift.protocol.TField NUMBER42_FIELD_DESC = new org.apache.thrift.protocol.TField("number42", org.apache.thrift.protocol.TType.I32, (short)72);
  private static final org.apache.thrift.protocol.TField NUMBER43_FIELD_DESC = new org.apache.thrift.protocol.TField("number43", org.apache.thrift.protocol.TType.I32, (short)73);
  private static final org.apache.thrift.protocol.TField NUMBER44_FIELD_DESC = new org.apache.thrift.protocol.TField("number44", org.apache.thrift.protocol.TType.I32, (short)74);
  private static final org.apache.thrift.protocol.TField NUMBER45_FIELD_DESC = new org.apache.thrift.protocol.TField("number45", org.apache.thrift.protocol.TType.I32, (short)75);
  private static final org.apache.thrift.protocol.TField NUMBER46_FIELD_DESC = new org.apache.thrift.protocol.TField("number46", org.apache.thrift.protocol.TType.I32, (short)76);
  private static final org.apache.thrift.protocol.TField NUMBER47_FIELD_DESC = new org.apache.thrift.protocol.TField("number47", org.apache.thrift.protocol.TType.I32, (short)77);
  private static final org.apache.thrift.protocol.TField NUMBER48_FIELD_DESC = new org.apache.thrift.protocol.TField("number48", org.apache.thrift.protocol.TType.I32, (short)78);
  private static final org.apache.thrift.protocol.TField NUMBER49_FIELD_DESC = new org.apache.thrift.protocol.TField("number49", org.apache.thrift.protocol.TType.I32, (short)79);
  private static final org.apache.thrift.protocol.TField NUMBER50_FIELD_DESC = new org.apache.thrift.protocol.TField("number50", org.apache.thrift.protocol.TType.I32, (short)80);
  private static final org.apache.thrift.protocol.TField NUMBER51_FIELD_DESC = new org.apache.thrift.protocol.TField("number51", org.apache.thrift.protocol.TType.I32, (short)81);
  private static final org.apache.thrift.protocol.TField NUMBER52_FIELD_DESC = new org.apache.thrift.protocol.TField("number52", org.apache.thrift.protocol.TType.I32, (short)82);
  private static final org.apache.thrift.protocol.TField NUMBER53_FIELD_DESC = new org.apache.thrift.protocol.TField("number53", org.apache.thrift.protocol.TType.I32, (short)83);
  private static final org.apache.thrift.protocol.TField NUMBER54_FIELD_DESC = new org.apache.thrift.protocol.TField("number54", org.apache.thrift.protocol.TType.I32, (short)84);
  private static final org.apache.thrift.protocol.TField NUMBER55_FIELD_DESC = new org.apache.thrift.protocol.TField("number55", org.apache.thrift.protocol.TType.I32, (short)85);
  private static final org.apache.thrift.protocol.TField NUMBER56_FIELD_DESC = new org.apache.thrift.protocol.TField("number56", org.apache.thrift.protocol.TType.I32, (short)86);
  private static final org.apache.thrift.protocol.TField NUMBER57_FIELD_DESC = new org.apache.thrift.protocol.TField("number57", org.apache.thrift.protocol.TType.I32, (short)87);
  private static final org.apache.thrift.protocol.TField NUMBER58_FIELD_DESC = new org.apache.thrift.protocol.TField("number58", org.apache.thrift.protocol.TType.I32, (short)88);
  private static final org.apache.thrift.protocol.TField NUMBER59_FIELD_DESC = new org.apache.thrift.protocol.TField("number59", org.apache.thrift.protocol.TType.I32, (short)89);
  private static final org.apache.thrift.protocol.TField NUMBER60_FIELD_DESC = new org.apache.thrift.protocol.TField("number60", org.apache.thrift.protocol.TType.I32, (short)90);
  private static final org.apache.thrift.protocol.TField NUMBER61_FIELD_DESC = new org.apache.thrift.protocol.TField("number61", org.apache.thrift.protocol.TType.I32, (short)91);
  private static final org.apache.thrift.protocol.TField NUMBER62_FIELD_DESC = new org.apache.thrift.protocol.TField("number62", org.apache.thrift.protocol.TType.I32, (short)92);
  private static final org.apache.thrift.protocol.TField NUMBER63_FIELD_DESC = new org.apache.thrift.protocol.TField("number63", org.apache.thrift.protocol.TType.I32, (short)93);
  private static final org.apache.thrift.protocol.TField NUMBER64_FIELD_DESC = new org.apache.thrift.protocol.TField("number64", org.apache.thrift.protocol.TType.I32, (short)94);
  private static final org.apache.thrift.protocol.TField NUMBER65_FIELD_DESC = new org.apache.thrift.protocol.TField("number65", org.apache.thrift.protocol.TType.I32, (short)95);
  private static final org.apache.thrift.protocol.TField NUMBER66_FIELD_DESC = new org.apache.thrift.protocol.TField("number66", org.apache.thrift.protocol.TType.I32, (short)96);
  private static final org.apache.thrift.protocol.TField NUMBER67_FIELD_DESC = new org.apache.thrift.protocol.TField("number67", org.apache.thrift.protocol.TType.I32, (short)97);
  private static final org.apache.thrift.protocol.TField NUMBER68_FIELD_DESC = new org.apache.thrift.protocol.TField("number68", org.apache.thrift.protocol.TType.I32, (short)98);
  private static final org.apache.thrift.protocol.TField NUMBER69_FIELD_DESC = new org.apache.thrift.protocol.TField("number69", org.apache.thrift.protocol.TType.I32, (short)99);
  private static final org.apache.thrift.protocol.TField NUMBER70_FIELD_DESC = new org.apache.thrift.protocol.TField("number70", org.apache.thrift.protocol.TType.I32, (short)100);
  private static final org.apache.thrift.protocol.TField NUMBER71_FIELD_DESC = new org.apache.thrift.protocol.TField("number71", org.apache.thrift.protocol.TType.I32, (short)101);
  private static final org.apache.thrift.protocol.TField NUMBER72_FIELD_DESC = new org.apache.thrift.protocol.TField("number72", org.apache.thrift.protocol.TType.I32, (short)102);
  private static final org.apache.thrift.protocol.TField NUMBER73_FIELD_DESC = new org.apache.thrift.protocol.TField("number73", org.apache.thrift.protocol.TType.I32, (short)103);
  private static final org.apache.thrift.protocol.TField NUMBER74_FIELD_DESC = new org.apache.thrift.protocol.TField("number74", org.apache.thrift.protocol.TType.I32, (short)104);
  private static final org.apache.thrift.protocol.TField NUMBER75_FIELD_DESC = new org.apache.thrift.protocol.TField("number75", org.apache.thrift.protocol.TType.I32, (short)105);
  private static final org.apache.thrift.protocol.TField NUMBER76_FIELD_DESC = new org.apache.thrift.protocol.TField("number76", org.apache.thrift.protocol.TType.I32, (short)106);
  private static final org.apache.thrift.protocol.TField NUMBER77_FIELD_DESC = new org.apache.thrift.protocol.TField("number77", org.apache.thrift.protocol.TType.I32, (short)107);
  private static final org.apache.thrift.protocol.TField NUMBER78_FIELD_DESC = new org.apache.thrift.protocol.TField("number78", org.apache.thrift.protocol.TType.I32, (short)108);
  private static final org.apache.thrift.protocol.TField NUMBER79_FIELD_DESC = new org.apache.thrift.protocol.TField("number79", org.apache.thrift.protocol.TType.I32, (short)109);
  private static final org.apache.thrift.protocol.TField NUMBER80_FIELD_DESC = new org.apache.thrift.protocol.TField("number80", org.apache.thrift.protocol.TType.I32, (short)110);
  private static final org.apache.thrift.protocol.TField NUMBER81_FIELD_DESC = new org.apache.thrift.protocol.TField("number81", org.apache.thrift.protocol.TType.I32, (short)111);
  private static final org.apache.thrift.protocol.TField NUMBER82_FIELD_DESC = new org.apache.thrift.protocol.TField("number82", org.apache.thrift.protocol.TType.I32, (short)112);
  private static final org.apache.thrift.protocol.TField NUMBER83_FIELD_DESC = new org.apache.thrift.protocol.TField("number83", org.apache.thrift.protocol.TType.I32, (short)113);
  private static final org.apache.thrift.protocol.TField NUMBER84_FIELD_DESC = new org.apache.thrift.protocol.TField("number84", org.apache.thrift.protocol.TType.I32, (short)114);
  private static final org.apache.thrift.protocol.TField NUMBER85_FIELD_DESC = new org.apache.thrift.protocol.TField("number85", org.apache.thrift.protocol.TType.I32, (short)115);
  private static final org.apache.thrift.protocol.TField NUMBER86_FIELD_DESC = new org.apache.thrift.protocol.TField("number86", org.apache.thrift.protocol.TType.I32, (short)116);
  private static final org.apache.thrift.protocol.TField NUMBER87_FIELD_DESC = new org.apache.thrift.protocol.TField("number87", org.apache.thrift.protocol.TType.I32, (short)117);
  private static final org.apache.thrift.protocol.TField NUMBER88_FIELD_DESC = new org.apache.thrift.protocol.TField("number88", org.apache.thrift.protocol.TType.I32, (short)118);
  private static final org.apache.thrift.protocol.TField NUMBER89_FIELD_DESC = new org.apache.thrift.protocol.TField("number89", org.apache.thrift.protocol.TType.I32, (short)119);
  private static final org.apache.thrift.protocol.TField NUMBER90_FIELD_DESC = new org.apache.thrift.protocol.TField("number90", org.apache.thrift.protocol.TType.I32, (short)120);
  private static final org.apache.thrift.protocol.TField NUMBER91_FIELD_DESC = new org.apache.thrift.protocol.TField("number91", org.apache.thrift.protocol.TType.I32, (short)121);
  private static final org.apache.thrift.protocol.TField NUMBER92_FIELD_DESC = new org.apache.thrift.protocol.TField("number92", org.apache.thrift.protocol.TType.I32, (short)122);
  private static final org.apache.thrift.protocol.TField NUMBER93_FIELD_DESC = new org.apache.thrift.protocol.TField("number93", org.apache.thrift.protocol.TType.I32, (short)123);
  private static final org.apache.thrift.protocol.TField NUMBER94_FIELD_DESC = new org.apache.thrift.protocol.TField("number94", org.apache.thrift.protocol.TType.I32, (short)124);
  private static final org.apache.thrift.protocol.TField NUMBER95_FIELD_DESC = new org.apache.thrift.protocol.TField("number95", org.apache.thrift.protocol.TType.I32, (short)125);
  private static final org.apache.thrift.protocol.TField NUMBER96_FIELD_DESC = new org.apache.thrift.protocol.TField("number96", org.apache.thrift.protocol.TType.I32, (short)126);
  private static final org.apache.thrift.protocol.TField NUMBER97_FIELD_DESC = new org.apache.thrift.protocol.TField("number97", org.apache.thrift.protocol.TType.I32, (short)127);
  private static final org.apache.thrift.protocol.TField NUMBER98_FIELD_DESC = new org.apache.thrift.protocol.TField("number98", org.apache.thrift.protocol.TType.I32, (short)128);
  private static final org.apache.thrift.protocol.TField NUMBER99_FIELD_DESC = new org.apache.thrift.protocol.TField("number99", org.apache.thrift.protocol.TType.I32, (short)129);
  private static final org.apache.thrift.protocol.TField NUMBER100_FIELD_DESC = new org.apache.thrift.protocol.TField("number100", org.apache.thrift.protocol.TType.I32, (short)130);
  private static final org.apache.thrift.protocol.TField NUMBER101_FIELD_DESC = new org.apache.thrift.protocol.TField("number101", org.apache.thrift.protocol.TType.I32, (short)131);
  private static final org.apache.thrift.protocol.TField NUMBER102_FIELD_DESC = new org.apache.thrift.protocol.TField("number102", org.apache.thrift.protocol.TType.I32, (short)132);
  private static final org.apache.thrift.protocol.TField NUMBER103_FIELD_DESC = new org.apache.thrift.protocol.TField("number103", org.apache.thrift.protocol.TType.I32, (short)133);
  private static final org.apache.thrift.protocol.TField NUMBER104_FIELD_DESC = new org.apache.thrift.protocol.TField("number104", org.apache.thrift.protocol.TType.I32, (short)134);
  private static final org.apache.thrift.protocol.TField NUMBER105_FIELD_DESC = new org.apache.thrift.protocol.TField("number105", org.apache.thrift.protocol.TType.I32, (short)135);
  private static final org.apache.thrift.protocol.TField NUMBER106_FIELD_DESC = new org.apache.thrift.protocol.TField("number106", org.apache.thrift.protocol.TType.I32, (short)136);
  private static final org.apache.thrift.protocol.TField NUMBER107_FIELD_DESC = new org.apache.thrift.protocol.TField("number107", org.apache.thrift.protocol.TType.I32, (short)137);
  private static final org.apache.thrift.protocol.TField NUMBER108_FIELD_DESC = new org.apache.thrift.protocol.TField("number108", org.apache.thrift.protocol.TType.I32, (short)138);
  private static final org.apache.thrift.protocol.TField NUMBER109_FIELD_DESC = new org.apache.thrift.protocol.TField("number109", org.apache.thrift.protocol.TType.I32, (short)139);
  private static final org.apache.thrift.protocol.TField NUMBER110_FIELD_DESC = new org.apache.thrift.protocol.TField("number110", org.apache.thrift.protocol.TType.I32, (short)140);
  private static final org.apache.thrift.protocol.TField NUMBER111_FIELD_DESC = new org.apache.thrift.protocol.TField("number111", org.apache.thrift.protocol.TType.I32, (short)141);
  private static final org.apache.thrift.protocol.TField NUMBER112_FIELD_DESC = new org.apache.thrift.protocol.TField("number112", org.apache.thrift.protocol.TType.I32, (short)142);
  private static final org.apache.thrift.protocol.TField NUMBER113_FIELD_DESC = new org.apache.thrift.protocol.TField("number113", org.apache.thrift.protocol.TType.I32, (short)143);
  private static final org.apache.thrift.protocol.TField NUMBER114_FIELD_DESC = new org.apache.thrift.protocol.TField("number114", org.apache.thrift.protocol.TType.I32, (short)144);
  private static final org.apache.thrift.protocol.TField NUMBER115_FIELD_DESC = new org.apache.thrift.protocol.TField("number115", org.apache.thrift.protocol.TType.I32, (short)145);
  private static final org.apache.thrift.protocol.TField NUMBER116_FIELD_DESC = new org.apache.thrift.protocol.TField("number116", org.apache.thrift.protocol.TType.I32, (short)146);
  private static final org.apache.thrift.protocol.TField NUMBER117_FIELD_DESC = new org.apache.thrift.protocol.TField("number117", org.apache.thrift.protocol.TType.I32, (short)147);
  private static final org.apache.thrift.protocol.TField NUMBER118_FIELD_DESC = new org.apache.thrift.protocol.TField("number118", org.apache.thrift.protocol.TType.I32, (short)148);
  private static final org.apache.thrift.protocol.TField NUMBER119_FIELD_DESC = new org.apache.thrift.protocol.TField("number119", org.apache.thrift.protocol.TType.I32, (short)149);
  private static final org.apache.thrift.protocol.TField NUMBER120_FIELD_DESC = new org.apache.thrift.protocol.TField("number120", org.apache.thrift.protocol.TType.I32, (short)150);
  private static final org.apache.thrift.protocol.TField NUMBER121_FIELD_DESC = new org.apache.thrift.protocol.TField("number121", org.apache.thrift.protocol.TType.DOUBLE, (short)151);
  private static final org.apache.thrift.protocol.TField NUMBER122_FIELD_DESC = new org.apache.thrift.protocol.TField("number122", org.apache.thrift.protocol.TType.DOUBLE, (short)152);
  private static final org.apache.thrift.protocol.TField NUMBER123_FIELD_DESC = new org.apache.thrift.protocol.TField("number123", org.apache.thrift.protocol.TType.DOUBLE, (short)153);
  private static final org.apache.thrift.protocol.TField NUMBER124_FIELD_DESC = new org.apache.thrift.protocol.TField("number124", org.apache.thrift.protocol.TType.DOUBLE, (short)154);
  private static final org.apache.thrift.protocol.TField NUMBER125_FIELD_DESC = new org.apache.thrift.protocol.TField("number125", org.apache.thrift.protocol.TType.DOUBLE, (short)155);
  private static final org.apache.thrift.protocol.TField NUMBER126_FIELD_DESC = new org.apache.thrift.protocol.TField("number126", org.apache.thrift.protocol.TType.DOUBLE, (short)156);
  private static final org.apache.thrift.protocol.TField NUMBER127_FIELD_DESC = new org.apache.thrift.protocol.TField("number127", org.apache.thrift.protocol.TType.DOUBLE, (short)157);
  private static final org.apache.thrift.protocol.TField NUMBER128_FIELD_DESC = new org.apache.thrift.protocol.TField("number128", org.apache.thrift.protocol.TType.DOUBLE, (short)158);
  private static final org.apache.thrift.protocol.TField NUMBER129_FIELD_DESC = new org.apache.thrift.protocol.TField("number129", org.apache.thrift.protocol.TType.DOUBLE, (short)159);
  private static final org.apache.thrift.protocol.TField NUMBER130_FIELD_DESC = new org.apache.thrift.protocol.TField("number130", org.apache.thrift.protocol.TType.DOUBLE, (short)160);
  private static final org.apache.thrift.protocol.TField NUMBER131_FIELD_DESC = new org.apache.thrift.protocol.TField("number131", org.apache.thrift.protocol.TType.DOUBLE, (short)161);
  private static final org.apache.thrift.protocol.TField NUMBER132_FIELD_DESC = new org.apache.thrift.protocol.TField("number132", org.apache.thrift.protocol.TType.DOUBLE, (short)162);
  private static final org.apache.thrift.protocol.TField NUMBER133_FIELD_DESC = new org.apache.thrift.protocol.TField("number133", org.apache.thrift.protocol.TType.DOUBLE, (short)163);
  private static final org.apache.thrift.protocol.TField NUMBER134_FIELD_DESC = new org.apache.thrift.protocol.TField("number134", org.apache.thrift.protocol.TType.DOUBLE, (short)164);
  private static final org.apache.thrift.protocol.TField NUMBER135_FIELD_DESC = new org.apache.thrift.protocol.TField("number135", org.apache.thrift.protocol.TType.DOUBLE, (short)165);
  private static final org.apache.thrift.protocol.TField NUMBER136_FIELD_DESC = new org.apache.thrift.protocol.TField("number136", org.apache.thrift.protocol.TType.DOUBLE, (short)166);
  private static final org.apache.thrift.protocol.TField NUMBER137_FIELD_DESC = new org.apache.thrift.protocol.TField("number137", org.apache.thrift.protocol.TType.DOUBLE, (short)167);
  private static final org.apache.thrift.protocol.TField NUMBER138_FIELD_DESC = new org.apache.thrift.protocol.TField("number138", org.apache.thrift.protocol.TType.DOUBLE, (short)168);
  private static final org.apache.thrift.protocol.TField NUMBER139_FIELD_DESC = new org.apache.thrift.protocol.TField("number139", org.apache.thrift.protocol.TType.DOUBLE, (short)169);
  private static final org.apache.thrift.protocol.TField NUMBER140_FIELD_DESC = new org.apache.thrift.protocol.TField("number140", org.apache.thrift.protocol.TType.DOUBLE, (short)170);
  private static final org.apache.thrift.protocol.TField NUMBER141_FIELD_DESC = new org.apache.thrift.protocol.TField("number141", org.apache.thrift.protocol.TType.DOUBLE, (short)171);
  private static final org.apache.thrift.protocol.TField NUMBER142_FIELD_DESC = new org.apache.thrift.protocol.TField("number142", org.apache.thrift.protocol.TType.DOUBLE, (short)172);
  private static final org.apache.thrift.protocol.TField NUMBER143_FIELD_DESC = new org.apache.thrift.protocol.TField("number143", org.apache.thrift.protocol.TType.DOUBLE, (short)173);
  private static final org.apache.thrift.protocol.TField NUMBER144_FIELD_DESC = new org.apache.thrift.protocol.TField("number144", org.apache.thrift.protocol.TType.DOUBLE, (short)174);
  private static final org.apache.thrift.protocol.TField NUMBER145_FIELD_DESC = new org.apache.thrift.protocol.TField("number145", org.apache.thrift.protocol.TType.DOUBLE, (short)175);
  private static final org.apache.thrift.protocol.TField NUMBER146_FIELD_DESC = new org.apache.thrift.protocol.TField("number146", org.apache.thrift.protocol.TType.DOUBLE, (short)176);
  private static final org.apache.thrift.protocol.TField NUMBER147_FIELD_DESC = new org.apache.thrift.protocol.TField("number147", org.apache.thrift.protocol.TType.DOUBLE, (short)177);
  private static final org.apache.thrift.protocol.TField NUMBER148_FIELD_DESC = new org.apache.thrift.protocol.TField("number148", org.apache.thrift.protocol.TType.DOUBLE, (short)178);
  private static final org.apache.thrift.protocol.TField NUMBER149_FIELD_DESC = new org.apache.thrift.protocol.TField("number149", org.apache.thrift.protocol.TType.DOUBLE, (short)179);
  private static final org.apache.thrift.protocol.TField NUMBER150_FIELD_DESC = new org.apache.thrift.protocol.TField("number150", org.apache.thrift.protocol.TType.DOUBLE, (short)180);
  private static final org.apache.thrift.protocol.TField NUMBER151_FIELD_DESC = new org.apache.thrift.protocol.TField("number151", org.apache.thrift.protocol.TType.DOUBLE, (short)181);
  private static final org.apache.thrift.protocol.TField NUMBER152_FIELD_DESC = new org.apache.thrift.protocol.TField("number152", org.apache.thrift.protocol.TType.DOUBLE, (short)182);
  private static final org.apache.thrift.protocol.TField NUMBER153_FIELD_DESC = new org.apache.thrift.protocol.TField("number153", org.apache.thrift.protocol.TType.DOUBLE, (short)183);
  private static final org.apache.thrift.protocol.TField NUMBER154_FIELD_DESC = new org.apache.thrift.protocol.TField("number154", org.apache.thrift.protocol.TType.DOUBLE, (short)184);
  private static final org.apache.thrift.protocol.TField NUMBER155_FIELD_DESC = new org.apache.thrift.protocol.TField("number155", org.apache.thrift.protocol.TType.DOUBLE, (short)185);
  private static final org.apache.thrift.protocol.TField NUMBER156_FIELD_DESC = new org.apache.thrift.protocol.TField("number156", org.apache.thrift.protocol.TType.DOUBLE, (short)186);
  private static final org.apache.thrift.protocol.TField NUMBER157_FIELD_DESC = new org.apache.thrift.protocol.TField("number157", org.apache.thrift.protocol.TType.DOUBLE, (short)187);
  private static final org.apache.thrift.protocol.TField NUMBER158_FIELD_DESC = new org.apache.thrift.protocol.TField("number158", org.apache.thrift.protocol.TType.DOUBLE, (short)188);
  private static final org.apache.thrift.protocol.TField NUMBER159_FIELD_DESC = new org.apache.thrift.protocol.TField("number159", org.apache.thrift.protocol.TType.DOUBLE, (short)189);
  private static final org.apache.thrift.protocol.TField NUMBER160_FIELD_DESC = new org.apache.thrift.protocol.TField("number160", org.apache.thrift.protocol.TType.DOUBLE, (short)190);
  private static final org.apache.thrift.protocol.TField NUMBER161_FIELD_DESC = new org.apache.thrift.protocol.TField("number161", org.apache.thrift.protocol.TType.DOUBLE, (short)191);
  private static final org.apache.thrift.protocol.TField NUMBER162_FIELD_DESC = new org.apache.thrift.protocol.TField("number162", org.apache.thrift.protocol.TType.DOUBLE, (short)192);
  private static final org.apache.thrift.protocol.TField NUMBER163_FIELD_DESC = new org.apache.thrift.protocol.TField("number163", org.apache.thrift.protocol.TType.DOUBLE, (short)193);
  private static final org.apache.thrift.protocol.TField NUMBER164_FIELD_DESC = new org.apache.thrift.protocol.TField("number164", org.apache.thrift.protocol.TType.DOUBLE, (short)194);
  private static final org.apache.thrift.protocol.TField NUMBER165_FIELD_DESC = new org.apache.thrift.protocol.TField("number165", org.apache.thrift.protocol.TType.DOUBLE, (short)195);
  private static final org.apache.thrift.protocol.TField NUMBER166_FIELD_DESC = new org.apache.thrift.protocol.TField("number166", org.apache.thrift.protocol.TType.DOUBLE, (short)196);
  private static final org.apache.thrift.protocol.TField NUMBER167_FIELD_DESC = new org.apache.thrift.protocol.TField("number167", org.apache.thrift.protocol.TType.DOUBLE, (short)197);
  private static final org.apache.thrift.protocol.TField NUMBER168_FIELD_DESC = new org.apache.thrift.protocol.TField("number168", org.apache.thrift.protocol.TType.DOUBLE, (short)198);
  private static final org.apache.thrift.protocol.TField NUMBER169_FIELD_DESC = new org.apache.thrift.protocol.TField("number169", org.apache.thrift.protocol.TType.DOUBLE, (short)199);
  private static final org.apache.thrift.protocol.TField NUMBER170_FIELD_DESC = new org.apache.thrift.protocol.TField("number170", org.apache.thrift.protocol.TType.DOUBLE, (short)200);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new Data6ThriftStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new Data6ThriftTupleSchemeFactory();

  public @org.apache.thrift.annotation.Nullable java.lang.String string1; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String string2; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String string3; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String string4; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String string5; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String string6; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String string7; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String string8; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String string9; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String string10; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String string11; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String string12; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String string13; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String string14; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String string15; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String string16; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String string17; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String string18; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String string19; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String string20; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String string21; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String string22; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String string23; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String string24; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String string25; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String string26; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String string27; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String string28; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String string29; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String string30; // required
  public int number1; // required
  public int number2; // required
  public int number3; // required
  public int number4; // required
  public int number5; // required
  public int number6; // required
  public int number7; // required
  public int number8; // required
  public int number9; // required
  public int number10; // required
  public int number11; // required
  public int number12; // required
  public int number13; // required
  public int number14; // required
  public int number15; // required
  public int number16; // required
  public int number17; // required
  public int number18; // required
  public int number19; // required
  public int number20; // required
  public int number21; // required
  public int number22; // required
  public int number23; // required
  public int number24; // required
  public int number25; // required
  public int number26; // required
  public int number27; // required
  public int number28; // required
  public int number29; // required
  public int number30; // required
  public int number31; // required
  public int number32; // required
  public int number33; // required
  public int number34; // required
  public int number35; // required
  public int number36; // required
  public int number37; // required
  public int number38; // required
  public int number39; // required
  public int number40; // required
  public int number41; // required
  public int number42; // required
  public int number43; // required
  public int number44; // required
  public int number45; // required
  public int number46; // required
  public int number47; // required
  public int number48; // required
  public int number49; // required
  public int number50; // required
  public int number51; // required
  public int number52; // required
  public int number53; // required
  public int number54; // required
  public int number55; // required
  public int number56; // required
  public int number57; // required
  public int number58; // required
  public int number59; // required
  public int number60; // required
  public int number61; // required
  public int number62; // required
  public int number63; // required
  public int number64; // required
  public int number65; // required
  public int number66; // required
  public int number67; // required
  public int number68; // required
  public int number69; // required
  public int number70; // required
  public int number71; // required
  public int number72; // required
  public int number73; // required
  public int number74; // required
  public int number75; // required
  public int number76; // required
  public int number77; // required
  public int number78; // required
  public int number79; // required
  public int number80; // required
  public int number81; // required
  public int number82; // required
  public int number83; // required
  public int number84; // required
  public int number85; // required
  public int number86; // required
  public int number87; // required
  public int number88; // required
  public int number89; // required
  public int number90; // required
  public int number91; // required
  public int number92; // required
  public int number93; // required
  public int number94; // required
  public int number95; // required
  public int number96; // required
  public int number97; // required
  public int number98; // required
  public int number99; // required
  public int number100; // required
  public int number101; // required
  public int number102; // required
  public int number103; // required
  public int number104; // required
  public int number105; // required
  public int number106; // required
  public int number107; // required
  public int number108; // required
  public int number109; // required
  public int number110; // required
  public int number111; // required
  public int number112; // required
  public int number113; // required
  public int number114; // required
  public int number115; // required
  public int number116; // required
  public int number117; // required
  public int number118; // required
  public int number119; // required
  public int number120; // required
  public double number121; // required
  public double number122; // required
  public double number123; // required
  public double number124; // required
  public double number125; // required
  public double number126; // required
  public double number127; // required
  public double number128; // required
  public double number129; // required
  public double number130; // required
  public double number131; // required
  public double number132; // required
  public double number133; // required
  public double number134; // required
  public double number135; // required
  public double number136; // required
  public double number137; // required
  public double number138; // required
  public double number139; // required
  public double number140; // required
  public double number141; // required
  public double number142; // required
  public double number143; // required
  public double number144; // required
  public double number145; // required
  public double number146; // required
  public double number147; // required
  public double number148; // required
  public double number149; // required
  public double number150; // required
  public double number151; // required
  public double number152; // required
  public double number153; // required
  public double number154; // required
  public double number155; // required
  public double number156; // required
  public double number157; // required
  public double number158; // required
  public double number159; // required
  public double number160; // required
  public double number161; // required
  public double number162; // required
  public double number163; // required
  public double number164; // required
  public double number165; // required
  public double number166; // required
  public double number167; // required
  public double number168; // required
  public double number169; // required
  public double number170; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    STRING1((short)1, "string1"),
    STRING2((short)2, "string2"),
    STRING3((short)3, "string3"),
    STRING4((short)4, "string4"),
    STRING5((short)5, "string5"),
    STRING6((short)6, "string6"),
    STRING7((short)7, "string7"),
    STRING8((short)8, "string8"),
    STRING9((short)9, "string9"),
    STRING10((short)10, "string10"),
    STRING11((short)11, "string11"),
    STRING12((short)12, "string12"),
    STRING13((short)13, "string13"),
    STRING14((short)14, "string14"),
    STRING15((short)15, "string15"),
    STRING16((short)16, "string16"),
    STRING17((short)17, "string17"),
    STRING18((short)18, "string18"),
    STRING19((short)19, "string19"),
    STRING20((short)20, "string20"),
    STRING21((short)21, "string21"),
    STRING22((short)22, "string22"),
    STRING23((short)23, "string23"),
    STRING24((short)24, "string24"),
    STRING25((short)25, "string25"),
    STRING26((short)26, "string26"),
    STRING27((short)27, "string27"),
    STRING28((short)28, "string28"),
    STRING29((short)29, "string29"),
    STRING30((short)30, "string30"),
    NUMBER1((short)31, "number1"),
    NUMBER2((short)32, "number2"),
    NUMBER3((short)33, "number3"),
    NUMBER4((short)34, "number4"),
    NUMBER5((short)35, "number5"),
    NUMBER6((short)36, "number6"),
    NUMBER7((short)37, "number7"),
    NUMBER8((short)38, "number8"),
    NUMBER9((short)39, "number9"),
    NUMBER10((short)40, "number10"),
    NUMBER11((short)41, "number11"),
    NUMBER12((short)42, "number12"),
    NUMBER13((short)43, "number13"),
    NUMBER14((short)44, "number14"),
    NUMBER15((short)45, "number15"),
    NUMBER16((short)46, "number16"),
    NUMBER17((short)47, "number17"),
    NUMBER18((short)48, "number18"),
    NUMBER19((short)49, "number19"),
    NUMBER20((short)50, "number20"),
    NUMBER21((short)51, "number21"),
    NUMBER22((short)52, "number22"),
    NUMBER23((short)53, "number23"),
    NUMBER24((short)54, "number24"),
    NUMBER25((short)55, "number25"),
    NUMBER26((short)56, "number26"),
    NUMBER27((short)57, "number27"),
    NUMBER28((short)58, "number28"),
    NUMBER29((short)59, "number29"),
    NUMBER30((short)60, "number30"),
    NUMBER31((short)61, "number31"),
    NUMBER32((short)62, "number32"),
    NUMBER33((short)63, "number33"),
    NUMBER34((short)64, "number34"),
    NUMBER35((short)65, "number35"),
    NUMBER36((short)66, "number36"),
    NUMBER37((short)67, "number37"),
    NUMBER38((short)68, "number38"),
    NUMBER39((short)69, "number39"),
    NUMBER40((short)70, "number40"),
    NUMBER41((short)71, "number41"),
    NUMBER42((short)72, "number42"),
    NUMBER43((short)73, "number43"),
    NUMBER44((short)74, "number44"),
    NUMBER45((short)75, "number45"),
    NUMBER46((short)76, "number46"),
    NUMBER47((short)77, "number47"),
    NUMBER48((short)78, "number48"),
    NUMBER49((short)79, "number49"),
    NUMBER50((short)80, "number50"),
    NUMBER51((short)81, "number51"),
    NUMBER52((short)82, "number52"),
    NUMBER53((short)83, "number53"),
    NUMBER54((short)84, "number54"),
    NUMBER55((short)85, "number55"),
    NUMBER56((short)86, "number56"),
    NUMBER57((short)87, "number57"),
    NUMBER58((short)88, "number58"),
    NUMBER59((short)89, "number59"),
    NUMBER60((short)90, "number60"),
    NUMBER61((short)91, "number61"),
    NUMBER62((short)92, "number62"),
    NUMBER63((short)93, "number63"),
    NUMBER64((short)94, "number64"),
    NUMBER65((short)95, "number65"),
    NUMBER66((short)96, "number66"),
    NUMBER67((short)97, "number67"),
    NUMBER68((short)98, "number68"),
    NUMBER69((short)99, "number69"),
    NUMBER70((short)100, "number70"),
    NUMBER71((short)101, "number71"),
    NUMBER72((short)102, "number72"),
    NUMBER73((short)103, "number73"),
    NUMBER74((short)104, "number74"),
    NUMBER75((short)105, "number75"),
    NUMBER76((short)106, "number76"),
    NUMBER77((short)107, "number77"),
    NUMBER78((short)108, "number78"),
    NUMBER79((short)109, "number79"),
    NUMBER80((short)110, "number80"),
    NUMBER81((short)111, "number81"),
    NUMBER82((short)112, "number82"),
    NUMBER83((short)113, "number83"),
    NUMBER84((short)114, "number84"),
    NUMBER85((short)115, "number85"),
    NUMBER86((short)116, "number86"),
    NUMBER87((short)117, "number87"),
    NUMBER88((short)118, "number88"),
    NUMBER89((short)119, "number89"),
    NUMBER90((short)120, "number90"),
    NUMBER91((short)121, "number91"),
    NUMBER92((short)122, "number92"),
    NUMBER93((short)123, "number93"),
    NUMBER94((short)124, "number94"),
    NUMBER95((short)125, "number95"),
    NUMBER96((short)126, "number96"),
    NUMBER97((short)127, "number97"),
    NUMBER98((short)128, "number98"),
    NUMBER99((short)129, "number99"),
    NUMBER100((short)130, "number100"),
    NUMBER101((short)131, "number101"),
    NUMBER102((short)132, "number102"),
    NUMBER103((short)133, "number103"),
    NUMBER104((short)134, "number104"),
    NUMBER105((short)135, "number105"),
    NUMBER106((short)136, "number106"),
    NUMBER107((short)137, "number107"),
    NUMBER108((short)138, "number108"),
    NUMBER109((short)139, "number109"),
    NUMBER110((short)140, "number110"),
    NUMBER111((short)141, "number111"),
    NUMBER112((short)142, "number112"),
    NUMBER113((short)143, "number113"),
    NUMBER114((short)144, "number114"),
    NUMBER115((short)145, "number115"),
    NUMBER116((short)146, "number116"),
    NUMBER117((short)147, "number117"),
    NUMBER118((short)148, "number118"),
    NUMBER119((short)149, "number119"),
    NUMBER120((short)150, "number120"),
    NUMBER121((short)151, "number121"),
    NUMBER122((short)152, "number122"),
    NUMBER123((short)153, "number123"),
    NUMBER124((short)154, "number124"),
    NUMBER125((short)155, "number125"),
    NUMBER126((short)156, "number126"),
    NUMBER127((short)157, "number127"),
    NUMBER128((short)158, "number128"),
    NUMBER129((short)159, "number129"),
    NUMBER130((short)160, "number130"),
    NUMBER131((short)161, "number131"),
    NUMBER132((short)162, "number132"),
    NUMBER133((short)163, "number133"),
    NUMBER134((short)164, "number134"),
    NUMBER135((short)165, "number135"),
    NUMBER136((short)166, "number136"),
    NUMBER137((short)167, "number137"),
    NUMBER138((short)168, "number138"),
    NUMBER139((short)169, "number139"),
    NUMBER140((short)170, "number140"),
    NUMBER141((short)171, "number141"),
    NUMBER142((short)172, "number142"),
    NUMBER143((short)173, "number143"),
    NUMBER144((short)174, "number144"),
    NUMBER145((short)175, "number145"),
    NUMBER146((short)176, "number146"),
    NUMBER147((short)177, "number147"),
    NUMBER148((short)178, "number148"),
    NUMBER149((short)179, "number149"),
    NUMBER150((short)180, "number150"),
    NUMBER151((short)181, "number151"),
    NUMBER152((short)182, "number152"),
    NUMBER153((short)183, "number153"),
    NUMBER154((short)184, "number154"),
    NUMBER155((short)185, "number155"),
    NUMBER156((short)186, "number156"),
    NUMBER157((short)187, "number157"),
    NUMBER158((short)188, "number158"),
    NUMBER159((short)189, "number159"),
    NUMBER160((short)190, "number160"),
    NUMBER161((short)191, "number161"),
    NUMBER162((short)192, "number162"),
    NUMBER163((short)193, "number163"),
    NUMBER164((short)194, "number164"),
    NUMBER165((short)195, "number165"),
    NUMBER166((short)196, "number166"),
    NUMBER167((short)197, "number167"),
    NUMBER168((short)198, "number168"),
    NUMBER169((short)199, "number169"),
    NUMBER170((short)200, "number170");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // STRING1
          return STRING1;
        case 2: // STRING2
          return STRING2;
        case 3: // STRING3
          return STRING3;
        case 4: // STRING4
          return STRING4;
        case 5: // STRING5
          return STRING5;
        case 6: // STRING6
          return STRING6;
        case 7: // STRING7
          return STRING7;
        case 8: // STRING8
          return STRING8;
        case 9: // STRING9
          return STRING9;
        case 10: // STRING10
          return STRING10;
        case 11: // STRING11
          return STRING11;
        case 12: // STRING12
          return STRING12;
        case 13: // STRING13
          return STRING13;
        case 14: // STRING14
          return STRING14;
        case 15: // STRING15
          return STRING15;
        case 16: // STRING16
          return STRING16;
        case 17: // STRING17
          return STRING17;
        case 18: // STRING18
          return STRING18;
        case 19: // STRING19
          return STRING19;
        case 20: // STRING20
          return STRING20;
        case 21: // STRING21
          return STRING21;
        case 22: // STRING22
          return STRING22;
        case 23: // STRING23
          return STRING23;
        case 24: // STRING24
          return STRING24;
        case 25: // STRING25
          return STRING25;
        case 26: // STRING26
          return STRING26;
        case 27: // STRING27
          return STRING27;
        case 28: // STRING28
          return STRING28;
        case 29: // STRING29
          return STRING29;
        case 30: // STRING30
          return STRING30;
        case 31: // NUMBER1
          return NUMBER1;
        case 32: // NUMBER2
          return NUMBER2;
        case 33: // NUMBER3
          return NUMBER3;
        case 34: // NUMBER4
          return NUMBER4;
        case 35: // NUMBER5
          return NUMBER5;
        case 36: // NUMBER6
          return NUMBER6;
        case 37: // NUMBER7
          return NUMBER7;
        case 38: // NUMBER8
          return NUMBER8;
        case 39: // NUMBER9
          return NUMBER9;
        case 40: // NUMBER10
          return NUMBER10;
        case 41: // NUMBER11
          return NUMBER11;
        case 42: // NUMBER12
          return NUMBER12;
        case 43: // NUMBER13
          return NUMBER13;
        case 44: // NUMBER14
          return NUMBER14;
        case 45: // NUMBER15
          return NUMBER15;
        case 46: // NUMBER16
          return NUMBER16;
        case 47: // NUMBER17
          return NUMBER17;
        case 48: // NUMBER18
          return NUMBER18;
        case 49: // NUMBER19
          return NUMBER19;
        case 50: // NUMBER20
          return NUMBER20;
        case 51: // NUMBER21
          return NUMBER21;
        case 52: // NUMBER22
          return NUMBER22;
        case 53: // NUMBER23
          return NUMBER23;
        case 54: // NUMBER24
          return NUMBER24;
        case 55: // NUMBER25
          return NUMBER25;
        case 56: // NUMBER26
          return NUMBER26;
        case 57: // NUMBER27
          return NUMBER27;
        case 58: // NUMBER28
          return NUMBER28;
        case 59: // NUMBER29
          return NUMBER29;
        case 60: // NUMBER30
          return NUMBER30;
        case 61: // NUMBER31
          return NUMBER31;
        case 62: // NUMBER32
          return NUMBER32;
        case 63: // NUMBER33
          return NUMBER33;
        case 64: // NUMBER34
          return NUMBER34;
        case 65: // NUMBER35
          return NUMBER35;
        case 66: // NUMBER36
          return NUMBER36;
        case 67: // NUMBER37
          return NUMBER37;
        case 68: // NUMBER38
          return NUMBER38;
        case 69: // NUMBER39
          return NUMBER39;
        case 70: // NUMBER40
          return NUMBER40;
        case 71: // NUMBER41
          return NUMBER41;
        case 72: // NUMBER42
          return NUMBER42;
        case 73: // NUMBER43
          return NUMBER43;
        case 74: // NUMBER44
          return NUMBER44;
        case 75: // NUMBER45
          return NUMBER45;
        case 76: // NUMBER46
          return NUMBER46;
        case 77: // NUMBER47
          return NUMBER47;
        case 78: // NUMBER48
          return NUMBER48;
        case 79: // NUMBER49
          return NUMBER49;
        case 80: // NUMBER50
          return NUMBER50;
        case 81: // NUMBER51
          return NUMBER51;
        case 82: // NUMBER52
          return NUMBER52;
        case 83: // NUMBER53
          return NUMBER53;
        case 84: // NUMBER54
          return NUMBER54;
        case 85: // NUMBER55
          return NUMBER55;
        case 86: // NUMBER56
          return NUMBER56;
        case 87: // NUMBER57
          return NUMBER57;
        case 88: // NUMBER58
          return NUMBER58;
        case 89: // NUMBER59
          return NUMBER59;
        case 90: // NUMBER60
          return NUMBER60;
        case 91: // NUMBER61
          return NUMBER61;
        case 92: // NUMBER62
          return NUMBER62;
        case 93: // NUMBER63
          return NUMBER63;
        case 94: // NUMBER64
          return NUMBER64;
        case 95: // NUMBER65
          return NUMBER65;
        case 96: // NUMBER66
          return NUMBER66;
        case 97: // NUMBER67
          return NUMBER67;
        case 98: // NUMBER68
          return NUMBER68;
        case 99: // NUMBER69
          return NUMBER69;
        case 100: // NUMBER70
          return NUMBER70;
        case 101: // NUMBER71
          return NUMBER71;
        case 102: // NUMBER72
          return NUMBER72;
        case 103: // NUMBER73
          return NUMBER73;
        case 104: // NUMBER74
          return NUMBER74;
        case 105: // NUMBER75
          return NUMBER75;
        case 106: // NUMBER76
          return NUMBER76;
        case 107: // NUMBER77
          return NUMBER77;
        case 108: // NUMBER78
          return NUMBER78;
        case 109: // NUMBER79
          return NUMBER79;
        case 110: // NUMBER80
          return NUMBER80;
        case 111: // NUMBER81
          return NUMBER81;
        case 112: // NUMBER82
          return NUMBER82;
        case 113: // NUMBER83
          return NUMBER83;
        case 114: // NUMBER84
          return NUMBER84;
        case 115: // NUMBER85
          return NUMBER85;
        case 116: // NUMBER86
          return NUMBER86;
        case 117: // NUMBER87
          return NUMBER87;
        case 118: // NUMBER88
          return NUMBER88;
        case 119: // NUMBER89
          return NUMBER89;
        case 120: // NUMBER90
          return NUMBER90;
        case 121: // NUMBER91
          return NUMBER91;
        case 122: // NUMBER92
          return NUMBER92;
        case 123: // NUMBER93
          return NUMBER93;
        case 124: // NUMBER94
          return NUMBER94;
        case 125: // NUMBER95
          return NUMBER95;
        case 126: // NUMBER96
          return NUMBER96;
        case 127: // NUMBER97
          return NUMBER97;
        case 128: // NUMBER98
          return NUMBER98;
        case 129: // NUMBER99
          return NUMBER99;
        case 130: // NUMBER100
          return NUMBER100;
        case 131: // NUMBER101
          return NUMBER101;
        case 132: // NUMBER102
          return NUMBER102;
        case 133: // NUMBER103
          return NUMBER103;
        case 134: // NUMBER104
          return NUMBER104;
        case 135: // NUMBER105
          return NUMBER105;
        case 136: // NUMBER106
          return NUMBER106;
        case 137: // NUMBER107
          return NUMBER107;
        case 138: // NUMBER108
          return NUMBER108;
        case 139: // NUMBER109
          return NUMBER109;
        case 140: // NUMBER110
          return NUMBER110;
        case 141: // NUMBER111
          return NUMBER111;
        case 142: // NUMBER112
          return NUMBER112;
        case 143: // NUMBER113
          return NUMBER113;
        case 144: // NUMBER114
          return NUMBER114;
        case 145: // NUMBER115
          return NUMBER115;
        case 146: // NUMBER116
          return NUMBER116;
        case 147: // NUMBER117
          return NUMBER117;
        case 148: // NUMBER118
          return NUMBER118;
        case 149: // NUMBER119
          return NUMBER119;
        case 150: // NUMBER120
          return NUMBER120;
        case 151: // NUMBER121
          return NUMBER121;
        case 152: // NUMBER122
          return NUMBER122;
        case 153: // NUMBER123
          return NUMBER123;
        case 154: // NUMBER124
          return NUMBER124;
        case 155: // NUMBER125
          return NUMBER125;
        case 156: // NUMBER126
          return NUMBER126;
        case 157: // NUMBER127
          return NUMBER127;
        case 158: // NUMBER128
          return NUMBER128;
        case 159: // NUMBER129
          return NUMBER129;
        case 160: // NUMBER130
          return NUMBER130;
        case 161: // NUMBER131
          return NUMBER131;
        case 162: // NUMBER132
          return NUMBER132;
        case 163: // NUMBER133
          return NUMBER133;
        case 164: // NUMBER134
          return NUMBER134;
        case 165: // NUMBER135
          return NUMBER135;
        case 166: // NUMBER136
          return NUMBER136;
        case 167: // NUMBER137
          return NUMBER137;
        case 168: // NUMBER138
          return NUMBER138;
        case 169: // NUMBER139
          return NUMBER139;
        case 170: // NUMBER140
          return NUMBER140;
        case 171: // NUMBER141
          return NUMBER141;
        case 172: // NUMBER142
          return NUMBER142;
        case 173: // NUMBER143
          return NUMBER143;
        case 174: // NUMBER144
          return NUMBER144;
        case 175: // NUMBER145
          return NUMBER145;
        case 176: // NUMBER146
          return NUMBER146;
        case 177: // NUMBER147
          return NUMBER147;
        case 178: // NUMBER148
          return NUMBER148;
        case 179: // NUMBER149
          return NUMBER149;
        case 180: // NUMBER150
          return NUMBER150;
        case 181: // NUMBER151
          return NUMBER151;
        case 182: // NUMBER152
          return NUMBER152;
        case 183: // NUMBER153
          return NUMBER153;
        case 184: // NUMBER154
          return NUMBER154;
        case 185: // NUMBER155
          return NUMBER155;
        case 186: // NUMBER156
          return NUMBER156;
        case 187: // NUMBER157
          return NUMBER157;
        case 188: // NUMBER158
          return NUMBER158;
        case 189: // NUMBER159
          return NUMBER159;
        case 190: // NUMBER160
          return NUMBER160;
        case 191: // NUMBER161
          return NUMBER161;
        case 192: // NUMBER162
          return NUMBER162;
        case 193: // NUMBER163
          return NUMBER163;
        case 194: // NUMBER164
          return NUMBER164;
        case 195: // NUMBER165
          return NUMBER165;
        case 196: // NUMBER166
          return NUMBER166;
        case 197: // NUMBER167
          return NUMBER167;
        case 198: // NUMBER168
          return NUMBER168;
        case 199: // NUMBER169
          return NUMBER169;
        case 200: // NUMBER170
          return NUMBER170;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __NUMBER1_ISSET_ID = 0;
  private static final int __NUMBER2_ISSET_ID = 1;
  private static final int __NUMBER3_ISSET_ID = 2;
  private static final int __NUMBER4_ISSET_ID = 3;
  private static final int __NUMBER5_ISSET_ID = 4;
  private static final int __NUMBER6_ISSET_ID = 5;
  private static final int __NUMBER7_ISSET_ID = 6;
  private static final int __NUMBER8_ISSET_ID = 7;
  private static final int __NUMBER9_ISSET_ID = 8;
  private static final int __NUMBER10_ISSET_ID = 9;
  private static final int __NUMBER11_ISSET_ID = 10;
  private static final int __NUMBER12_ISSET_ID = 11;
  private static final int __NUMBER13_ISSET_ID = 12;
  private static final int __NUMBER14_ISSET_ID = 13;
  private static final int __NUMBER15_ISSET_ID = 14;
  private static final int __NUMBER16_ISSET_ID = 15;
  private static final int __NUMBER17_ISSET_ID = 16;
  private static final int __NUMBER18_ISSET_ID = 17;
  private static final int __NUMBER19_ISSET_ID = 18;
  private static final int __NUMBER20_ISSET_ID = 19;
  private static final int __NUMBER21_ISSET_ID = 20;
  private static final int __NUMBER22_ISSET_ID = 21;
  private static final int __NUMBER23_ISSET_ID = 22;
  private static final int __NUMBER24_ISSET_ID = 23;
  private static final int __NUMBER25_ISSET_ID = 24;
  private static final int __NUMBER26_ISSET_ID = 25;
  private static final int __NUMBER27_ISSET_ID = 26;
  private static final int __NUMBER28_ISSET_ID = 27;
  private static final int __NUMBER29_ISSET_ID = 28;
  private static final int __NUMBER30_ISSET_ID = 29;
  private static final int __NUMBER31_ISSET_ID = 30;
  private static final int __NUMBER32_ISSET_ID = 31;
  private static final int __NUMBER33_ISSET_ID = 32;
  private static final int __NUMBER34_ISSET_ID = 33;
  private static final int __NUMBER35_ISSET_ID = 34;
  private static final int __NUMBER36_ISSET_ID = 35;
  private static final int __NUMBER37_ISSET_ID = 36;
  private static final int __NUMBER38_ISSET_ID = 37;
  private static final int __NUMBER39_ISSET_ID = 38;
  private static final int __NUMBER40_ISSET_ID = 39;
  private static final int __NUMBER41_ISSET_ID = 40;
  private static final int __NUMBER42_ISSET_ID = 41;
  private static final int __NUMBER43_ISSET_ID = 42;
  private static final int __NUMBER44_ISSET_ID = 43;
  private static final int __NUMBER45_ISSET_ID = 44;
  private static final int __NUMBER46_ISSET_ID = 45;
  private static final int __NUMBER47_ISSET_ID = 46;
  private static final int __NUMBER48_ISSET_ID = 47;
  private static final int __NUMBER49_ISSET_ID = 48;
  private static final int __NUMBER50_ISSET_ID = 49;
  private static final int __NUMBER51_ISSET_ID = 50;
  private static final int __NUMBER52_ISSET_ID = 51;
  private static final int __NUMBER53_ISSET_ID = 52;
  private static final int __NUMBER54_ISSET_ID = 53;
  private static final int __NUMBER55_ISSET_ID = 54;
  private static final int __NUMBER56_ISSET_ID = 55;
  private static final int __NUMBER57_ISSET_ID = 56;
  private static final int __NUMBER58_ISSET_ID = 57;
  private static final int __NUMBER59_ISSET_ID = 58;
  private static final int __NUMBER60_ISSET_ID = 59;
  private static final int __NUMBER61_ISSET_ID = 60;
  private static final int __NUMBER62_ISSET_ID = 61;
  private static final int __NUMBER63_ISSET_ID = 62;
  private static final int __NUMBER64_ISSET_ID = 63;
  private static final int __NUMBER65_ISSET_ID = 64;
  private static final int __NUMBER66_ISSET_ID = 65;
  private static final int __NUMBER67_ISSET_ID = 66;
  private static final int __NUMBER68_ISSET_ID = 67;
  private static final int __NUMBER69_ISSET_ID = 68;
  private static final int __NUMBER70_ISSET_ID = 69;
  private static final int __NUMBER71_ISSET_ID = 70;
  private static final int __NUMBER72_ISSET_ID = 71;
  private static final int __NUMBER73_ISSET_ID = 72;
  private static final int __NUMBER74_ISSET_ID = 73;
  private static final int __NUMBER75_ISSET_ID = 74;
  private static final int __NUMBER76_ISSET_ID = 75;
  private static final int __NUMBER77_ISSET_ID = 76;
  private static final int __NUMBER78_ISSET_ID = 77;
  private static final int __NUMBER79_ISSET_ID = 78;
  private static final int __NUMBER80_ISSET_ID = 79;
  private static final int __NUMBER81_ISSET_ID = 80;
  private static final int __NUMBER82_ISSET_ID = 81;
  private static final int __NUMBER83_ISSET_ID = 82;
  private static final int __NUMBER84_ISSET_ID = 83;
  private static final int __NUMBER85_ISSET_ID = 84;
  private static final int __NUMBER86_ISSET_ID = 85;
  private static final int __NUMBER87_ISSET_ID = 86;
  private static final int __NUMBER88_ISSET_ID = 87;
  private static final int __NUMBER89_ISSET_ID = 88;
  private static final int __NUMBER90_ISSET_ID = 89;
  private static final int __NUMBER91_ISSET_ID = 90;
  private static final int __NUMBER92_ISSET_ID = 91;
  private static final int __NUMBER93_ISSET_ID = 92;
  private static final int __NUMBER94_ISSET_ID = 93;
  private static final int __NUMBER95_ISSET_ID = 94;
  private static final int __NUMBER96_ISSET_ID = 95;
  private static final int __NUMBER97_ISSET_ID = 96;
  private static final int __NUMBER98_ISSET_ID = 97;
  private static final int __NUMBER99_ISSET_ID = 98;
  private static final int __NUMBER100_ISSET_ID = 99;
  private static final int __NUMBER101_ISSET_ID = 100;
  private static final int __NUMBER102_ISSET_ID = 101;
  private static final int __NUMBER103_ISSET_ID = 102;
  private static final int __NUMBER104_ISSET_ID = 103;
  private static final int __NUMBER105_ISSET_ID = 104;
  private static final int __NUMBER106_ISSET_ID = 105;
  private static final int __NUMBER107_ISSET_ID = 106;
  private static final int __NUMBER108_ISSET_ID = 107;
  private static final int __NUMBER109_ISSET_ID = 108;
  private static final int __NUMBER110_ISSET_ID = 109;
  private static final int __NUMBER111_ISSET_ID = 110;
  private static final int __NUMBER112_ISSET_ID = 111;
  private static final int __NUMBER113_ISSET_ID = 112;
  private static final int __NUMBER114_ISSET_ID = 113;
  private static final int __NUMBER115_ISSET_ID = 114;
  private static final int __NUMBER116_ISSET_ID = 115;
  private static final int __NUMBER117_ISSET_ID = 116;
  private static final int __NUMBER118_ISSET_ID = 117;
  private static final int __NUMBER119_ISSET_ID = 118;
  private static final int __NUMBER120_ISSET_ID = 119;
  private static final int __NUMBER121_ISSET_ID = 120;
  private static final int __NUMBER122_ISSET_ID = 121;
  private static final int __NUMBER123_ISSET_ID = 122;
  private static final int __NUMBER124_ISSET_ID = 123;
  private static final int __NUMBER125_ISSET_ID = 124;
  private static final int __NUMBER126_ISSET_ID = 125;
  private static final int __NUMBER127_ISSET_ID = 126;
  private static final int __NUMBER128_ISSET_ID = 127;
  private static final int __NUMBER129_ISSET_ID = 128;
  private static final int __NUMBER130_ISSET_ID = 129;
  private static final int __NUMBER131_ISSET_ID = 130;
  private static final int __NUMBER132_ISSET_ID = 131;
  private static final int __NUMBER133_ISSET_ID = 132;
  private static final int __NUMBER134_ISSET_ID = 133;
  private static final int __NUMBER135_ISSET_ID = 134;
  private static final int __NUMBER136_ISSET_ID = 135;
  private static final int __NUMBER137_ISSET_ID = 136;
  private static final int __NUMBER138_ISSET_ID = 137;
  private static final int __NUMBER139_ISSET_ID = 138;
  private static final int __NUMBER140_ISSET_ID = 139;
  private static final int __NUMBER141_ISSET_ID = 140;
  private static final int __NUMBER142_ISSET_ID = 141;
  private static final int __NUMBER143_ISSET_ID = 142;
  private static final int __NUMBER144_ISSET_ID = 143;
  private static final int __NUMBER145_ISSET_ID = 144;
  private static final int __NUMBER146_ISSET_ID = 145;
  private static final int __NUMBER147_ISSET_ID = 146;
  private static final int __NUMBER148_ISSET_ID = 147;
  private static final int __NUMBER149_ISSET_ID = 148;
  private static final int __NUMBER150_ISSET_ID = 149;
  private static final int __NUMBER151_ISSET_ID = 150;
  private static final int __NUMBER152_ISSET_ID = 151;
  private static final int __NUMBER153_ISSET_ID = 152;
  private static final int __NUMBER154_ISSET_ID = 153;
  private static final int __NUMBER155_ISSET_ID = 154;
  private static final int __NUMBER156_ISSET_ID = 155;
  private static final int __NUMBER157_ISSET_ID = 156;
  private static final int __NUMBER158_ISSET_ID = 157;
  private static final int __NUMBER159_ISSET_ID = 158;
  private static final int __NUMBER160_ISSET_ID = 159;
  private static final int __NUMBER161_ISSET_ID = 160;
  private static final int __NUMBER162_ISSET_ID = 161;
  private static final int __NUMBER163_ISSET_ID = 162;
  private static final int __NUMBER164_ISSET_ID = 163;
  private static final int __NUMBER165_ISSET_ID = 164;
  private static final int __NUMBER166_ISSET_ID = 165;
  private static final int __NUMBER167_ISSET_ID = 166;
  private static final int __NUMBER168_ISSET_ID = 167;
  private static final int __NUMBER169_ISSET_ID = 168;
  private static final int __NUMBER170_ISSET_ID = 169;
  private java.util.BitSet __isset_bit_vector = new java.util.BitSet(170);
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.STRING1, new org.apache.thrift.meta_data.FieldMetaData("string1", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STRING2, new org.apache.thrift.meta_data.FieldMetaData("string2", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STRING3, new org.apache.thrift.meta_data.FieldMetaData("string3", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STRING4, new org.apache.thrift.meta_data.FieldMetaData("string4", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STRING5, new org.apache.thrift.meta_data.FieldMetaData("string5", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STRING6, new org.apache.thrift.meta_data.FieldMetaData("string6", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STRING7, new org.apache.thrift.meta_data.FieldMetaData("string7", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STRING8, new org.apache.thrift.meta_data.FieldMetaData("string8", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STRING9, new org.apache.thrift.meta_data.FieldMetaData("string9", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STRING10, new org.apache.thrift.meta_data.FieldMetaData("string10", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STRING11, new org.apache.thrift.meta_data.FieldMetaData("string11", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STRING12, new org.apache.thrift.meta_data.FieldMetaData("string12", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STRING13, new org.apache.thrift.meta_data.FieldMetaData("string13", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STRING14, new org.apache.thrift.meta_data.FieldMetaData("string14", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STRING15, new org.apache.thrift.meta_data.FieldMetaData("string15", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STRING16, new org.apache.thrift.meta_data.FieldMetaData("string16", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STRING17, new org.apache.thrift.meta_data.FieldMetaData("string17", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STRING18, new org.apache.thrift.meta_data.FieldMetaData("string18", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STRING19, new org.apache.thrift.meta_data.FieldMetaData("string19", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STRING20, new org.apache.thrift.meta_data.FieldMetaData("string20", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STRING21, new org.apache.thrift.meta_data.FieldMetaData("string21", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STRING22, new org.apache.thrift.meta_data.FieldMetaData("string22", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STRING23, new org.apache.thrift.meta_data.FieldMetaData("string23", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STRING24, new org.apache.thrift.meta_data.FieldMetaData("string24", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STRING25, new org.apache.thrift.meta_data.FieldMetaData("string25", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STRING26, new org.apache.thrift.meta_data.FieldMetaData("string26", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STRING27, new org.apache.thrift.meta_data.FieldMetaData("string27", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STRING28, new org.apache.thrift.meta_data.FieldMetaData("string28", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STRING29, new org.apache.thrift.meta_data.FieldMetaData("string29", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STRING30, new org.apache.thrift.meta_data.FieldMetaData("string30", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NUMBER1, new org.apache.thrift.meta_data.FieldMetaData("number1", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER2, new org.apache.thrift.meta_data.FieldMetaData("number2", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER3, new org.apache.thrift.meta_data.FieldMetaData("number3", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER4, new org.apache.thrift.meta_data.FieldMetaData("number4", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER5, new org.apache.thrift.meta_data.FieldMetaData("number5", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER6, new org.apache.thrift.meta_data.FieldMetaData("number6", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER7, new org.apache.thrift.meta_data.FieldMetaData("number7", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER8, new org.apache.thrift.meta_data.FieldMetaData("number8", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER9, new org.apache.thrift.meta_data.FieldMetaData("number9", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER10, new org.apache.thrift.meta_data.FieldMetaData("number10", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER11, new org.apache.thrift.meta_data.FieldMetaData("number11", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER12, new org.apache.thrift.meta_data.FieldMetaData("number12", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER13, new org.apache.thrift.meta_data.FieldMetaData("number13", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER14, new org.apache.thrift.meta_data.FieldMetaData("number14", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER15, new org.apache.thrift.meta_data.FieldMetaData("number15", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER16, new org.apache.thrift.meta_data.FieldMetaData("number16", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER17, new org.apache.thrift.meta_data.FieldMetaData("number17", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER18, new org.apache.thrift.meta_data.FieldMetaData("number18", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER19, new org.apache.thrift.meta_data.FieldMetaData("number19", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER20, new org.apache.thrift.meta_data.FieldMetaData("number20", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER21, new org.apache.thrift.meta_data.FieldMetaData("number21", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER22, new org.apache.thrift.meta_data.FieldMetaData("number22", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER23, new org.apache.thrift.meta_data.FieldMetaData("number23", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER24, new org.apache.thrift.meta_data.FieldMetaData("number24", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER25, new org.apache.thrift.meta_data.FieldMetaData("number25", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER26, new org.apache.thrift.meta_data.FieldMetaData("number26", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER27, new org.apache.thrift.meta_data.FieldMetaData("number27", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER28, new org.apache.thrift.meta_data.FieldMetaData("number28", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER29, new org.apache.thrift.meta_data.FieldMetaData("number29", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER30, new org.apache.thrift.meta_data.FieldMetaData("number30", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER31, new org.apache.thrift.meta_data.FieldMetaData("number31", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER32, new org.apache.thrift.meta_data.FieldMetaData("number32", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER33, new org.apache.thrift.meta_data.FieldMetaData("number33", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER34, new org.apache.thrift.meta_data.FieldMetaData("number34", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER35, new org.apache.thrift.meta_data.FieldMetaData("number35", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER36, new org.apache.thrift.meta_data.FieldMetaData("number36", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER37, new org.apache.thrift.meta_data.FieldMetaData("number37", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER38, new org.apache.thrift.meta_data.FieldMetaData("number38", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER39, new org.apache.thrift.meta_data.FieldMetaData("number39", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER40, new org.apache.thrift.meta_data.FieldMetaData("number40", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER41, new org.apache.thrift.meta_data.FieldMetaData("number41", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER42, new org.apache.thrift.meta_data.FieldMetaData("number42", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER43, new org.apache.thrift.meta_data.FieldMetaData("number43", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER44, new org.apache.thrift.meta_data.FieldMetaData("number44", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER45, new org.apache.thrift.meta_data.FieldMetaData("number45", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER46, new org.apache.thrift.meta_data.FieldMetaData("number46", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER47, new org.apache.thrift.meta_data.FieldMetaData("number47", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER48, new org.apache.thrift.meta_data.FieldMetaData("number48", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER49, new org.apache.thrift.meta_data.FieldMetaData("number49", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER50, new org.apache.thrift.meta_data.FieldMetaData("number50", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER51, new org.apache.thrift.meta_data.FieldMetaData("number51", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER52, new org.apache.thrift.meta_data.FieldMetaData("number52", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER53, new org.apache.thrift.meta_data.FieldMetaData("number53", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER54, new org.apache.thrift.meta_data.FieldMetaData("number54", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER55, new org.apache.thrift.meta_data.FieldMetaData("number55", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER56, new org.apache.thrift.meta_data.FieldMetaData("number56", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER57, new org.apache.thrift.meta_data.FieldMetaData("number57", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER58, new org.apache.thrift.meta_data.FieldMetaData("number58", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER59, new org.apache.thrift.meta_data.FieldMetaData("number59", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER60, new org.apache.thrift.meta_data.FieldMetaData("number60", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER61, new org.apache.thrift.meta_data.FieldMetaData("number61", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER62, new org.apache.thrift.meta_data.FieldMetaData("number62", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER63, new org.apache.thrift.meta_data.FieldMetaData("number63", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER64, new org.apache.thrift.meta_data.FieldMetaData("number64", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER65, new org.apache.thrift.meta_data.FieldMetaData("number65", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER66, new org.apache.thrift.meta_data.FieldMetaData("number66", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER67, new org.apache.thrift.meta_data.FieldMetaData("number67", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER68, new org.apache.thrift.meta_data.FieldMetaData("number68", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER69, new org.apache.thrift.meta_data.FieldMetaData("number69", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER70, new org.apache.thrift.meta_data.FieldMetaData("number70", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER71, new org.apache.thrift.meta_data.FieldMetaData("number71", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER72, new org.apache.thrift.meta_data.FieldMetaData("number72", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER73, new org.apache.thrift.meta_data.FieldMetaData("number73", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER74, new org.apache.thrift.meta_data.FieldMetaData("number74", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER75, new org.apache.thrift.meta_data.FieldMetaData("number75", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER76, new org.apache.thrift.meta_data.FieldMetaData("number76", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER77, new org.apache.thrift.meta_data.FieldMetaData("number77", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER78, new org.apache.thrift.meta_data.FieldMetaData("number78", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER79, new org.apache.thrift.meta_data.FieldMetaData("number79", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER80, new org.apache.thrift.meta_data.FieldMetaData("number80", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER81, new org.apache.thrift.meta_data.FieldMetaData("number81", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER82, new org.apache.thrift.meta_data.FieldMetaData("number82", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER83, new org.apache.thrift.meta_data.FieldMetaData("number83", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER84, new org.apache.thrift.meta_data.FieldMetaData("number84", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER85, new org.apache.thrift.meta_data.FieldMetaData("number85", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER86, new org.apache.thrift.meta_data.FieldMetaData("number86", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER87, new org.apache.thrift.meta_data.FieldMetaData("number87", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER88, new org.apache.thrift.meta_data.FieldMetaData("number88", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER89, new org.apache.thrift.meta_data.FieldMetaData("number89", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER90, new org.apache.thrift.meta_data.FieldMetaData("number90", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER91, new org.apache.thrift.meta_data.FieldMetaData("number91", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER92, new org.apache.thrift.meta_data.FieldMetaData("number92", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER93, new org.apache.thrift.meta_data.FieldMetaData("number93", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER94, new org.apache.thrift.meta_data.FieldMetaData("number94", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER95, new org.apache.thrift.meta_data.FieldMetaData("number95", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER96, new org.apache.thrift.meta_data.FieldMetaData("number96", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER97, new org.apache.thrift.meta_data.FieldMetaData("number97", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER98, new org.apache.thrift.meta_data.FieldMetaData("number98", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER99, new org.apache.thrift.meta_data.FieldMetaData("number99", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER100, new org.apache.thrift.meta_data.FieldMetaData("number100", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER101, new org.apache.thrift.meta_data.FieldMetaData("number101", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER102, new org.apache.thrift.meta_data.FieldMetaData("number102", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER103, new org.apache.thrift.meta_data.FieldMetaData("number103", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER104, new org.apache.thrift.meta_data.FieldMetaData("number104", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER105, new org.apache.thrift.meta_data.FieldMetaData("number105", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER106, new org.apache.thrift.meta_data.FieldMetaData("number106", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER107, new org.apache.thrift.meta_data.FieldMetaData("number107", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER108, new org.apache.thrift.meta_data.FieldMetaData("number108", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER109, new org.apache.thrift.meta_data.FieldMetaData("number109", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER110, new org.apache.thrift.meta_data.FieldMetaData("number110", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER111, new org.apache.thrift.meta_data.FieldMetaData("number111", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER112, new org.apache.thrift.meta_data.FieldMetaData("number112", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER113, new org.apache.thrift.meta_data.FieldMetaData("number113", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER114, new org.apache.thrift.meta_data.FieldMetaData("number114", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER115, new org.apache.thrift.meta_data.FieldMetaData("number115", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER116, new org.apache.thrift.meta_data.FieldMetaData("number116", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER117, new org.apache.thrift.meta_data.FieldMetaData("number117", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER118, new org.apache.thrift.meta_data.FieldMetaData("number118", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER119, new org.apache.thrift.meta_data.FieldMetaData("number119", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER120, new org.apache.thrift.meta_data.FieldMetaData("number120", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUMBER121, new org.apache.thrift.meta_data.FieldMetaData("number121", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUMBER122, new org.apache.thrift.meta_data.FieldMetaData("number122", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUMBER123, new org.apache.thrift.meta_data.FieldMetaData("number123", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUMBER124, new org.apache.thrift.meta_data.FieldMetaData("number124", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUMBER125, new org.apache.thrift.meta_data.FieldMetaData("number125", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUMBER126, new org.apache.thrift.meta_data.FieldMetaData("number126", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUMBER127, new org.apache.thrift.meta_data.FieldMetaData("number127", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUMBER128, new org.apache.thrift.meta_data.FieldMetaData("number128", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUMBER129, new org.apache.thrift.meta_data.FieldMetaData("number129", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUMBER130, new org.apache.thrift.meta_data.FieldMetaData("number130", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUMBER131, new org.apache.thrift.meta_data.FieldMetaData("number131", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUMBER132, new org.apache.thrift.meta_data.FieldMetaData("number132", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUMBER133, new org.apache.thrift.meta_data.FieldMetaData("number133", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUMBER134, new org.apache.thrift.meta_data.FieldMetaData("number134", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUMBER135, new org.apache.thrift.meta_data.FieldMetaData("number135", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUMBER136, new org.apache.thrift.meta_data.FieldMetaData("number136", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUMBER137, new org.apache.thrift.meta_data.FieldMetaData("number137", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUMBER138, new org.apache.thrift.meta_data.FieldMetaData("number138", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUMBER139, new org.apache.thrift.meta_data.FieldMetaData("number139", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUMBER140, new org.apache.thrift.meta_data.FieldMetaData("number140", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUMBER141, new org.apache.thrift.meta_data.FieldMetaData("number141", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUMBER142, new org.apache.thrift.meta_data.FieldMetaData("number142", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUMBER143, new org.apache.thrift.meta_data.FieldMetaData("number143", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUMBER144, new org.apache.thrift.meta_data.FieldMetaData("number144", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUMBER145, new org.apache.thrift.meta_data.FieldMetaData("number145", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUMBER146, new org.apache.thrift.meta_data.FieldMetaData("number146", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUMBER147, new org.apache.thrift.meta_data.FieldMetaData("number147", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUMBER148, new org.apache.thrift.meta_data.FieldMetaData("number148", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUMBER149, new org.apache.thrift.meta_data.FieldMetaData("number149", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUMBER150, new org.apache.thrift.meta_data.FieldMetaData("number150", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUMBER151, new org.apache.thrift.meta_data.FieldMetaData("number151", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUMBER152, new org.apache.thrift.meta_data.FieldMetaData("number152", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUMBER153, new org.apache.thrift.meta_data.FieldMetaData("number153", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUMBER154, new org.apache.thrift.meta_data.FieldMetaData("number154", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUMBER155, new org.apache.thrift.meta_data.FieldMetaData("number155", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUMBER156, new org.apache.thrift.meta_data.FieldMetaData("number156", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUMBER157, new org.apache.thrift.meta_data.FieldMetaData("number157", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUMBER158, new org.apache.thrift.meta_data.FieldMetaData("number158", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUMBER159, new org.apache.thrift.meta_data.FieldMetaData("number159", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUMBER160, new org.apache.thrift.meta_data.FieldMetaData("number160", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUMBER161, new org.apache.thrift.meta_data.FieldMetaData("number161", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUMBER162, new org.apache.thrift.meta_data.FieldMetaData("number162", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUMBER163, new org.apache.thrift.meta_data.FieldMetaData("number163", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUMBER164, new org.apache.thrift.meta_data.FieldMetaData("number164", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUMBER165, new org.apache.thrift.meta_data.FieldMetaData("number165", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUMBER166, new org.apache.thrift.meta_data.FieldMetaData("number166", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUMBER167, new org.apache.thrift.meta_data.FieldMetaData("number167", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUMBER168, new org.apache.thrift.meta_data.FieldMetaData("number168", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUMBER169, new org.apache.thrift.meta_data.FieldMetaData("number169", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.NUMBER170, new org.apache.thrift.meta_data.FieldMetaData("number170", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Data6Thrift.class, metaDataMap);
  }

  public Data6Thrift() {
  }

  public Data6Thrift(
    java.lang.String string1,
    java.lang.String string2,
    java.lang.String string3,
    java.lang.String string4,
    java.lang.String string5,
    java.lang.String string6,
    java.lang.String string7,
    java.lang.String string8,
    java.lang.String string9,
    java.lang.String string10,
    java.lang.String string11,
    java.lang.String string12,
    java.lang.String string13,
    java.lang.String string14,
    java.lang.String string15,
    java.lang.String string16,
    java.lang.String string17,
    java.lang.String string18,
    java.lang.String string19,
    java.lang.String string20,
    java.lang.String string21,
    java.lang.String string22,
    java.lang.String string23,
    java.lang.String string24,
    java.lang.String string25,
    java.lang.String string26,
    java.lang.String string27,
    java.lang.String string28,
    java.lang.String string29,
    java.lang.String string30,
    int number1,
    int number2,
    int number3,
    int number4,
    int number5,
    int number6,
    int number7,
    int number8,
    int number9,
    int number10,
    int number11,
    int number12,
    int number13,
    int number14,
    int number15,
    int number16,
    int number17,
    int number18,
    int number19,
    int number20,
    int number21,
    int number22,
    int number23,
    int number24,
    int number25,
    int number26,
    int number27,
    int number28,
    int number29,
    int number30,
    int number31,
    int number32,
    int number33,
    int number34,
    int number35,
    int number36,
    int number37,
    int number38,
    int number39,
    int number40,
    int number41,
    int number42,
    int number43,
    int number44,
    int number45,
    int number46,
    int number47,
    int number48,
    int number49,
    int number50,
    int number51,
    int number52,
    int number53,
    int number54,
    int number55,
    int number56,
    int number57,
    int number58,
    int number59,
    int number60,
    int number61,
    int number62,
    int number63,
    int number64,
    int number65,
    int number66,
    int number67,
    int number68,
    int number69,
    int number70,
    int number71,
    int number72,
    int number73,
    int number74,
    int number75,
    int number76,
    int number77,
    int number78,
    int number79,
    int number80,
    int number81,
    int number82,
    int number83,
    int number84,
    int number85,
    int number86,
    int number87,
    int number88,
    int number89,
    int number90,
    int number91,
    int number92,
    int number93,
    int number94,
    int number95,
    int number96,
    int number97,
    int number98,
    int number99,
    int number100,
    int number101,
    int number102,
    int number103,
    int number104,
    int number105,
    int number106,
    int number107,
    int number108,
    int number109,
    int number110,
    int number111,
    int number112,
    int number113,
    int number114,
    int number115,
    int number116,
    int number117,
    int number118,
    int number119,
    int number120,
    double number121,
    double number122,
    double number123,
    double number124,
    double number125,
    double number126,
    double number127,
    double number128,
    double number129,
    double number130,
    double number131,
    double number132,
    double number133,
    double number134,
    double number135,
    double number136,
    double number137,
    double number138,
    double number139,
    double number140,
    double number141,
    double number142,
    double number143,
    double number144,
    double number145,
    double number146,
    double number147,
    double number148,
    double number149,
    double number150,
    double number151,
    double number152,
    double number153,
    double number154,
    double number155,
    double number156,
    double number157,
    double number158,
    double number159,
    double number160,
    double number161,
    double number162,
    double number163,
    double number164,
    double number165,
    double number166,
    double number167,
    double number168,
    double number169,
    double number170)
  {
    this();
    this.string1 = string1;
    this.string2 = string2;
    this.string3 = string3;
    this.string4 = string4;
    this.string5 = string5;
    this.string6 = string6;
    this.string7 = string7;
    this.string8 = string8;
    this.string9 = string9;
    this.string10 = string10;
    this.string11 = string11;
    this.string12 = string12;
    this.string13 = string13;
    this.string14 = string14;
    this.string15 = string15;
    this.string16 = string16;
    this.string17 = string17;
    this.string18 = string18;
    this.string19 = string19;
    this.string20 = string20;
    this.string21 = string21;
    this.string22 = string22;
    this.string23 = string23;
    this.string24 = string24;
    this.string25 = string25;
    this.string26 = string26;
    this.string27 = string27;
    this.string28 = string28;
    this.string29 = string29;
    this.string30 = string30;
    this.number1 = number1;
    setNumber1IsSet(true);
    this.number2 = number2;
    setNumber2IsSet(true);
    this.number3 = number3;
    setNumber3IsSet(true);
    this.number4 = number4;
    setNumber4IsSet(true);
    this.number5 = number5;
    setNumber5IsSet(true);
    this.number6 = number6;
    setNumber6IsSet(true);
    this.number7 = number7;
    setNumber7IsSet(true);
    this.number8 = number8;
    setNumber8IsSet(true);
    this.number9 = number9;
    setNumber9IsSet(true);
    this.number10 = number10;
    setNumber10IsSet(true);
    this.number11 = number11;
    setNumber11IsSet(true);
    this.number12 = number12;
    setNumber12IsSet(true);
    this.number13 = number13;
    setNumber13IsSet(true);
    this.number14 = number14;
    setNumber14IsSet(true);
    this.number15 = number15;
    setNumber15IsSet(true);
    this.number16 = number16;
    setNumber16IsSet(true);
    this.number17 = number17;
    setNumber17IsSet(true);
    this.number18 = number18;
    setNumber18IsSet(true);
    this.number19 = number19;
    setNumber19IsSet(true);
    this.number20 = number20;
    setNumber20IsSet(true);
    this.number21 = number21;
    setNumber21IsSet(true);
    this.number22 = number22;
    setNumber22IsSet(true);
    this.number23 = number23;
    setNumber23IsSet(true);
    this.number24 = number24;
    setNumber24IsSet(true);
    this.number25 = number25;
    setNumber25IsSet(true);
    this.number26 = number26;
    setNumber26IsSet(true);
    this.number27 = number27;
    setNumber27IsSet(true);
    this.number28 = number28;
    setNumber28IsSet(true);
    this.number29 = number29;
    setNumber29IsSet(true);
    this.number30 = number30;
    setNumber30IsSet(true);
    this.number31 = number31;
    setNumber31IsSet(true);
    this.number32 = number32;
    setNumber32IsSet(true);
    this.number33 = number33;
    setNumber33IsSet(true);
    this.number34 = number34;
    setNumber34IsSet(true);
    this.number35 = number35;
    setNumber35IsSet(true);
    this.number36 = number36;
    setNumber36IsSet(true);
    this.number37 = number37;
    setNumber37IsSet(true);
    this.number38 = number38;
    setNumber38IsSet(true);
    this.number39 = number39;
    setNumber39IsSet(true);
    this.number40 = number40;
    setNumber40IsSet(true);
    this.number41 = number41;
    setNumber41IsSet(true);
    this.number42 = number42;
    setNumber42IsSet(true);
    this.number43 = number43;
    setNumber43IsSet(true);
    this.number44 = number44;
    setNumber44IsSet(true);
    this.number45 = number45;
    setNumber45IsSet(true);
    this.number46 = number46;
    setNumber46IsSet(true);
    this.number47 = number47;
    setNumber47IsSet(true);
    this.number48 = number48;
    setNumber48IsSet(true);
    this.number49 = number49;
    setNumber49IsSet(true);
    this.number50 = number50;
    setNumber50IsSet(true);
    this.number51 = number51;
    setNumber51IsSet(true);
    this.number52 = number52;
    setNumber52IsSet(true);
    this.number53 = number53;
    setNumber53IsSet(true);
    this.number54 = number54;
    setNumber54IsSet(true);
    this.number55 = number55;
    setNumber55IsSet(true);
    this.number56 = number56;
    setNumber56IsSet(true);
    this.number57 = number57;
    setNumber57IsSet(true);
    this.number58 = number58;
    setNumber58IsSet(true);
    this.number59 = number59;
    setNumber59IsSet(true);
    this.number60 = number60;
    setNumber60IsSet(true);
    this.number61 = number61;
    setNumber61IsSet(true);
    this.number62 = number62;
    setNumber62IsSet(true);
    this.number63 = number63;
    setNumber63IsSet(true);
    this.number64 = number64;
    setNumber64IsSet(true);
    this.number65 = number65;
    setNumber65IsSet(true);
    this.number66 = number66;
    setNumber66IsSet(true);
    this.number67 = number67;
    setNumber67IsSet(true);
    this.number68 = number68;
    setNumber68IsSet(true);
    this.number69 = number69;
    setNumber69IsSet(true);
    this.number70 = number70;
    setNumber70IsSet(true);
    this.number71 = number71;
    setNumber71IsSet(true);
    this.number72 = number72;
    setNumber72IsSet(true);
    this.number73 = number73;
    setNumber73IsSet(true);
    this.number74 = number74;
    setNumber74IsSet(true);
    this.number75 = number75;
    setNumber75IsSet(true);
    this.number76 = number76;
    setNumber76IsSet(true);
    this.number77 = number77;
    setNumber77IsSet(true);
    this.number78 = number78;
    setNumber78IsSet(true);
    this.number79 = number79;
    setNumber79IsSet(true);
    this.number80 = number80;
    setNumber80IsSet(true);
    this.number81 = number81;
    setNumber81IsSet(true);
    this.number82 = number82;
    setNumber82IsSet(true);
    this.number83 = number83;
    setNumber83IsSet(true);
    this.number84 = number84;
    setNumber84IsSet(true);
    this.number85 = number85;
    setNumber85IsSet(true);
    this.number86 = number86;
    setNumber86IsSet(true);
    this.number87 = number87;
    setNumber87IsSet(true);
    this.number88 = number88;
    setNumber88IsSet(true);
    this.number89 = number89;
    setNumber89IsSet(true);
    this.number90 = number90;
    setNumber90IsSet(true);
    this.number91 = number91;
    setNumber91IsSet(true);
    this.number92 = number92;
    setNumber92IsSet(true);
    this.number93 = number93;
    setNumber93IsSet(true);
    this.number94 = number94;
    setNumber94IsSet(true);
    this.number95 = number95;
    setNumber95IsSet(true);
    this.number96 = number96;
    setNumber96IsSet(true);
    this.number97 = number97;
    setNumber97IsSet(true);
    this.number98 = number98;
    setNumber98IsSet(true);
    this.number99 = number99;
    setNumber99IsSet(true);
    this.number100 = number100;
    setNumber100IsSet(true);
    this.number101 = number101;
    setNumber101IsSet(true);
    this.number102 = number102;
    setNumber102IsSet(true);
    this.number103 = number103;
    setNumber103IsSet(true);
    this.number104 = number104;
    setNumber104IsSet(true);
    this.number105 = number105;
    setNumber105IsSet(true);
    this.number106 = number106;
    setNumber106IsSet(true);
    this.number107 = number107;
    setNumber107IsSet(true);
    this.number108 = number108;
    setNumber108IsSet(true);
    this.number109 = number109;
    setNumber109IsSet(true);
    this.number110 = number110;
    setNumber110IsSet(true);
    this.number111 = number111;
    setNumber111IsSet(true);
    this.number112 = number112;
    setNumber112IsSet(true);
    this.number113 = number113;
    setNumber113IsSet(true);
    this.number114 = number114;
    setNumber114IsSet(true);
    this.number115 = number115;
    setNumber115IsSet(true);
    this.number116 = number116;
    setNumber116IsSet(true);
    this.number117 = number117;
    setNumber117IsSet(true);
    this.number118 = number118;
    setNumber118IsSet(true);
    this.number119 = number119;
    setNumber119IsSet(true);
    this.number120 = number120;
    setNumber120IsSet(true);
    this.number121 = number121;
    setNumber121IsSet(true);
    this.number122 = number122;
    setNumber122IsSet(true);
    this.number123 = number123;
    setNumber123IsSet(true);
    this.number124 = number124;
    setNumber124IsSet(true);
    this.number125 = number125;
    setNumber125IsSet(true);
    this.number126 = number126;
    setNumber126IsSet(true);
    this.number127 = number127;
    setNumber127IsSet(true);
    this.number128 = number128;
    setNumber128IsSet(true);
    this.number129 = number129;
    setNumber129IsSet(true);
    this.number130 = number130;
    setNumber130IsSet(true);
    this.number131 = number131;
    setNumber131IsSet(true);
    this.number132 = number132;
    setNumber132IsSet(true);
    this.number133 = number133;
    setNumber133IsSet(true);
    this.number134 = number134;
    setNumber134IsSet(true);
    this.number135 = number135;
    setNumber135IsSet(true);
    this.number136 = number136;
    setNumber136IsSet(true);
    this.number137 = number137;
    setNumber137IsSet(true);
    this.number138 = number138;
    setNumber138IsSet(true);
    this.number139 = number139;
    setNumber139IsSet(true);
    this.number140 = number140;
    setNumber140IsSet(true);
    this.number141 = number141;
    setNumber141IsSet(true);
    this.number142 = number142;
    setNumber142IsSet(true);
    this.number143 = number143;
    setNumber143IsSet(true);
    this.number144 = number144;
    setNumber144IsSet(true);
    this.number145 = number145;
    setNumber145IsSet(true);
    this.number146 = number146;
    setNumber146IsSet(true);
    this.number147 = number147;
    setNumber147IsSet(true);
    this.number148 = number148;
    setNumber148IsSet(true);
    this.number149 = number149;
    setNumber149IsSet(true);
    this.number150 = number150;
    setNumber150IsSet(true);
    this.number151 = number151;
    setNumber151IsSet(true);
    this.number152 = number152;
    setNumber152IsSet(true);
    this.number153 = number153;
    setNumber153IsSet(true);
    this.number154 = number154;
    setNumber154IsSet(true);
    this.number155 = number155;
    setNumber155IsSet(true);
    this.number156 = number156;
    setNumber156IsSet(true);
    this.number157 = number157;
    setNumber157IsSet(true);
    this.number158 = number158;
    setNumber158IsSet(true);
    this.number159 = number159;
    setNumber159IsSet(true);
    this.number160 = number160;
    setNumber160IsSet(true);
    this.number161 = number161;
    setNumber161IsSet(true);
    this.number162 = number162;
    setNumber162IsSet(true);
    this.number163 = number163;
    setNumber163IsSet(true);
    this.number164 = number164;
    setNumber164IsSet(true);
    this.number165 = number165;
    setNumber165IsSet(true);
    this.number166 = number166;
    setNumber166IsSet(true);
    this.number167 = number167;
    setNumber167IsSet(true);
    this.number168 = number168;
    setNumber168IsSet(true);
    this.number169 = number169;
    setNumber169IsSet(true);
    this.number170 = number170;
    setNumber170IsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Data6Thrift(Data6Thrift other) {
    __isset_bit_vector.clear();
    __isset_bit_vector.or(other.__isset_bit_vector);
    if (other.isSetString1()) {
      this.string1 = other.string1;
    }
    if (other.isSetString2()) {
      this.string2 = other.string2;
    }
    if (other.isSetString3()) {
      this.string3 = other.string3;
    }
    if (other.isSetString4()) {
      this.string4 = other.string4;
    }
    if (other.isSetString5()) {
      this.string5 = other.string5;
    }
    if (other.isSetString6()) {
      this.string6 = other.string6;
    }
    if (other.isSetString7()) {
      this.string7 = other.string7;
    }
    if (other.isSetString8()) {
      this.string8 = other.string8;
    }
    if (other.isSetString9()) {
      this.string9 = other.string9;
    }
    if (other.isSetString10()) {
      this.string10 = other.string10;
    }
    if (other.isSetString11()) {
      this.string11 = other.string11;
    }
    if (other.isSetString12()) {
      this.string12 = other.string12;
    }
    if (other.isSetString13()) {
      this.string13 = other.string13;
    }
    if (other.isSetString14()) {
      this.string14 = other.string14;
    }
    if (other.isSetString15()) {
      this.string15 = other.string15;
    }
    if (other.isSetString16()) {
      this.string16 = other.string16;
    }
    if (other.isSetString17()) {
      this.string17 = other.string17;
    }
    if (other.isSetString18()) {
      this.string18 = other.string18;
    }
    if (other.isSetString19()) {
      this.string19 = other.string19;
    }
    if (other.isSetString20()) {
      this.string20 = other.string20;
    }
    if (other.isSetString21()) {
      this.string21 = other.string21;
    }
    if (other.isSetString22()) {
      this.string22 = other.string22;
    }
    if (other.isSetString23()) {
      this.string23 = other.string23;
    }
    if (other.isSetString24()) {
      this.string24 = other.string24;
    }
    if (other.isSetString25()) {
      this.string25 = other.string25;
    }
    if (other.isSetString26()) {
      this.string26 = other.string26;
    }
    if (other.isSetString27()) {
      this.string27 = other.string27;
    }
    if (other.isSetString28()) {
      this.string28 = other.string28;
    }
    if (other.isSetString29()) {
      this.string29 = other.string29;
    }
    if (other.isSetString30()) {
      this.string30 = other.string30;
    }
    this.number1 = other.number1;
    this.number2 = other.number2;
    this.number3 = other.number3;
    this.number4 = other.number4;
    this.number5 = other.number5;
    this.number6 = other.number6;
    this.number7 = other.number7;
    this.number8 = other.number8;
    this.number9 = other.number9;
    this.number10 = other.number10;
    this.number11 = other.number11;
    this.number12 = other.number12;
    this.number13 = other.number13;
    this.number14 = other.number14;
    this.number15 = other.number15;
    this.number16 = other.number16;
    this.number17 = other.number17;
    this.number18 = other.number18;
    this.number19 = other.number19;
    this.number20 = other.number20;
    this.number21 = other.number21;
    this.number22 = other.number22;
    this.number23 = other.number23;
    this.number24 = other.number24;
    this.number25 = other.number25;
    this.number26 = other.number26;
    this.number27 = other.number27;
    this.number28 = other.number28;
    this.number29 = other.number29;
    this.number30 = other.number30;
    this.number31 = other.number31;
    this.number32 = other.number32;
    this.number33 = other.number33;
    this.number34 = other.number34;
    this.number35 = other.number35;
    this.number36 = other.number36;
    this.number37 = other.number37;
    this.number38 = other.number38;
    this.number39 = other.number39;
    this.number40 = other.number40;
    this.number41 = other.number41;
    this.number42 = other.number42;
    this.number43 = other.number43;
    this.number44 = other.number44;
    this.number45 = other.number45;
    this.number46 = other.number46;
    this.number47 = other.number47;
    this.number48 = other.number48;
    this.number49 = other.number49;
    this.number50 = other.number50;
    this.number51 = other.number51;
    this.number52 = other.number52;
    this.number53 = other.number53;
    this.number54 = other.number54;
    this.number55 = other.number55;
    this.number56 = other.number56;
    this.number57 = other.number57;
    this.number58 = other.number58;
    this.number59 = other.number59;
    this.number60 = other.number60;
    this.number61 = other.number61;
    this.number62 = other.number62;
    this.number63 = other.number63;
    this.number64 = other.number64;
    this.number65 = other.number65;
    this.number66 = other.number66;
    this.number67 = other.number67;
    this.number68 = other.number68;
    this.number69 = other.number69;
    this.number70 = other.number70;
    this.number71 = other.number71;
    this.number72 = other.number72;
    this.number73 = other.number73;
    this.number74 = other.number74;
    this.number75 = other.number75;
    this.number76 = other.number76;
    this.number77 = other.number77;
    this.number78 = other.number78;
    this.number79 = other.number79;
    this.number80 = other.number80;
    this.number81 = other.number81;
    this.number82 = other.number82;
    this.number83 = other.number83;
    this.number84 = other.number84;
    this.number85 = other.number85;
    this.number86 = other.number86;
    this.number87 = other.number87;
    this.number88 = other.number88;
    this.number89 = other.number89;
    this.number90 = other.number90;
    this.number91 = other.number91;
    this.number92 = other.number92;
    this.number93 = other.number93;
    this.number94 = other.number94;
    this.number95 = other.number95;
    this.number96 = other.number96;
    this.number97 = other.number97;
    this.number98 = other.number98;
    this.number99 = other.number99;
    this.number100 = other.number100;
    this.number101 = other.number101;
    this.number102 = other.number102;
    this.number103 = other.number103;
    this.number104 = other.number104;
    this.number105 = other.number105;
    this.number106 = other.number106;
    this.number107 = other.number107;
    this.number108 = other.number108;
    this.number109 = other.number109;
    this.number110 = other.number110;
    this.number111 = other.number111;
    this.number112 = other.number112;
    this.number113 = other.number113;
    this.number114 = other.number114;
    this.number115 = other.number115;
    this.number116 = other.number116;
    this.number117 = other.number117;
    this.number118 = other.number118;
    this.number119 = other.number119;
    this.number120 = other.number120;
    this.number121 = other.number121;
    this.number122 = other.number122;
    this.number123 = other.number123;
    this.number124 = other.number124;
    this.number125 = other.number125;
    this.number126 = other.number126;
    this.number127 = other.number127;
    this.number128 = other.number128;
    this.number129 = other.number129;
    this.number130 = other.number130;
    this.number131 = other.number131;
    this.number132 = other.number132;
    this.number133 = other.number133;
    this.number134 = other.number134;
    this.number135 = other.number135;
    this.number136 = other.number136;
    this.number137 = other.number137;
    this.number138 = other.number138;
    this.number139 = other.number139;
    this.number140 = other.number140;
    this.number141 = other.number141;
    this.number142 = other.number142;
    this.number143 = other.number143;
    this.number144 = other.number144;
    this.number145 = other.number145;
    this.number146 = other.number146;
    this.number147 = other.number147;
    this.number148 = other.number148;
    this.number149 = other.number149;
    this.number150 = other.number150;
    this.number151 = other.number151;
    this.number152 = other.number152;
    this.number153 = other.number153;
    this.number154 = other.number154;
    this.number155 = other.number155;
    this.number156 = other.number156;
    this.number157 = other.number157;
    this.number158 = other.number158;
    this.number159 = other.number159;
    this.number160 = other.number160;
    this.number161 = other.number161;
    this.number162 = other.number162;
    this.number163 = other.number163;
    this.number164 = other.number164;
    this.number165 = other.number165;
    this.number166 = other.number166;
    this.number167 = other.number167;
    this.number168 = other.number168;
    this.number169 = other.number169;
    this.number170 = other.number170;
  }

  public Data6Thrift deepCopy() {
    return new Data6Thrift(this);
  }

  @Override
  public void clear() {
    this.string1 = null;
    this.string2 = null;
    this.string3 = null;
    this.string4 = null;
    this.string5 = null;
    this.string6 = null;
    this.string7 = null;
    this.string8 = null;
    this.string9 = null;
    this.string10 = null;
    this.string11 = null;
    this.string12 = null;
    this.string13 = null;
    this.string14 = null;
    this.string15 = null;
    this.string16 = null;
    this.string17 = null;
    this.string18 = null;
    this.string19 = null;
    this.string20 = null;
    this.string21 = null;
    this.string22 = null;
    this.string23 = null;
    this.string24 = null;
    this.string25 = null;
    this.string26 = null;
    this.string27 = null;
    this.string28 = null;
    this.string29 = null;
    this.string30 = null;
    setNumber1IsSet(false);
    this.number1 = 0;
    setNumber2IsSet(false);
    this.number2 = 0;
    setNumber3IsSet(false);
    this.number3 = 0;
    setNumber4IsSet(false);
    this.number4 = 0;
    setNumber5IsSet(false);
    this.number5 = 0;
    setNumber6IsSet(false);
    this.number6 = 0;
    setNumber7IsSet(false);
    this.number7 = 0;
    setNumber8IsSet(false);
    this.number8 = 0;
    setNumber9IsSet(false);
    this.number9 = 0;
    setNumber10IsSet(false);
    this.number10 = 0;
    setNumber11IsSet(false);
    this.number11 = 0;
    setNumber12IsSet(false);
    this.number12 = 0;
    setNumber13IsSet(false);
    this.number13 = 0;
    setNumber14IsSet(false);
    this.number14 = 0;
    setNumber15IsSet(false);
    this.number15 = 0;
    setNumber16IsSet(false);
    this.number16 = 0;
    setNumber17IsSet(false);
    this.number17 = 0;
    setNumber18IsSet(false);
    this.number18 = 0;
    setNumber19IsSet(false);
    this.number19 = 0;
    setNumber20IsSet(false);
    this.number20 = 0;
    setNumber21IsSet(false);
    this.number21 = 0;
    setNumber22IsSet(false);
    this.number22 = 0;
    setNumber23IsSet(false);
    this.number23 = 0;
    setNumber24IsSet(false);
    this.number24 = 0;
    setNumber25IsSet(false);
    this.number25 = 0;
    setNumber26IsSet(false);
    this.number26 = 0;
    setNumber27IsSet(false);
    this.number27 = 0;
    setNumber28IsSet(false);
    this.number28 = 0;
    setNumber29IsSet(false);
    this.number29 = 0;
    setNumber30IsSet(false);
    this.number30 = 0;
    setNumber31IsSet(false);
    this.number31 = 0;
    setNumber32IsSet(false);
    this.number32 = 0;
    setNumber33IsSet(false);
    this.number33 = 0;
    setNumber34IsSet(false);
    this.number34 = 0;
    setNumber35IsSet(false);
    this.number35 = 0;
    setNumber36IsSet(false);
    this.number36 = 0;
    setNumber37IsSet(false);
    this.number37 = 0;
    setNumber38IsSet(false);
    this.number38 = 0;
    setNumber39IsSet(false);
    this.number39 = 0;
    setNumber40IsSet(false);
    this.number40 = 0;
    setNumber41IsSet(false);
    this.number41 = 0;
    setNumber42IsSet(false);
    this.number42 = 0;
    setNumber43IsSet(false);
    this.number43 = 0;
    setNumber44IsSet(false);
    this.number44 = 0;
    setNumber45IsSet(false);
    this.number45 = 0;
    setNumber46IsSet(false);
    this.number46 = 0;
    setNumber47IsSet(false);
    this.number47 = 0;
    setNumber48IsSet(false);
    this.number48 = 0;
    setNumber49IsSet(false);
    this.number49 = 0;
    setNumber50IsSet(false);
    this.number50 = 0;
    setNumber51IsSet(false);
    this.number51 = 0;
    setNumber52IsSet(false);
    this.number52 = 0;
    setNumber53IsSet(false);
    this.number53 = 0;
    setNumber54IsSet(false);
    this.number54 = 0;
    setNumber55IsSet(false);
    this.number55 = 0;
    setNumber56IsSet(false);
    this.number56 = 0;
    setNumber57IsSet(false);
    this.number57 = 0;
    setNumber58IsSet(false);
    this.number58 = 0;
    setNumber59IsSet(false);
    this.number59 = 0;
    setNumber60IsSet(false);
    this.number60 = 0;
    setNumber61IsSet(false);
    this.number61 = 0;
    setNumber62IsSet(false);
    this.number62 = 0;
    setNumber63IsSet(false);
    this.number63 = 0;
    setNumber64IsSet(false);
    this.number64 = 0;
    setNumber65IsSet(false);
    this.number65 = 0;
    setNumber66IsSet(false);
    this.number66 = 0;
    setNumber67IsSet(false);
    this.number67 = 0;
    setNumber68IsSet(false);
    this.number68 = 0;
    setNumber69IsSet(false);
    this.number69 = 0;
    setNumber70IsSet(false);
    this.number70 = 0;
    setNumber71IsSet(false);
    this.number71 = 0;
    setNumber72IsSet(false);
    this.number72 = 0;
    setNumber73IsSet(false);
    this.number73 = 0;
    setNumber74IsSet(false);
    this.number74 = 0;
    setNumber75IsSet(false);
    this.number75 = 0;
    setNumber76IsSet(false);
    this.number76 = 0;
    setNumber77IsSet(false);
    this.number77 = 0;
    setNumber78IsSet(false);
    this.number78 = 0;
    setNumber79IsSet(false);
    this.number79 = 0;
    setNumber80IsSet(false);
    this.number80 = 0;
    setNumber81IsSet(false);
    this.number81 = 0;
    setNumber82IsSet(false);
    this.number82 = 0;
    setNumber83IsSet(false);
    this.number83 = 0;
    setNumber84IsSet(false);
    this.number84 = 0;
    setNumber85IsSet(false);
    this.number85 = 0;
    setNumber86IsSet(false);
    this.number86 = 0;
    setNumber87IsSet(false);
    this.number87 = 0;
    setNumber88IsSet(false);
    this.number88 = 0;
    setNumber89IsSet(false);
    this.number89 = 0;
    setNumber90IsSet(false);
    this.number90 = 0;
    setNumber91IsSet(false);
    this.number91 = 0;
    setNumber92IsSet(false);
    this.number92 = 0;
    setNumber93IsSet(false);
    this.number93 = 0;
    setNumber94IsSet(false);
    this.number94 = 0;
    setNumber95IsSet(false);
    this.number95 = 0;
    setNumber96IsSet(false);
    this.number96 = 0;
    setNumber97IsSet(false);
    this.number97 = 0;
    setNumber98IsSet(false);
    this.number98 = 0;
    setNumber99IsSet(false);
    this.number99 = 0;
    setNumber100IsSet(false);
    this.number100 = 0;
    setNumber101IsSet(false);
    this.number101 = 0;
    setNumber102IsSet(false);
    this.number102 = 0;
    setNumber103IsSet(false);
    this.number103 = 0;
    setNumber104IsSet(false);
    this.number104 = 0;
    setNumber105IsSet(false);
    this.number105 = 0;
    setNumber106IsSet(false);
    this.number106 = 0;
    setNumber107IsSet(false);
    this.number107 = 0;
    setNumber108IsSet(false);
    this.number108 = 0;
    setNumber109IsSet(false);
    this.number109 = 0;
    setNumber110IsSet(false);
    this.number110 = 0;
    setNumber111IsSet(false);
    this.number111 = 0;
    setNumber112IsSet(false);
    this.number112 = 0;
    setNumber113IsSet(false);
    this.number113 = 0;
    setNumber114IsSet(false);
    this.number114 = 0;
    setNumber115IsSet(false);
    this.number115 = 0;
    setNumber116IsSet(false);
    this.number116 = 0;
    setNumber117IsSet(false);
    this.number117 = 0;
    setNumber118IsSet(false);
    this.number118 = 0;
    setNumber119IsSet(false);
    this.number119 = 0;
    setNumber120IsSet(false);
    this.number120 = 0;
    setNumber121IsSet(false);
    this.number121 = 0.0;
    setNumber122IsSet(false);
    this.number122 = 0.0;
    setNumber123IsSet(false);
    this.number123 = 0.0;
    setNumber124IsSet(false);
    this.number124 = 0.0;
    setNumber125IsSet(false);
    this.number125 = 0.0;
    setNumber126IsSet(false);
    this.number126 = 0.0;
    setNumber127IsSet(false);
    this.number127 = 0.0;
    setNumber128IsSet(false);
    this.number128 = 0.0;
    setNumber129IsSet(false);
    this.number129 = 0.0;
    setNumber130IsSet(false);
    this.number130 = 0.0;
    setNumber131IsSet(false);
    this.number131 = 0.0;
    setNumber132IsSet(false);
    this.number132 = 0.0;
    setNumber133IsSet(false);
    this.number133 = 0.0;
    setNumber134IsSet(false);
    this.number134 = 0.0;
    setNumber135IsSet(false);
    this.number135 = 0.0;
    setNumber136IsSet(false);
    this.number136 = 0.0;
    setNumber137IsSet(false);
    this.number137 = 0.0;
    setNumber138IsSet(false);
    this.number138 = 0.0;
    setNumber139IsSet(false);
    this.number139 = 0.0;
    setNumber140IsSet(false);
    this.number140 = 0.0;
    setNumber141IsSet(false);
    this.number141 = 0.0;
    setNumber142IsSet(false);
    this.number142 = 0.0;
    setNumber143IsSet(false);
    this.number143 = 0.0;
    setNumber144IsSet(false);
    this.number144 = 0.0;
    setNumber145IsSet(false);
    this.number145 = 0.0;
    setNumber146IsSet(false);
    this.number146 = 0.0;
    setNumber147IsSet(false);
    this.number147 = 0.0;
    setNumber148IsSet(false);
    this.number148 = 0.0;
    setNumber149IsSet(false);
    this.number149 = 0.0;
    setNumber150IsSet(false);
    this.number150 = 0.0;
    setNumber151IsSet(false);
    this.number151 = 0.0;
    setNumber152IsSet(false);
    this.number152 = 0.0;
    setNumber153IsSet(false);
    this.number153 = 0.0;
    setNumber154IsSet(false);
    this.number154 = 0.0;
    setNumber155IsSet(false);
    this.number155 = 0.0;
    setNumber156IsSet(false);
    this.number156 = 0.0;
    setNumber157IsSet(false);
    this.number157 = 0.0;
    setNumber158IsSet(false);
    this.number158 = 0.0;
    setNumber159IsSet(false);
    this.number159 = 0.0;
    setNumber160IsSet(false);
    this.number160 = 0.0;
    setNumber161IsSet(false);
    this.number161 = 0.0;
    setNumber162IsSet(false);
    this.number162 = 0.0;
    setNumber163IsSet(false);
    this.number163 = 0.0;
    setNumber164IsSet(false);
    this.number164 = 0.0;
    setNumber165IsSet(false);
    this.number165 = 0.0;
    setNumber166IsSet(false);
    this.number166 = 0.0;
    setNumber167IsSet(false);
    this.number167 = 0.0;
    setNumber168IsSet(false);
    this.number168 = 0.0;
    setNumber169IsSet(false);
    this.number169 = 0.0;
    setNumber170IsSet(false);
    this.number170 = 0.0;
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getString1() {
    return this.string1;
  }

  public Data6Thrift setString1(@org.apache.thrift.annotation.Nullable java.lang.String string1) {
    this.string1 = string1;
    return this;
  }

  public void unsetString1() {
    this.string1 = null;
  }

  /** Returns true if field string1 is set (has been assigned a value) and false otherwise */
  public boolean isSetString1() {
    return this.string1 != null;
  }

  public void setString1IsSet(boolean value) {
    if (!value) {
      this.string1 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getString2() {
    return this.string2;
  }

  public Data6Thrift setString2(@org.apache.thrift.annotation.Nullable java.lang.String string2) {
    this.string2 = string2;
    return this;
  }

  public void unsetString2() {
    this.string2 = null;
  }

  /** Returns true if field string2 is set (has been assigned a value) and false otherwise */
  public boolean isSetString2() {
    return this.string2 != null;
  }

  public void setString2IsSet(boolean value) {
    if (!value) {
      this.string2 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getString3() {
    return this.string3;
  }

  public Data6Thrift setString3(@org.apache.thrift.annotation.Nullable java.lang.String string3) {
    this.string3 = string3;
    return this;
  }

  public void unsetString3() {
    this.string3 = null;
  }

  /** Returns true if field string3 is set (has been assigned a value) and false otherwise */
  public boolean isSetString3() {
    return this.string3 != null;
  }

  public void setString3IsSet(boolean value) {
    if (!value) {
      this.string3 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getString4() {
    return this.string4;
  }

  public Data6Thrift setString4(@org.apache.thrift.annotation.Nullable java.lang.String string4) {
    this.string4 = string4;
    return this;
  }

  public void unsetString4() {
    this.string4 = null;
  }

  /** Returns true if field string4 is set (has been assigned a value) and false otherwise */
  public boolean isSetString4() {
    return this.string4 != null;
  }

  public void setString4IsSet(boolean value) {
    if (!value) {
      this.string4 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getString5() {
    return this.string5;
  }

  public Data6Thrift setString5(@org.apache.thrift.annotation.Nullable java.lang.String string5) {
    this.string5 = string5;
    return this;
  }

  public void unsetString5() {
    this.string5 = null;
  }

  /** Returns true if field string5 is set (has been assigned a value) and false otherwise */
  public boolean isSetString5() {
    return this.string5 != null;
  }

  public void setString5IsSet(boolean value) {
    if (!value) {
      this.string5 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getString6() {
    return this.string6;
  }

  public Data6Thrift setString6(@org.apache.thrift.annotation.Nullable java.lang.String string6) {
    this.string6 = string6;
    return this;
  }

  public void unsetString6() {
    this.string6 = null;
  }

  /** Returns true if field string6 is set (has been assigned a value) and false otherwise */
  public boolean isSetString6() {
    return this.string6 != null;
  }

  public void setString6IsSet(boolean value) {
    if (!value) {
      this.string6 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getString7() {
    return this.string7;
  }

  public Data6Thrift setString7(@org.apache.thrift.annotation.Nullable java.lang.String string7) {
    this.string7 = string7;
    return this;
  }

  public void unsetString7() {
    this.string7 = null;
  }

  /** Returns true if field string7 is set (has been assigned a value) and false otherwise */
  public boolean isSetString7() {
    return this.string7 != null;
  }

  public void setString7IsSet(boolean value) {
    if (!value) {
      this.string7 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getString8() {
    return this.string8;
  }

  public Data6Thrift setString8(@org.apache.thrift.annotation.Nullable java.lang.String string8) {
    this.string8 = string8;
    return this;
  }

  public void unsetString8() {
    this.string8 = null;
  }

  /** Returns true if field string8 is set (has been assigned a value) and false otherwise */
  public boolean isSetString8() {
    return this.string8 != null;
  }

  public void setString8IsSet(boolean value) {
    if (!value) {
      this.string8 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getString9() {
    return this.string9;
  }

  public Data6Thrift setString9(@org.apache.thrift.annotation.Nullable java.lang.String string9) {
    this.string9 = string9;
    return this;
  }

  public void unsetString9() {
    this.string9 = null;
  }

  /** Returns true if field string9 is set (has been assigned a value) and false otherwise */
  public boolean isSetString9() {
    return this.string9 != null;
  }

  public void setString9IsSet(boolean value) {
    if (!value) {
      this.string9 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getString10() {
    return this.string10;
  }

  public Data6Thrift setString10(@org.apache.thrift.annotation.Nullable java.lang.String string10) {
    this.string10 = string10;
    return this;
  }

  public void unsetString10() {
    this.string10 = null;
  }

  /** Returns true if field string10 is set (has been assigned a value) and false otherwise */
  public boolean isSetString10() {
    return this.string10 != null;
  }

  public void setString10IsSet(boolean value) {
    if (!value) {
      this.string10 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getString11() {
    return this.string11;
  }

  public Data6Thrift setString11(@org.apache.thrift.annotation.Nullable java.lang.String string11) {
    this.string11 = string11;
    return this;
  }

  public void unsetString11() {
    this.string11 = null;
  }

  /** Returns true if field string11 is set (has been assigned a value) and false otherwise */
  public boolean isSetString11() {
    return this.string11 != null;
  }

  public void setString11IsSet(boolean value) {
    if (!value) {
      this.string11 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getString12() {
    return this.string12;
  }

  public Data6Thrift setString12(@org.apache.thrift.annotation.Nullable java.lang.String string12) {
    this.string12 = string12;
    return this;
  }

  public void unsetString12() {
    this.string12 = null;
  }

  /** Returns true if field string12 is set (has been assigned a value) and false otherwise */
  public boolean isSetString12() {
    return this.string12 != null;
  }

  public void setString12IsSet(boolean value) {
    if (!value) {
      this.string12 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getString13() {
    return this.string13;
  }

  public Data6Thrift setString13(@org.apache.thrift.annotation.Nullable java.lang.String string13) {
    this.string13 = string13;
    return this;
  }

  public void unsetString13() {
    this.string13 = null;
  }

  /** Returns true if field string13 is set (has been assigned a value) and false otherwise */
  public boolean isSetString13() {
    return this.string13 != null;
  }

  public void setString13IsSet(boolean value) {
    if (!value) {
      this.string13 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getString14() {
    return this.string14;
  }

  public Data6Thrift setString14(@org.apache.thrift.annotation.Nullable java.lang.String string14) {
    this.string14 = string14;
    return this;
  }

  public void unsetString14() {
    this.string14 = null;
  }

  /** Returns true if field string14 is set (has been assigned a value) and false otherwise */
  public boolean isSetString14() {
    return this.string14 != null;
  }

  public void setString14IsSet(boolean value) {
    if (!value) {
      this.string14 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getString15() {
    return this.string15;
  }

  public Data6Thrift setString15(@org.apache.thrift.annotation.Nullable java.lang.String string15) {
    this.string15 = string15;
    return this;
  }

  public void unsetString15() {
    this.string15 = null;
  }

  /** Returns true if field string15 is set (has been assigned a value) and false otherwise */
  public boolean isSetString15() {
    return this.string15 != null;
  }

  public void setString15IsSet(boolean value) {
    if (!value) {
      this.string15 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getString16() {
    return this.string16;
  }

  public Data6Thrift setString16(@org.apache.thrift.annotation.Nullable java.lang.String string16) {
    this.string16 = string16;
    return this;
  }

  public void unsetString16() {
    this.string16 = null;
  }

  /** Returns true if field string16 is set (has been assigned a value) and false otherwise */
  public boolean isSetString16() {
    return this.string16 != null;
  }

  public void setString16IsSet(boolean value) {
    if (!value) {
      this.string16 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getString17() {
    return this.string17;
  }

  public Data6Thrift setString17(@org.apache.thrift.annotation.Nullable java.lang.String string17) {
    this.string17 = string17;
    return this;
  }

  public void unsetString17() {
    this.string17 = null;
  }

  /** Returns true if field string17 is set (has been assigned a value) and false otherwise */
  public boolean isSetString17() {
    return this.string17 != null;
  }

  public void setString17IsSet(boolean value) {
    if (!value) {
      this.string17 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getString18() {
    return this.string18;
  }

  public Data6Thrift setString18(@org.apache.thrift.annotation.Nullable java.lang.String string18) {
    this.string18 = string18;
    return this;
  }

  public void unsetString18() {
    this.string18 = null;
  }

  /** Returns true if field string18 is set (has been assigned a value) and false otherwise */
  public boolean isSetString18() {
    return this.string18 != null;
  }

  public void setString18IsSet(boolean value) {
    if (!value) {
      this.string18 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getString19() {
    return this.string19;
  }

  public Data6Thrift setString19(@org.apache.thrift.annotation.Nullable java.lang.String string19) {
    this.string19 = string19;
    return this;
  }

  public void unsetString19() {
    this.string19 = null;
  }

  /** Returns true if field string19 is set (has been assigned a value) and false otherwise */
  public boolean isSetString19() {
    return this.string19 != null;
  }

  public void setString19IsSet(boolean value) {
    if (!value) {
      this.string19 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getString20() {
    return this.string20;
  }

  public Data6Thrift setString20(@org.apache.thrift.annotation.Nullable java.lang.String string20) {
    this.string20 = string20;
    return this;
  }

  public void unsetString20() {
    this.string20 = null;
  }

  /** Returns true if field string20 is set (has been assigned a value) and false otherwise */
  public boolean isSetString20() {
    return this.string20 != null;
  }

  public void setString20IsSet(boolean value) {
    if (!value) {
      this.string20 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getString21() {
    return this.string21;
  }

  public Data6Thrift setString21(@org.apache.thrift.annotation.Nullable java.lang.String string21) {
    this.string21 = string21;
    return this;
  }

  public void unsetString21() {
    this.string21 = null;
  }

  /** Returns true if field string21 is set (has been assigned a value) and false otherwise */
  public boolean isSetString21() {
    return this.string21 != null;
  }

  public void setString21IsSet(boolean value) {
    if (!value) {
      this.string21 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getString22() {
    return this.string22;
  }

  public Data6Thrift setString22(@org.apache.thrift.annotation.Nullable java.lang.String string22) {
    this.string22 = string22;
    return this;
  }

  public void unsetString22() {
    this.string22 = null;
  }

  /** Returns true if field string22 is set (has been assigned a value) and false otherwise */
  public boolean isSetString22() {
    return this.string22 != null;
  }

  public void setString22IsSet(boolean value) {
    if (!value) {
      this.string22 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getString23() {
    return this.string23;
  }

  public Data6Thrift setString23(@org.apache.thrift.annotation.Nullable java.lang.String string23) {
    this.string23 = string23;
    return this;
  }

  public void unsetString23() {
    this.string23 = null;
  }

  /** Returns true if field string23 is set (has been assigned a value) and false otherwise */
  public boolean isSetString23() {
    return this.string23 != null;
  }

  public void setString23IsSet(boolean value) {
    if (!value) {
      this.string23 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getString24() {
    return this.string24;
  }

  public Data6Thrift setString24(@org.apache.thrift.annotation.Nullable java.lang.String string24) {
    this.string24 = string24;
    return this;
  }

  public void unsetString24() {
    this.string24 = null;
  }

  /** Returns true if field string24 is set (has been assigned a value) and false otherwise */
  public boolean isSetString24() {
    return this.string24 != null;
  }

  public void setString24IsSet(boolean value) {
    if (!value) {
      this.string24 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getString25() {
    return this.string25;
  }

  public Data6Thrift setString25(@org.apache.thrift.annotation.Nullable java.lang.String string25) {
    this.string25 = string25;
    return this;
  }

  public void unsetString25() {
    this.string25 = null;
  }

  /** Returns true if field string25 is set (has been assigned a value) and false otherwise */
  public boolean isSetString25() {
    return this.string25 != null;
  }

  public void setString25IsSet(boolean value) {
    if (!value) {
      this.string25 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getString26() {
    return this.string26;
  }

  public Data6Thrift setString26(@org.apache.thrift.annotation.Nullable java.lang.String string26) {
    this.string26 = string26;
    return this;
  }

  public void unsetString26() {
    this.string26 = null;
  }

  /** Returns true if field string26 is set (has been assigned a value) and false otherwise */
  public boolean isSetString26() {
    return this.string26 != null;
  }

  public void setString26IsSet(boolean value) {
    if (!value) {
      this.string26 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getString27() {
    return this.string27;
  }

  public Data6Thrift setString27(@org.apache.thrift.annotation.Nullable java.lang.String string27) {
    this.string27 = string27;
    return this;
  }

  public void unsetString27() {
    this.string27 = null;
  }

  /** Returns true if field string27 is set (has been assigned a value) and false otherwise */
  public boolean isSetString27() {
    return this.string27 != null;
  }

  public void setString27IsSet(boolean value) {
    if (!value) {
      this.string27 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getString28() {
    return this.string28;
  }

  public Data6Thrift setString28(@org.apache.thrift.annotation.Nullable java.lang.String string28) {
    this.string28 = string28;
    return this;
  }

  public void unsetString28() {
    this.string28 = null;
  }

  /** Returns true if field string28 is set (has been assigned a value) and false otherwise */
  public boolean isSetString28() {
    return this.string28 != null;
  }

  public void setString28IsSet(boolean value) {
    if (!value) {
      this.string28 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getString29() {
    return this.string29;
  }

  public Data6Thrift setString29(@org.apache.thrift.annotation.Nullable java.lang.String string29) {
    this.string29 = string29;
    return this;
  }

  public void unsetString29() {
    this.string29 = null;
  }

  /** Returns true if field string29 is set (has been assigned a value) and false otherwise */
  public boolean isSetString29() {
    return this.string29 != null;
  }

  public void setString29IsSet(boolean value) {
    if (!value) {
      this.string29 = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getString30() {
    return this.string30;
  }

  public Data6Thrift setString30(@org.apache.thrift.annotation.Nullable java.lang.String string30) {
    this.string30 = string30;
    return this;
  }

  public void unsetString30() {
    this.string30 = null;
  }

  /** Returns true if field string30 is set (has been assigned a value) and false otherwise */
  public boolean isSetString30() {
    return this.string30 != null;
  }

  public void setString30IsSet(boolean value) {
    if (!value) {
      this.string30 = null;
    }
  }

  public int getNumber1() {
    return this.number1;
  }

  public Data6Thrift setNumber1(int number1) {
    this.number1 = number1;
    setNumber1IsSet(true);
    return this;
  }

  public void unsetNumber1() {
    __isset_bit_vector.clear(__NUMBER1_ISSET_ID);
  }

  /** Returns true if field number1 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber1() {
    return __isset_bit_vector.get(__NUMBER1_ISSET_ID);
  }

  public void setNumber1IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER1_ISSET_ID, value);
  }

  public int getNumber2() {
    return this.number2;
  }

  public Data6Thrift setNumber2(int number2) {
    this.number2 = number2;
    setNumber2IsSet(true);
    return this;
  }

  public void unsetNumber2() {
    __isset_bit_vector.clear(__NUMBER2_ISSET_ID);
  }

  /** Returns true if field number2 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber2() {
    return __isset_bit_vector.get(__NUMBER2_ISSET_ID);
  }

  public void setNumber2IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER2_ISSET_ID, value);
  }

  public int getNumber3() {
    return this.number3;
  }

  public Data6Thrift setNumber3(int number3) {
    this.number3 = number3;
    setNumber3IsSet(true);
    return this;
  }

  public void unsetNumber3() {
    __isset_bit_vector.clear(__NUMBER3_ISSET_ID);
  }

  /** Returns true if field number3 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber3() {
    return __isset_bit_vector.get(__NUMBER3_ISSET_ID);
  }

  public void setNumber3IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER3_ISSET_ID, value);
  }

  public int getNumber4() {
    return this.number4;
  }

  public Data6Thrift setNumber4(int number4) {
    this.number4 = number4;
    setNumber4IsSet(true);
    return this;
  }

  public void unsetNumber4() {
    __isset_bit_vector.clear(__NUMBER4_ISSET_ID);
  }

  /** Returns true if field number4 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber4() {
    return __isset_bit_vector.get(__NUMBER4_ISSET_ID);
  }

  public void setNumber4IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER4_ISSET_ID, value);
  }

  public int getNumber5() {
    return this.number5;
  }

  public Data6Thrift setNumber5(int number5) {
    this.number5 = number5;
    setNumber5IsSet(true);
    return this;
  }

  public void unsetNumber5() {
    __isset_bit_vector.clear(__NUMBER5_ISSET_ID);
  }

  /** Returns true if field number5 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber5() {
    return __isset_bit_vector.get(__NUMBER5_ISSET_ID);
  }

  public void setNumber5IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER5_ISSET_ID, value);
  }

  public int getNumber6() {
    return this.number6;
  }

  public Data6Thrift setNumber6(int number6) {
    this.number6 = number6;
    setNumber6IsSet(true);
    return this;
  }

  public void unsetNumber6() {
    __isset_bit_vector.clear(__NUMBER6_ISSET_ID);
  }

  /** Returns true if field number6 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber6() {
    return __isset_bit_vector.get(__NUMBER6_ISSET_ID);
  }

  public void setNumber6IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER6_ISSET_ID, value);
  }

  public int getNumber7() {
    return this.number7;
  }

  public Data6Thrift setNumber7(int number7) {
    this.number7 = number7;
    setNumber7IsSet(true);
    return this;
  }

  public void unsetNumber7() {
    __isset_bit_vector.clear(__NUMBER7_ISSET_ID);
  }

  /** Returns true if field number7 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber7() {
    return __isset_bit_vector.get(__NUMBER7_ISSET_ID);
  }

  public void setNumber7IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER7_ISSET_ID, value);
  }

  public int getNumber8() {
    return this.number8;
  }

  public Data6Thrift setNumber8(int number8) {
    this.number8 = number8;
    setNumber8IsSet(true);
    return this;
  }

  public void unsetNumber8() {
    __isset_bit_vector.clear(__NUMBER8_ISSET_ID);
  }

  /** Returns true if field number8 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber8() {
    return __isset_bit_vector.get(__NUMBER8_ISSET_ID);
  }

  public void setNumber8IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER8_ISSET_ID, value);
  }

  public int getNumber9() {
    return this.number9;
  }

  public Data6Thrift setNumber9(int number9) {
    this.number9 = number9;
    setNumber9IsSet(true);
    return this;
  }

  public void unsetNumber9() {
    __isset_bit_vector.clear(__NUMBER9_ISSET_ID);
  }

  /** Returns true if field number9 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber9() {
    return __isset_bit_vector.get(__NUMBER9_ISSET_ID);
  }

  public void setNumber9IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER9_ISSET_ID, value);
  }

  public int getNumber10() {
    return this.number10;
  }

  public Data6Thrift setNumber10(int number10) {
    this.number10 = number10;
    setNumber10IsSet(true);
    return this;
  }

  public void unsetNumber10() {
    __isset_bit_vector.clear(__NUMBER10_ISSET_ID);
  }

  /** Returns true if field number10 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber10() {
    return __isset_bit_vector.get(__NUMBER10_ISSET_ID);
  }

  public void setNumber10IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER10_ISSET_ID, value);
  }

  public int getNumber11() {
    return this.number11;
  }

  public Data6Thrift setNumber11(int number11) {
    this.number11 = number11;
    setNumber11IsSet(true);
    return this;
  }

  public void unsetNumber11() {
    __isset_bit_vector.clear(__NUMBER11_ISSET_ID);
  }

  /** Returns true if field number11 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber11() {
    return __isset_bit_vector.get(__NUMBER11_ISSET_ID);
  }

  public void setNumber11IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER11_ISSET_ID, value);
  }

  public int getNumber12() {
    return this.number12;
  }

  public Data6Thrift setNumber12(int number12) {
    this.number12 = number12;
    setNumber12IsSet(true);
    return this;
  }

  public void unsetNumber12() {
    __isset_bit_vector.clear(__NUMBER12_ISSET_ID);
  }

  /** Returns true if field number12 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber12() {
    return __isset_bit_vector.get(__NUMBER12_ISSET_ID);
  }

  public void setNumber12IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER12_ISSET_ID, value);
  }

  public int getNumber13() {
    return this.number13;
  }

  public Data6Thrift setNumber13(int number13) {
    this.number13 = number13;
    setNumber13IsSet(true);
    return this;
  }

  public void unsetNumber13() {
    __isset_bit_vector.clear(__NUMBER13_ISSET_ID);
  }

  /** Returns true if field number13 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber13() {
    return __isset_bit_vector.get(__NUMBER13_ISSET_ID);
  }

  public void setNumber13IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER13_ISSET_ID, value);
  }

  public int getNumber14() {
    return this.number14;
  }

  public Data6Thrift setNumber14(int number14) {
    this.number14 = number14;
    setNumber14IsSet(true);
    return this;
  }

  public void unsetNumber14() {
    __isset_bit_vector.clear(__NUMBER14_ISSET_ID);
  }

  /** Returns true if field number14 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber14() {
    return __isset_bit_vector.get(__NUMBER14_ISSET_ID);
  }

  public void setNumber14IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER14_ISSET_ID, value);
  }

  public int getNumber15() {
    return this.number15;
  }

  public Data6Thrift setNumber15(int number15) {
    this.number15 = number15;
    setNumber15IsSet(true);
    return this;
  }

  public void unsetNumber15() {
    __isset_bit_vector.clear(__NUMBER15_ISSET_ID);
  }

  /** Returns true if field number15 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber15() {
    return __isset_bit_vector.get(__NUMBER15_ISSET_ID);
  }

  public void setNumber15IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER15_ISSET_ID, value);
  }

  public int getNumber16() {
    return this.number16;
  }

  public Data6Thrift setNumber16(int number16) {
    this.number16 = number16;
    setNumber16IsSet(true);
    return this;
  }

  public void unsetNumber16() {
    __isset_bit_vector.clear(__NUMBER16_ISSET_ID);
  }

  /** Returns true if field number16 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber16() {
    return __isset_bit_vector.get(__NUMBER16_ISSET_ID);
  }

  public void setNumber16IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER16_ISSET_ID, value);
  }

  public int getNumber17() {
    return this.number17;
  }

  public Data6Thrift setNumber17(int number17) {
    this.number17 = number17;
    setNumber17IsSet(true);
    return this;
  }

  public void unsetNumber17() {
    __isset_bit_vector.clear(__NUMBER17_ISSET_ID);
  }

  /** Returns true if field number17 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber17() {
    return __isset_bit_vector.get(__NUMBER17_ISSET_ID);
  }

  public void setNumber17IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER17_ISSET_ID, value);
  }

  public int getNumber18() {
    return this.number18;
  }

  public Data6Thrift setNumber18(int number18) {
    this.number18 = number18;
    setNumber18IsSet(true);
    return this;
  }

  public void unsetNumber18() {
    __isset_bit_vector.clear(__NUMBER18_ISSET_ID);
  }

  /** Returns true if field number18 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber18() {
    return __isset_bit_vector.get(__NUMBER18_ISSET_ID);
  }

  public void setNumber18IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER18_ISSET_ID, value);
  }

  public int getNumber19() {
    return this.number19;
  }

  public Data6Thrift setNumber19(int number19) {
    this.number19 = number19;
    setNumber19IsSet(true);
    return this;
  }

  public void unsetNumber19() {
    __isset_bit_vector.clear(__NUMBER19_ISSET_ID);
  }

  /** Returns true if field number19 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber19() {
    return __isset_bit_vector.get(__NUMBER19_ISSET_ID);
  }

  public void setNumber19IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER19_ISSET_ID, value);
  }

  public int getNumber20() {
    return this.number20;
  }

  public Data6Thrift setNumber20(int number20) {
    this.number20 = number20;
    setNumber20IsSet(true);
    return this;
  }

  public void unsetNumber20() {
    __isset_bit_vector.clear(__NUMBER20_ISSET_ID);
  }

  /** Returns true if field number20 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber20() {
    return __isset_bit_vector.get(__NUMBER20_ISSET_ID);
  }

  public void setNumber20IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER20_ISSET_ID, value);
  }

  public int getNumber21() {
    return this.number21;
  }

  public Data6Thrift setNumber21(int number21) {
    this.number21 = number21;
    setNumber21IsSet(true);
    return this;
  }

  public void unsetNumber21() {
    __isset_bit_vector.clear(__NUMBER21_ISSET_ID);
  }

  /** Returns true if field number21 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber21() {
    return __isset_bit_vector.get(__NUMBER21_ISSET_ID);
  }

  public void setNumber21IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER21_ISSET_ID, value);
  }

  public int getNumber22() {
    return this.number22;
  }

  public Data6Thrift setNumber22(int number22) {
    this.number22 = number22;
    setNumber22IsSet(true);
    return this;
  }

  public void unsetNumber22() {
    __isset_bit_vector.clear(__NUMBER22_ISSET_ID);
  }

  /** Returns true if field number22 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber22() {
    return __isset_bit_vector.get(__NUMBER22_ISSET_ID);
  }

  public void setNumber22IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER22_ISSET_ID, value);
  }

  public int getNumber23() {
    return this.number23;
  }

  public Data6Thrift setNumber23(int number23) {
    this.number23 = number23;
    setNumber23IsSet(true);
    return this;
  }

  public void unsetNumber23() {
    __isset_bit_vector.clear(__NUMBER23_ISSET_ID);
  }

  /** Returns true if field number23 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber23() {
    return __isset_bit_vector.get(__NUMBER23_ISSET_ID);
  }

  public void setNumber23IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER23_ISSET_ID, value);
  }

  public int getNumber24() {
    return this.number24;
  }

  public Data6Thrift setNumber24(int number24) {
    this.number24 = number24;
    setNumber24IsSet(true);
    return this;
  }

  public void unsetNumber24() {
    __isset_bit_vector.clear(__NUMBER24_ISSET_ID);
  }

  /** Returns true if field number24 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber24() {
    return __isset_bit_vector.get(__NUMBER24_ISSET_ID);
  }

  public void setNumber24IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER24_ISSET_ID, value);
  }

  public int getNumber25() {
    return this.number25;
  }

  public Data6Thrift setNumber25(int number25) {
    this.number25 = number25;
    setNumber25IsSet(true);
    return this;
  }

  public void unsetNumber25() {
    __isset_bit_vector.clear(__NUMBER25_ISSET_ID);
  }

  /** Returns true if field number25 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber25() {
    return __isset_bit_vector.get(__NUMBER25_ISSET_ID);
  }

  public void setNumber25IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER25_ISSET_ID, value);
  }

  public int getNumber26() {
    return this.number26;
  }

  public Data6Thrift setNumber26(int number26) {
    this.number26 = number26;
    setNumber26IsSet(true);
    return this;
  }

  public void unsetNumber26() {
    __isset_bit_vector.clear(__NUMBER26_ISSET_ID);
  }

  /** Returns true if field number26 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber26() {
    return __isset_bit_vector.get(__NUMBER26_ISSET_ID);
  }

  public void setNumber26IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER26_ISSET_ID, value);
  }

  public int getNumber27() {
    return this.number27;
  }

  public Data6Thrift setNumber27(int number27) {
    this.number27 = number27;
    setNumber27IsSet(true);
    return this;
  }

  public void unsetNumber27() {
    __isset_bit_vector.clear(__NUMBER27_ISSET_ID);
  }

  /** Returns true if field number27 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber27() {
    return __isset_bit_vector.get(__NUMBER27_ISSET_ID);
  }

  public void setNumber27IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER27_ISSET_ID, value);
  }

  public int getNumber28() {
    return this.number28;
  }

  public Data6Thrift setNumber28(int number28) {
    this.number28 = number28;
    setNumber28IsSet(true);
    return this;
  }

  public void unsetNumber28() {
    __isset_bit_vector.clear(__NUMBER28_ISSET_ID);
  }

  /** Returns true if field number28 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber28() {
    return __isset_bit_vector.get(__NUMBER28_ISSET_ID);
  }

  public void setNumber28IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER28_ISSET_ID, value);
  }

  public int getNumber29() {
    return this.number29;
  }

  public Data6Thrift setNumber29(int number29) {
    this.number29 = number29;
    setNumber29IsSet(true);
    return this;
  }

  public void unsetNumber29() {
    __isset_bit_vector.clear(__NUMBER29_ISSET_ID);
  }

  /** Returns true if field number29 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber29() {
    return __isset_bit_vector.get(__NUMBER29_ISSET_ID);
  }

  public void setNumber29IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER29_ISSET_ID, value);
  }

  public int getNumber30() {
    return this.number30;
  }

  public Data6Thrift setNumber30(int number30) {
    this.number30 = number30;
    setNumber30IsSet(true);
    return this;
  }

  public void unsetNumber30() {
    __isset_bit_vector.clear(__NUMBER30_ISSET_ID);
  }

  /** Returns true if field number30 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber30() {
    return __isset_bit_vector.get(__NUMBER30_ISSET_ID);
  }

  public void setNumber30IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER30_ISSET_ID, value);
  }

  public int getNumber31() {
    return this.number31;
  }

  public Data6Thrift setNumber31(int number31) {
    this.number31 = number31;
    setNumber31IsSet(true);
    return this;
  }

  public void unsetNumber31() {
    __isset_bit_vector.clear(__NUMBER31_ISSET_ID);
  }

  /** Returns true if field number31 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber31() {
    return __isset_bit_vector.get(__NUMBER31_ISSET_ID);
  }

  public void setNumber31IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER31_ISSET_ID, value);
  }

  public int getNumber32() {
    return this.number32;
  }

  public Data6Thrift setNumber32(int number32) {
    this.number32 = number32;
    setNumber32IsSet(true);
    return this;
  }

  public void unsetNumber32() {
    __isset_bit_vector.clear(__NUMBER32_ISSET_ID);
  }

  /** Returns true if field number32 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber32() {
    return __isset_bit_vector.get(__NUMBER32_ISSET_ID);
  }

  public void setNumber32IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER32_ISSET_ID, value);
  }

  public int getNumber33() {
    return this.number33;
  }

  public Data6Thrift setNumber33(int number33) {
    this.number33 = number33;
    setNumber33IsSet(true);
    return this;
  }

  public void unsetNumber33() {
    __isset_bit_vector.clear(__NUMBER33_ISSET_ID);
  }

  /** Returns true if field number33 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber33() {
    return __isset_bit_vector.get(__NUMBER33_ISSET_ID);
  }

  public void setNumber33IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER33_ISSET_ID, value);
  }

  public int getNumber34() {
    return this.number34;
  }

  public Data6Thrift setNumber34(int number34) {
    this.number34 = number34;
    setNumber34IsSet(true);
    return this;
  }

  public void unsetNumber34() {
    __isset_bit_vector.clear(__NUMBER34_ISSET_ID);
  }

  /** Returns true if field number34 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber34() {
    return __isset_bit_vector.get(__NUMBER34_ISSET_ID);
  }

  public void setNumber34IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER34_ISSET_ID, value);
  }

  public int getNumber35() {
    return this.number35;
  }

  public Data6Thrift setNumber35(int number35) {
    this.number35 = number35;
    setNumber35IsSet(true);
    return this;
  }

  public void unsetNumber35() {
    __isset_bit_vector.clear(__NUMBER35_ISSET_ID);
  }

  /** Returns true if field number35 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber35() {
    return __isset_bit_vector.get(__NUMBER35_ISSET_ID);
  }

  public void setNumber35IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER35_ISSET_ID, value);
  }

  public int getNumber36() {
    return this.number36;
  }

  public Data6Thrift setNumber36(int number36) {
    this.number36 = number36;
    setNumber36IsSet(true);
    return this;
  }

  public void unsetNumber36() {
    __isset_bit_vector.clear(__NUMBER36_ISSET_ID);
  }

  /** Returns true if field number36 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber36() {
    return __isset_bit_vector.get(__NUMBER36_ISSET_ID);
  }

  public void setNumber36IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER36_ISSET_ID, value);
  }

  public int getNumber37() {
    return this.number37;
  }

  public Data6Thrift setNumber37(int number37) {
    this.number37 = number37;
    setNumber37IsSet(true);
    return this;
  }

  public void unsetNumber37() {
    __isset_bit_vector.clear(__NUMBER37_ISSET_ID);
  }

  /** Returns true if field number37 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber37() {
    return __isset_bit_vector.get(__NUMBER37_ISSET_ID);
  }

  public void setNumber37IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER37_ISSET_ID, value);
  }

  public int getNumber38() {
    return this.number38;
  }

  public Data6Thrift setNumber38(int number38) {
    this.number38 = number38;
    setNumber38IsSet(true);
    return this;
  }

  public void unsetNumber38() {
    __isset_bit_vector.clear(__NUMBER38_ISSET_ID);
  }

  /** Returns true if field number38 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber38() {
    return __isset_bit_vector.get(__NUMBER38_ISSET_ID);
  }

  public void setNumber38IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER38_ISSET_ID, value);
  }

  public int getNumber39() {
    return this.number39;
  }

  public Data6Thrift setNumber39(int number39) {
    this.number39 = number39;
    setNumber39IsSet(true);
    return this;
  }

  public void unsetNumber39() {
    __isset_bit_vector.clear(__NUMBER39_ISSET_ID);
  }

  /** Returns true if field number39 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber39() {
    return __isset_bit_vector.get(__NUMBER39_ISSET_ID);
  }

  public void setNumber39IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER39_ISSET_ID, value);
  }

  public int getNumber40() {
    return this.number40;
  }

  public Data6Thrift setNumber40(int number40) {
    this.number40 = number40;
    setNumber40IsSet(true);
    return this;
  }

  public void unsetNumber40() {
    __isset_bit_vector.clear(__NUMBER40_ISSET_ID);
  }

  /** Returns true if field number40 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber40() {
    return __isset_bit_vector.get(__NUMBER40_ISSET_ID);
  }

  public void setNumber40IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER40_ISSET_ID, value);
  }

  public int getNumber41() {
    return this.number41;
  }

  public Data6Thrift setNumber41(int number41) {
    this.number41 = number41;
    setNumber41IsSet(true);
    return this;
  }

  public void unsetNumber41() {
    __isset_bit_vector.clear(__NUMBER41_ISSET_ID);
  }

  /** Returns true if field number41 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber41() {
    return __isset_bit_vector.get(__NUMBER41_ISSET_ID);
  }

  public void setNumber41IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER41_ISSET_ID, value);
  }

  public int getNumber42() {
    return this.number42;
  }

  public Data6Thrift setNumber42(int number42) {
    this.number42 = number42;
    setNumber42IsSet(true);
    return this;
  }

  public void unsetNumber42() {
    __isset_bit_vector.clear(__NUMBER42_ISSET_ID);
  }

  /** Returns true if field number42 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber42() {
    return __isset_bit_vector.get(__NUMBER42_ISSET_ID);
  }

  public void setNumber42IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER42_ISSET_ID, value);
  }

  public int getNumber43() {
    return this.number43;
  }

  public Data6Thrift setNumber43(int number43) {
    this.number43 = number43;
    setNumber43IsSet(true);
    return this;
  }

  public void unsetNumber43() {
    __isset_bit_vector.clear(__NUMBER43_ISSET_ID);
  }

  /** Returns true if field number43 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber43() {
    return __isset_bit_vector.get(__NUMBER43_ISSET_ID);
  }

  public void setNumber43IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER43_ISSET_ID, value);
  }

  public int getNumber44() {
    return this.number44;
  }

  public Data6Thrift setNumber44(int number44) {
    this.number44 = number44;
    setNumber44IsSet(true);
    return this;
  }

  public void unsetNumber44() {
    __isset_bit_vector.clear(__NUMBER44_ISSET_ID);
  }

  /** Returns true if field number44 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber44() {
    return __isset_bit_vector.get(__NUMBER44_ISSET_ID);
  }

  public void setNumber44IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER44_ISSET_ID, value);
  }

  public int getNumber45() {
    return this.number45;
  }

  public Data6Thrift setNumber45(int number45) {
    this.number45 = number45;
    setNumber45IsSet(true);
    return this;
  }

  public void unsetNumber45() {
    __isset_bit_vector.clear(__NUMBER45_ISSET_ID);
  }

  /** Returns true if field number45 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber45() {
    return __isset_bit_vector.get(__NUMBER45_ISSET_ID);
  }

  public void setNumber45IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER45_ISSET_ID, value);
  }

  public int getNumber46() {
    return this.number46;
  }

  public Data6Thrift setNumber46(int number46) {
    this.number46 = number46;
    setNumber46IsSet(true);
    return this;
  }

  public void unsetNumber46() {
    __isset_bit_vector.clear(__NUMBER46_ISSET_ID);
  }

  /** Returns true if field number46 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber46() {
    return __isset_bit_vector.get(__NUMBER46_ISSET_ID);
  }

  public void setNumber46IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER46_ISSET_ID, value);
  }

  public int getNumber47() {
    return this.number47;
  }

  public Data6Thrift setNumber47(int number47) {
    this.number47 = number47;
    setNumber47IsSet(true);
    return this;
  }

  public void unsetNumber47() {
    __isset_bit_vector.clear(__NUMBER47_ISSET_ID);
  }

  /** Returns true if field number47 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber47() {
    return __isset_bit_vector.get(__NUMBER47_ISSET_ID);
  }

  public void setNumber47IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER47_ISSET_ID, value);
  }

  public int getNumber48() {
    return this.number48;
  }

  public Data6Thrift setNumber48(int number48) {
    this.number48 = number48;
    setNumber48IsSet(true);
    return this;
  }

  public void unsetNumber48() {
    __isset_bit_vector.clear(__NUMBER48_ISSET_ID);
  }

  /** Returns true if field number48 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber48() {
    return __isset_bit_vector.get(__NUMBER48_ISSET_ID);
  }

  public void setNumber48IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER48_ISSET_ID, value);
  }

  public int getNumber49() {
    return this.number49;
  }

  public Data6Thrift setNumber49(int number49) {
    this.number49 = number49;
    setNumber49IsSet(true);
    return this;
  }

  public void unsetNumber49() {
    __isset_bit_vector.clear(__NUMBER49_ISSET_ID);
  }

  /** Returns true if field number49 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber49() {
    return __isset_bit_vector.get(__NUMBER49_ISSET_ID);
  }

  public void setNumber49IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER49_ISSET_ID, value);
  }

  public int getNumber50() {
    return this.number50;
  }

  public Data6Thrift setNumber50(int number50) {
    this.number50 = number50;
    setNumber50IsSet(true);
    return this;
  }

  public void unsetNumber50() {
    __isset_bit_vector.clear(__NUMBER50_ISSET_ID);
  }

  /** Returns true if field number50 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber50() {
    return __isset_bit_vector.get(__NUMBER50_ISSET_ID);
  }

  public void setNumber50IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER50_ISSET_ID, value);
  }

  public int getNumber51() {
    return this.number51;
  }

  public Data6Thrift setNumber51(int number51) {
    this.number51 = number51;
    setNumber51IsSet(true);
    return this;
  }

  public void unsetNumber51() {
    __isset_bit_vector.clear(__NUMBER51_ISSET_ID);
  }

  /** Returns true if field number51 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber51() {
    return __isset_bit_vector.get(__NUMBER51_ISSET_ID);
  }

  public void setNumber51IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER51_ISSET_ID, value);
  }

  public int getNumber52() {
    return this.number52;
  }

  public Data6Thrift setNumber52(int number52) {
    this.number52 = number52;
    setNumber52IsSet(true);
    return this;
  }

  public void unsetNumber52() {
    __isset_bit_vector.clear(__NUMBER52_ISSET_ID);
  }

  /** Returns true if field number52 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber52() {
    return __isset_bit_vector.get(__NUMBER52_ISSET_ID);
  }

  public void setNumber52IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER52_ISSET_ID, value);
  }

  public int getNumber53() {
    return this.number53;
  }

  public Data6Thrift setNumber53(int number53) {
    this.number53 = number53;
    setNumber53IsSet(true);
    return this;
  }

  public void unsetNumber53() {
    __isset_bit_vector.clear(__NUMBER53_ISSET_ID);
  }

  /** Returns true if field number53 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber53() {
    return __isset_bit_vector.get(__NUMBER53_ISSET_ID);
  }

  public void setNumber53IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER53_ISSET_ID, value);
  }

  public int getNumber54() {
    return this.number54;
  }

  public Data6Thrift setNumber54(int number54) {
    this.number54 = number54;
    setNumber54IsSet(true);
    return this;
  }

  public void unsetNumber54() {
    __isset_bit_vector.clear(__NUMBER54_ISSET_ID);
  }

  /** Returns true if field number54 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber54() {
    return __isset_bit_vector.get(__NUMBER54_ISSET_ID);
  }

  public void setNumber54IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER54_ISSET_ID, value);
  }

  public int getNumber55() {
    return this.number55;
  }

  public Data6Thrift setNumber55(int number55) {
    this.number55 = number55;
    setNumber55IsSet(true);
    return this;
  }

  public void unsetNumber55() {
    __isset_bit_vector.clear(__NUMBER55_ISSET_ID);
  }

  /** Returns true if field number55 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber55() {
    return __isset_bit_vector.get(__NUMBER55_ISSET_ID);
  }

  public void setNumber55IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER55_ISSET_ID, value);
  }

  public int getNumber56() {
    return this.number56;
  }

  public Data6Thrift setNumber56(int number56) {
    this.number56 = number56;
    setNumber56IsSet(true);
    return this;
  }

  public void unsetNumber56() {
    __isset_bit_vector.clear(__NUMBER56_ISSET_ID);
  }

  /** Returns true if field number56 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber56() {
    return __isset_bit_vector.get(__NUMBER56_ISSET_ID);
  }

  public void setNumber56IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER56_ISSET_ID, value);
  }

  public int getNumber57() {
    return this.number57;
  }

  public Data6Thrift setNumber57(int number57) {
    this.number57 = number57;
    setNumber57IsSet(true);
    return this;
  }

  public void unsetNumber57() {
    __isset_bit_vector.clear(__NUMBER57_ISSET_ID);
  }

  /** Returns true if field number57 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber57() {
    return __isset_bit_vector.get(__NUMBER57_ISSET_ID);
  }

  public void setNumber57IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER57_ISSET_ID, value);
  }

  public int getNumber58() {
    return this.number58;
  }

  public Data6Thrift setNumber58(int number58) {
    this.number58 = number58;
    setNumber58IsSet(true);
    return this;
  }

  public void unsetNumber58() {
    __isset_bit_vector.clear(__NUMBER58_ISSET_ID);
  }

  /** Returns true if field number58 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber58() {
    return __isset_bit_vector.get(__NUMBER58_ISSET_ID);
  }

  public void setNumber58IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER58_ISSET_ID, value);
  }

  public int getNumber59() {
    return this.number59;
  }

  public Data6Thrift setNumber59(int number59) {
    this.number59 = number59;
    setNumber59IsSet(true);
    return this;
  }

  public void unsetNumber59() {
    __isset_bit_vector.clear(__NUMBER59_ISSET_ID);
  }

  /** Returns true if field number59 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber59() {
    return __isset_bit_vector.get(__NUMBER59_ISSET_ID);
  }

  public void setNumber59IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER59_ISSET_ID, value);
  }

  public int getNumber60() {
    return this.number60;
  }

  public Data6Thrift setNumber60(int number60) {
    this.number60 = number60;
    setNumber60IsSet(true);
    return this;
  }

  public void unsetNumber60() {
    __isset_bit_vector.clear(__NUMBER60_ISSET_ID);
  }

  /** Returns true if field number60 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber60() {
    return __isset_bit_vector.get(__NUMBER60_ISSET_ID);
  }

  public void setNumber60IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER60_ISSET_ID, value);
  }

  public int getNumber61() {
    return this.number61;
  }

  public Data6Thrift setNumber61(int number61) {
    this.number61 = number61;
    setNumber61IsSet(true);
    return this;
  }

  public void unsetNumber61() {
    __isset_bit_vector.clear(__NUMBER61_ISSET_ID);
  }

  /** Returns true if field number61 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber61() {
    return __isset_bit_vector.get(__NUMBER61_ISSET_ID);
  }

  public void setNumber61IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER61_ISSET_ID, value);
  }

  public int getNumber62() {
    return this.number62;
  }

  public Data6Thrift setNumber62(int number62) {
    this.number62 = number62;
    setNumber62IsSet(true);
    return this;
  }

  public void unsetNumber62() {
    __isset_bit_vector.clear(__NUMBER62_ISSET_ID);
  }

  /** Returns true if field number62 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber62() {
    return __isset_bit_vector.get(__NUMBER62_ISSET_ID);
  }

  public void setNumber62IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER62_ISSET_ID, value);
  }

  public int getNumber63() {
    return this.number63;
  }

  public Data6Thrift setNumber63(int number63) {
    this.number63 = number63;
    setNumber63IsSet(true);
    return this;
  }

  public void unsetNumber63() {
    __isset_bit_vector.clear(__NUMBER63_ISSET_ID);
  }

  /** Returns true if field number63 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber63() {
    return __isset_bit_vector.get(__NUMBER63_ISSET_ID);
  }

  public void setNumber63IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER63_ISSET_ID, value);
  }

  public int getNumber64() {
    return this.number64;
  }

  public Data6Thrift setNumber64(int number64) {
    this.number64 = number64;
    setNumber64IsSet(true);
    return this;
  }

  public void unsetNumber64() {
    __isset_bit_vector.clear(__NUMBER64_ISSET_ID);
  }

  /** Returns true if field number64 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber64() {
    return __isset_bit_vector.get(__NUMBER64_ISSET_ID);
  }

  public void setNumber64IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER64_ISSET_ID, value);
  }

  public int getNumber65() {
    return this.number65;
  }

  public Data6Thrift setNumber65(int number65) {
    this.number65 = number65;
    setNumber65IsSet(true);
    return this;
  }

  public void unsetNumber65() {
    __isset_bit_vector.clear(__NUMBER65_ISSET_ID);
  }

  /** Returns true if field number65 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber65() {
    return __isset_bit_vector.get(__NUMBER65_ISSET_ID);
  }

  public void setNumber65IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER65_ISSET_ID, value);
  }

  public int getNumber66() {
    return this.number66;
  }

  public Data6Thrift setNumber66(int number66) {
    this.number66 = number66;
    setNumber66IsSet(true);
    return this;
  }

  public void unsetNumber66() {
    __isset_bit_vector.clear(__NUMBER66_ISSET_ID);
  }

  /** Returns true if field number66 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber66() {
    return __isset_bit_vector.get(__NUMBER66_ISSET_ID);
  }

  public void setNumber66IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER66_ISSET_ID, value);
  }

  public int getNumber67() {
    return this.number67;
  }

  public Data6Thrift setNumber67(int number67) {
    this.number67 = number67;
    setNumber67IsSet(true);
    return this;
  }

  public void unsetNumber67() {
    __isset_bit_vector.clear(__NUMBER67_ISSET_ID);
  }

  /** Returns true if field number67 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber67() {
    return __isset_bit_vector.get(__NUMBER67_ISSET_ID);
  }

  public void setNumber67IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER67_ISSET_ID, value);
  }

  public int getNumber68() {
    return this.number68;
  }

  public Data6Thrift setNumber68(int number68) {
    this.number68 = number68;
    setNumber68IsSet(true);
    return this;
  }

  public void unsetNumber68() {
    __isset_bit_vector.clear(__NUMBER68_ISSET_ID);
  }

  /** Returns true if field number68 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber68() {
    return __isset_bit_vector.get(__NUMBER68_ISSET_ID);
  }

  public void setNumber68IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER68_ISSET_ID, value);
  }

  public int getNumber69() {
    return this.number69;
  }

  public Data6Thrift setNumber69(int number69) {
    this.number69 = number69;
    setNumber69IsSet(true);
    return this;
  }

  public void unsetNumber69() {
    __isset_bit_vector.clear(__NUMBER69_ISSET_ID);
  }

  /** Returns true if field number69 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber69() {
    return __isset_bit_vector.get(__NUMBER69_ISSET_ID);
  }

  public void setNumber69IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER69_ISSET_ID, value);
  }

  public int getNumber70() {
    return this.number70;
  }

  public Data6Thrift setNumber70(int number70) {
    this.number70 = number70;
    setNumber70IsSet(true);
    return this;
  }

  public void unsetNumber70() {
    __isset_bit_vector.clear(__NUMBER70_ISSET_ID);
  }

  /** Returns true if field number70 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber70() {
    return __isset_bit_vector.get(__NUMBER70_ISSET_ID);
  }

  public void setNumber70IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER70_ISSET_ID, value);
  }

  public int getNumber71() {
    return this.number71;
  }

  public Data6Thrift setNumber71(int number71) {
    this.number71 = number71;
    setNumber71IsSet(true);
    return this;
  }

  public void unsetNumber71() {
    __isset_bit_vector.clear(__NUMBER71_ISSET_ID);
  }

  /** Returns true if field number71 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber71() {
    return __isset_bit_vector.get(__NUMBER71_ISSET_ID);
  }

  public void setNumber71IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER71_ISSET_ID, value);
  }

  public int getNumber72() {
    return this.number72;
  }

  public Data6Thrift setNumber72(int number72) {
    this.number72 = number72;
    setNumber72IsSet(true);
    return this;
  }

  public void unsetNumber72() {
    __isset_bit_vector.clear(__NUMBER72_ISSET_ID);
  }

  /** Returns true if field number72 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber72() {
    return __isset_bit_vector.get(__NUMBER72_ISSET_ID);
  }

  public void setNumber72IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER72_ISSET_ID, value);
  }

  public int getNumber73() {
    return this.number73;
  }

  public Data6Thrift setNumber73(int number73) {
    this.number73 = number73;
    setNumber73IsSet(true);
    return this;
  }

  public void unsetNumber73() {
    __isset_bit_vector.clear(__NUMBER73_ISSET_ID);
  }

  /** Returns true if field number73 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber73() {
    return __isset_bit_vector.get(__NUMBER73_ISSET_ID);
  }

  public void setNumber73IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER73_ISSET_ID, value);
  }

  public int getNumber74() {
    return this.number74;
  }

  public Data6Thrift setNumber74(int number74) {
    this.number74 = number74;
    setNumber74IsSet(true);
    return this;
  }

  public void unsetNumber74() {
    __isset_bit_vector.clear(__NUMBER74_ISSET_ID);
  }

  /** Returns true if field number74 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber74() {
    return __isset_bit_vector.get(__NUMBER74_ISSET_ID);
  }

  public void setNumber74IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER74_ISSET_ID, value);
  }

  public int getNumber75() {
    return this.number75;
  }

  public Data6Thrift setNumber75(int number75) {
    this.number75 = number75;
    setNumber75IsSet(true);
    return this;
  }

  public void unsetNumber75() {
    __isset_bit_vector.clear(__NUMBER75_ISSET_ID);
  }

  /** Returns true if field number75 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber75() {
    return __isset_bit_vector.get(__NUMBER75_ISSET_ID);
  }

  public void setNumber75IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER75_ISSET_ID, value);
  }

  public int getNumber76() {
    return this.number76;
  }

  public Data6Thrift setNumber76(int number76) {
    this.number76 = number76;
    setNumber76IsSet(true);
    return this;
  }

  public void unsetNumber76() {
    __isset_bit_vector.clear(__NUMBER76_ISSET_ID);
  }

  /** Returns true if field number76 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber76() {
    return __isset_bit_vector.get(__NUMBER76_ISSET_ID);
  }

  public void setNumber76IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER76_ISSET_ID, value);
  }

  public int getNumber77() {
    return this.number77;
  }

  public Data6Thrift setNumber77(int number77) {
    this.number77 = number77;
    setNumber77IsSet(true);
    return this;
  }

  public void unsetNumber77() {
    __isset_bit_vector.clear(__NUMBER77_ISSET_ID);
  }

  /** Returns true if field number77 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber77() {
    return __isset_bit_vector.get(__NUMBER77_ISSET_ID);
  }

  public void setNumber77IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER77_ISSET_ID, value);
  }

  public int getNumber78() {
    return this.number78;
  }

  public Data6Thrift setNumber78(int number78) {
    this.number78 = number78;
    setNumber78IsSet(true);
    return this;
  }

  public void unsetNumber78() {
    __isset_bit_vector.clear(__NUMBER78_ISSET_ID);
  }

  /** Returns true if field number78 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber78() {
    return __isset_bit_vector.get(__NUMBER78_ISSET_ID);
  }

  public void setNumber78IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER78_ISSET_ID, value);
  }

  public int getNumber79() {
    return this.number79;
  }

  public Data6Thrift setNumber79(int number79) {
    this.number79 = number79;
    setNumber79IsSet(true);
    return this;
  }

  public void unsetNumber79() {
    __isset_bit_vector.clear(__NUMBER79_ISSET_ID);
  }

  /** Returns true if field number79 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber79() {
    return __isset_bit_vector.get(__NUMBER79_ISSET_ID);
  }

  public void setNumber79IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER79_ISSET_ID, value);
  }

  public int getNumber80() {
    return this.number80;
  }

  public Data6Thrift setNumber80(int number80) {
    this.number80 = number80;
    setNumber80IsSet(true);
    return this;
  }

  public void unsetNumber80() {
    __isset_bit_vector.clear(__NUMBER80_ISSET_ID);
  }

  /** Returns true if field number80 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber80() {
    return __isset_bit_vector.get(__NUMBER80_ISSET_ID);
  }

  public void setNumber80IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER80_ISSET_ID, value);
  }

  public int getNumber81() {
    return this.number81;
  }

  public Data6Thrift setNumber81(int number81) {
    this.number81 = number81;
    setNumber81IsSet(true);
    return this;
  }

  public void unsetNumber81() {
    __isset_bit_vector.clear(__NUMBER81_ISSET_ID);
  }

  /** Returns true if field number81 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber81() {
    return __isset_bit_vector.get(__NUMBER81_ISSET_ID);
  }

  public void setNumber81IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER81_ISSET_ID, value);
  }

  public int getNumber82() {
    return this.number82;
  }

  public Data6Thrift setNumber82(int number82) {
    this.number82 = number82;
    setNumber82IsSet(true);
    return this;
  }

  public void unsetNumber82() {
    __isset_bit_vector.clear(__NUMBER82_ISSET_ID);
  }

  /** Returns true if field number82 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber82() {
    return __isset_bit_vector.get(__NUMBER82_ISSET_ID);
  }

  public void setNumber82IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER82_ISSET_ID, value);
  }

  public int getNumber83() {
    return this.number83;
  }

  public Data6Thrift setNumber83(int number83) {
    this.number83 = number83;
    setNumber83IsSet(true);
    return this;
  }

  public void unsetNumber83() {
    __isset_bit_vector.clear(__NUMBER83_ISSET_ID);
  }

  /** Returns true if field number83 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber83() {
    return __isset_bit_vector.get(__NUMBER83_ISSET_ID);
  }

  public void setNumber83IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER83_ISSET_ID, value);
  }

  public int getNumber84() {
    return this.number84;
  }

  public Data6Thrift setNumber84(int number84) {
    this.number84 = number84;
    setNumber84IsSet(true);
    return this;
  }

  public void unsetNumber84() {
    __isset_bit_vector.clear(__NUMBER84_ISSET_ID);
  }

  /** Returns true if field number84 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber84() {
    return __isset_bit_vector.get(__NUMBER84_ISSET_ID);
  }

  public void setNumber84IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER84_ISSET_ID, value);
  }

  public int getNumber85() {
    return this.number85;
  }

  public Data6Thrift setNumber85(int number85) {
    this.number85 = number85;
    setNumber85IsSet(true);
    return this;
  }

  public void unsetNumber85() {
    __isset_bit_vector.clear(__NUMBER85_ISSET_ID);
  }

  /** Returns true if field number85 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber85() {
    return __isset_bit_vector.get(__NUMBER85_ISSET_ID);
  }

  public void setNumber85IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER85_ISSET_ID, value);
  }

  public int getNumber86() {
    return this.number86;
  }

  public Data6Thrift setNumber86(int number86) {
    this.number86 = number86;
    setNumber86IsSet(true);
    return this;
  }

  public void unsetNumber86() {
    __isset_bit_vector.clear(__NUMBER86_ISSET_ID);
  }

  /** Returns true if field number86 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber86() {
    return __isset_bit_vector.get(__NUMBER86_ISSET_ID);
  }

  public void setNumber86IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER86_ISSET_ID, value);
  }

  public int getNumber87() {
    return this.number87;
  }

  public Data6Thrift setNumber87(int number87) {
    this.number87 = number87;
    setNumber87IsSet(true);
    return this;
  }

  public void unsetNumber87() {
    __isset_bit_vector.clear(__NUMBER87_ISSET_ID);
  }

  /** Returns true if field number87 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber87() {
    return __isset_bit_vector.get(__NUMBER87_ISSET_ID);
  }

  public void setNumber87IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER87_ISSET_ID, value);
  }

  public int getNumber88() {
    return this.number88;
  }

  public Data6Thrift setNumber88(int number88) {
    this.number88 = number88;
    setNumber88IsSet(true);
    return this;
  }

  public void unsetNumber88() {
    __isset_bit_vector.clear(__NUMBER88_ISSET_ID);
  }

  /** Returns true if field number88 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber88() {
    return __isset_bit_vector.get(__NUMBER88_ISSET_ID);
  }

  public void setNumber88IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER88_ISSET_ID, value);
  }

  public int getNumber89() {
    return this.number89;
  }

  public Data6Thrift setNumber89(int number89) {
    this.number89 = number89;
    setNumber89IsSet(true);
    return this;
  }

  public void unsetNumber89() {
    __isset_bit_vector.clear(__NUMBER89_ISSET_ID);
  }

  /** Returns true if field number89 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber89() {
    return __isset_bit_vector.get(__NUMBER89_ISSET_ID);
  }

  public void setNumber89IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER89_ISSET_ID, value);
  }

  public int getNumber90() {
    return this.number90;
  }

  public Data6Thrift setNumber90(int number90) {
    this.number90 = number90;
    setNumber90IsSet(true);
    return this;
  }

  public void unsetNumber90() {
    __isset_bit_vector.clear(__NUMBER90_ISSET_ID);
  }

  /** Returns true if field number90 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber90() {
    return __isset_bit_vector.get(__NUMBER90_ISSET_ID);
  }

  public void setNumber90IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER90_ISSET_ID, value);
  }

  public int getNumber91() {
    return this.number91;
  }

  public Data6Thrift setNumber91(int number91) {
    this.number91 = number91;
    setNumber91IsSet(true);
    return this;
  }

  public void unsetNumber91() {
    __isset_bit_vector.clear(__NUMBER91_ISSET_ID);
  }

  /** Returns true if field number91 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber91() {
    return __isset_bit_vector.get(__NUMBER91_ISSET_ID);
  }

  public void setNumber91IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER91_ISSET_ID, value);
  }

  public int getNumber92() {
    return this.number92;
  }

  public Data6Thrift setNumber92(int number92) {
    this.number92 = number92;
    setNumber92IsSet(true);
    return this;
  }

  public void unsetNumber92() {
    __isset_bit_vector.clear(__NUMBER92_ISSET_ID);
  }

  /** Returns true if field number92 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber92() {
    return __isset_bit_vector.get(__NUMBER92_ISSET_ID);
  }

  public void setNumber92IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER92_ISSET_ID, value);
  }

  public int getNumber93() {
    return this.number93;
  }

  public Data6Thrift setNumber93(int number93) {
    this.number93 = number93;
    setNumber93IsSet(true);
    return this;
  }

  public void unsetNumber93() {
    __isset_bit_vector.clear(__NUMBER93_ISSET_ID);
  }

  /** Returns true if field number93 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber93() {
    return __isset_bit_vector.get(__NUMBER93_ISSET_ID);
  }

  public void setNumber93IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER93_ISSET_ID, value);
  }

  public int getNumber94() {
    return this.number94;
  }

  public Data6Thrift setNumber94(int number94) {
    this.number94 = number94;
    setNumber94IsSet(true);
    return this;
  }

  public void unsetNumber94() {
    __isset_bit_vector.clear(__NUMBER94_ISSET_ID);
  }

  /** Returns true if field number94 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber94() {
    return __isset_bit_vector.get(__NUMBER94_ISSET_ID);
  }

  public void setNumber94IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER94_ISSET_ID, value);
  }

  public int getNumber95() {
    return this.number95;
  }

  public Data6Thrift setNumber95(int number95) {
    this.number95 = number95;
    setNumber95IsSet(true);
    return this;
  }

  public void unsetNumber95() {
    __isset_bit_vector.clear(__NUMBER95_ISSET_ID);
  }

  /** Returns true if field number95 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber95() {
    return __isset_bit_vector.get(__NUMBER95_ISSET_ID);
  }

  public void setNumber95IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER95_ISSET_ID, value);
  }

  public int getNumber96() {
    return this.number96;
  }

  public Data6Thrift setNumber96(int number96) {
    this.number96 = number96;
    setNumber96IsSet(true);
    return this;
  }

  public void unsetNumber96() {
    __isset_bit_vector.clear(__NUMBER96_ISSET_ID);
  }

  /** Returns true if field number96 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber96() {
    return __isset_bit_vector.get(__NUMBER96_ISSET_ID);
  }

  public void setNumber96IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER96_ISSET_ID, value);
  }

  public int getNumber97() {
    return this.number97;
  }

  public Data6Thrift setNumber97(int number97) {
    this.number97 = number97;
    setNumber97IsSet(true);
    return this;
  }

  public void unsetNumber97() {
    __isset_bit_vector.clear(__NUMBER97_ISSET_ID);
  }

  /** Returns true if field number97 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber97() {
    return __isset_bit_vector.get(__NUMBER97_ISSET_ID);
  }

  public void setNumber97IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER97_ISSET_ID, value);
  }

  public int getNumber98() {
    return this.number98;
  }

  public Data6Thrift setNumber98(int number98) {
    this.number98 = number98;
    setNumber98IsSet(true);
    return this;
  }

  public void unsetNumber98() {
    __isset_bit_vector.clear(__NUMBER98_ISSET_ID);
  }

  /** Returns true if field number98 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber98() {
    return __isset_bit_vector.get(__NUMBER98_ISSET_ID);
  }

  public void setNumber98IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER98_ISSET_ID, value);
  }

  public int getNumber99() {
    return this.number99;
  }

  public Data6Thrift setNumber99(int number99) {
    this.number99 = number99;
    setNumber99IsSet(true);
    return this;
  }

  public void unsetNumber99() {
    __isset_bit_vector.clear(__NUMBER99_ISSET_ID);
  }

  /** Returns true if field number99 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber99() {
    return __isset_bit_vector.get(__NUMBER99_ISSET_ID);
  }

  public void setNumber99IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER99_ISSET_ID, value);
  }

  public int getNumber100() {
    return this.number100;
  }

  public Data6Thrift setNumber100(int number100) {
    this.number100 = number100;
    setNumber100IsSet(true);
    return this;
  }

  public void unsetNumber100() {
    __isset_bit_vector.clear(__NUMBER100_ISSET_ID);
  }

  /** Returns true if field number100 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber100() {
    return __isset_bit_vector.get(__NUMBER100_ISSET_ID);
  }

  public void setNumber100IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER100_ISSET_ID, value);
  }

  public int getNumber101() {
    return this.number101;
  }

  public Data6Thrift setNumber101(int number101) {
    this.number101 = number101;
    setNumber101IsSet(true);
    return this;
  }

  public void unsetNumber101() {
    __isset_bit_vector.clear(__NUMBER101_ISSET_ID);
  }

  /** Returns true if field number101 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber101() {
    return __isset_bit_vector.get(__NUMBER101_ISSET_ID);
  }

  public void setNumber101IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER101_ISSET_ID, value);
  }

  public int getNumber102() {
    return this.number102;
  }

  public Data6Thrift setNumber102(int number102) {
    this.number102 = number102;
    setNumber102IsSet(true);
    return this;
  }

  public void unsetNumber102() {
    __isset_bit_vector.clear(__NUMBER102_ISSET_ID);
  }

  /** Returns true if field number102 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber102() {
    return __isset_bit_vector.get(__NUMBER102_ISSET_ID);
  }

  public void setNumber102IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER102_ISSET_ID, value);
  }

  public int getNumber103() {
    return this.number103;
  }

  public Data6Thrift setNumber103(int number103) {
    this.number103 = number103;
    setNumber103IsSet(true);
    return this;
  }

  public void unsetNumber103() {
    __isset_bit_vector.clear(__NUMBER103_ISSET_ID);
  }

  /** Returns true if field number103 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber103() {
    return __isset_bit_vector.get(__NUMBER103_ISSET_ID);
  }

  public void setNumber103IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER103_ISSET_ID, value);
  }

  public int getNumber104() {
    return this.number104;
  }

  public Data6Thrift setNumber104(int number104) {
    this.number104 = number104;
    setNumber104IsSet(true);
    return this;
  }

  public void unsetNumber104() {
    __isset_bit_vector.clear(__NUMBER104_ISSET_ID);
  }

  /** Returns true if field number104 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber104() {
    return __isset_bit_vector.get(__NUMBER104_ISSET_ID);
  }

  public void setNumber104IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER104_ISSET_ID, value);
  }

  public int getNumber105() {
    return this.number105;
  }

  public Data6Thrift setNumber105(int number105) {
    this.number105 = number105;
    setNumber105IsSet(true);
    return this;
  }

  public void unsetNumber105() {
    __isset_bit_vector.clear(__NUMBER105_ISSET_ID);
  }

  /** Returns true if field number105 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber105() {
    return __isset_bit_vector.get(__NUMBER105_ISSET_ID);
  }

  public void setNumber105IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER105_ISSET_ID, value);
  }

  public int getNumber106() {
    return this.number106;
  }

  public Data6Thrift setNumber106(int number106) {
    this.number106 = number106;
    setNumber106IsSet(true);
    return this;
  }

  public void unsetNumber106() {
    __isset_bit_vector.clear(__NUMBER106_ISSET_ID);
  }

  /** Returns true if field number106 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber106() {
    return __isset_bit_vector.get(__NUMBER106_ISSET_ID);
  }

  public void setNumber106IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER106_ISSET_ID, value);
  }

  public int getNumber107() {
    return this.number107;
  }

  public Data6Thrift setNumber107(int number107) {
    this.number107 = number107;
    setNumber107IsSet(true);
    return this;
  }

  public void unsetNumber107() {
    __isset_bit_vector.clear(__NUMBER107_ISSET_ID);
  }

  /** Returns true if field number107 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber107() {
    return __isset_bit_vector.get(__NUMBER107_ISSET_ID);
  }

  public void setNumber107IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER107_ISSET_ID, value);
  }

  public int getNumber108() {
    return this.number108;
  }

  public Data6Thrift setNumber108(int number108) {
    this.number108 = number108;
    setNumber108IsSet(true);
    return this;
  }

  public void unsetNumber108() {
    __isset_bit_vector.clear(__NUMBER108_ISSET_ID);
  }

  /** Returns true if field number108 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber108() {
    return __isset_bit_vector.get(__NUMBER108_ISSET_ID);
  }

  public void setNumber108IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER108_ISSET_ID, value);
  }

  public int getNumber109() {
    return this.number109;
  }

  public Data6Thrift setNumber109(int number109) {
    this.number109 = number109;
    setNumber109IsSet(true);
    return this;
  }

  public void unsetNumber109() {
    __isset_bit_vector.clear(__NUMBER109_ISSET_ID);
  }

  /** Returns true if field number109 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber109() {
    return __isset_bit_vector.get(__NUMBER109_ISSET_ID);
  }

  public void setNumber109IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER109_ISSET_ID, value);
  }

  public int getNumber110() {
    return this.number110;
  }

  public Data6Thrift setNumber110(int number110) {
    this.number110 = number110;
    setNumber110IsSet(true);
    return this;
  }

  public void unsetNumber110() {
    __isset_bit_vector.clear(__NUMBER110_ISSET_ID);
  }

  /** Returns true if field number110 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber110() {
    return __isset_bit_vector.get(__NUMBER110_ISSET_ID);
  }

  public void setNumber110IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER110_ISSET_ID, value);
  }

  public int getNumber111() {
    return this.number111;
  }

  public Data6Thrift setNumber111(int number111) {
    this.number111 = number111;
    setNumber111IsSet(true);
    return this;
  }

  public void unsetNumber111() {
    __isset_bit_vector.clear(__NUMBER111_ISSET_ID);
  }

  /** Returns true if field number111 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber111() {
    return __isset_bit_vector.get(__NUMBER111_ISSET_ID);
  }

  public void setNumber111IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER111_ISSET_ID, value);
  }

  public int getNumber112() {
    return this.number112;
  }

  public Data6Thrift setNumber112(int number112) {
    this.number112 = number112;
    setNumber112IsSet(true);
    return this;
  }

  public void unsetNumber112() {
    __isset_bit_vector.clear(__NUMBER112_ISSET_ID);
  }

  /** Returns true if field number112 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber112() {
    return __isset_bit_vector.get(__NUMBER112_ISSET_ID);
  }

  public void setNumber112IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER112_ISSET_ID, value);
  }

  public int getNumber113() {
    return this.number113;
  }

  public Data6Thrift setNumber113(int number113) {
    this.number113 = number113;
    setNumber113IsSet(true);
    return this;
  }

  public void unsetNumber113() {
    __isset_bit_vector.clear(__NUMBER113_ISSET_ID);
  }

  /** Returns true if field number113 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber113() {
    return __isset_bit_vector.get(__NUMBER113_ISSET_ID);
  }

  public void setNumber113IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER113_ISSET_ID, value);
  }

  public int getNumber114() {
    return this.number114;
  }

  public Data6Thrift setNumber114(int number114) {
    this.number114 = number114;
    setNumber114IsSet(true);
    return this;
  }

  public void unsetNumber114() {
    __isset_bit_vector.clear(__NUMBER114_ISSET_ID);
  }

  /** Returns true if field number114 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber114() {
    return __isset_bit_vector.get(__NUMBER114_ISSET_ID);
  }

  public void setNumber114IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER114_ISSET_ID, value);
  }

  public int getNumber115() {
    return this.number115;
  }

  public Data6Thrift setNumber115(int number115) {
    this.number115 = number115;
    setNumber115IsSet(true);
    return this;
  }

  public void unsetNumber115() {
    __isset_bit_vector.clear(__NUMBER115_ISSET_ID);
  }

  /** Returns true if field number115 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber115() {
    return __isset_bit_vector.get(__NUMBER115_ISSET_ID);
  }

  public void setNumber115IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER115_ISSET_ID, value);
  }

  public int getNumber116() {
    return this.number116;
  }

  public Data6Thrift setNumber116(int number116) {
    this.number116 = number116;
    setNumber116IsSet(true);
    return this;
  }

  public void unsetNumber116() {
    __isset_bit_vector.clear(__NUMBER116_ISSET_ID);
  }

  /** Returns true if field number116 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber116() {
    return __isset_bit_vector.get(__NUMBER116_ISSET_ID);
  }

  public void setNumber116IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER116_ISSET_ID, value);
  }

  public int getNumber117() {
    return this.number117;
  }

  public Data6Thrift setNumber117(int number117) {
    this.number117 = number117;
    setNumber117IsSet(true);
    return this;
  }

  public void unsetNumber117() {
    __isset_bit_vector.clear(__NUMBER117_ISSET_ID);
  }

  /** Returns true if field number117 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber117() {
    return __isset_bit_vector.get(__NUMBER117_ISSET_ID);
  }

  public void setNumber117IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER117_ISSET_ID, value);
  }

  public int getNumber118() {
    return this.number118;
  }

  public Data6Thrift setNumber118(int number118) {
    this.number118 = number118;
    setNumber118IsSet(true);
    return this;
  }

  public void unsetNumber118() {
    __isset_bit_vector.clear(__NUMBER118_ISSET_ID);
  }

  /** Returns true if field number118 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber118() {
    return __isset_bit_vector.get(__NUMBER118_ISSET_ID);
  }

  public void setNumber118IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER118_ISSET_ID, value);
  }

  public int getNumber119() {
    return this.number119;
  }

  public Data6Thrift setNumber119(int number119) {
    this.number119 = number119;
    setNumber119IsSet(true);
    return this;
  }

  public void unsetNumber119() {
    __isset_bit_vector.clear(__NUMBER119_ISSET_ID);
  }

  /** Returns true if field number119 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber119() {
    return __isset_bit_vector.get(__NUMBER119_ISSET_ID);
  }

  public void setNumber119IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER119_ISSET_ID, value);
  }

  public int getNumber120() {
    return this.number120;
  }

  public Data6Thrift setNumber120(int number120) {
    this.number120 = number120;
    setNumber120IsSet(true);
    return this;
  }

  public void unsetNumber120() {
    __isset_bit_vector.clear(__NUMBER120_ISSET_ID);
  }

  /** Returns true if field number120 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber120() {
    return __isset_bit_vector.get(__NUMBER120_ISSET_ID);
  }

  public void setNumber120IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER120_ISSET_ID, value);
  }

  public double getNumber121() {
    return this.number121;
  }

  public Data6Thrift setNumber121(double number121) {
    this.number121 = number121;
    setNumber121IsSet(true);
    return this;
  }

  public void unsetNumber121() {
    __isset_bit_vector.clear(__NUMBER121_ISSET_ID);
  }

  /** Returns true if field number121 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber121() {
    return __isset_bit_vector.get(__NUMBER121_ISSET_ID);
  }

  public void setNumber121IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER121_ISSET_ID, value);
  }

  public double getNumber122() {
    return this.number122;
  }

  public Data6Thrift setNumber122(double number122) {
    this.number122 = number122;
    setNumber122IsSet(true);
    return this;
  }

  public void unsetNumber122() {
    __isset_bit_vector.clear(__NUMBER122_ISSET_ID);
  }

  /** Returns true if field number122 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber122() {
    return __isset_bit_vector.get(__NUMBER122_ISSET_ID);
  }

  public void setNumber122IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER122_ISSET_ID, value);
  }

  public double getNumber123() {
    return this.number123;
  }

  public Data6Thrift setNumber123(double number123) {
    this.number123 = number123;
    setNumber123IsSet(true);
    return this;
  }

  public void unsetNumber123() {
    __isset_bit_vector.clear(__NUMBER123_ISSET_ID);
  }

  /** Returns true if field number123 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber123() {
    return __isset_bit_vector.get(__NUMBER123_ISSET_ID);
  }

  public void setNumber123IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER123_ISSET_ID, value);
  }

  public double getNumber124() {
    return this.number124;
  }

  public Data6Thrift setNumber124(double number124) {
    this.number124 = number124;
    setNumber124IsSet(true);
    return this;
  }

  public void unsetNumber124() {
    __isset_bit_vector.clear(__NUMBER124_ISSET_ID);
  }

  /** Returns true if field number124 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber124() {
    return __isset_bit_vector.get(__NUMBER124_ISSET_ID);
  }

  public void setNumber124IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER124_ISSET_ID, value);
  }

  public double getNumber125() {
    return this.number125;
  }

  public Data6Thrift setNumber125(double number125) {
    this.number125 = number125;
    setNumber125IsSet(true);
    return this;
  }

  public void unsetNumber125() {
    __isset_bit_vector.clear(__NUMBER125_ISSET_ID);
  }

  /** Returns true if field number125 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber125() {
    return __isset_bit_vector.get(__NUMBER125_ISSET_ID);
  }

  public void setNumber125IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER125_ISSET_ID, value);
  }

  public double getNumber126() {
    return this.number126;
  }

  public Data6Thrift setNumber126(double number126) {
    this.number126 = number126;
    setNumber126IsSet(true);
    return this;
  }

  public void unsetNumber126() {
    __isset_bit_vector.clear(__NUMBER126_ISSET_ID);
  }

  /** Returns true if field number126 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber126() {
    return __isset_bit_vector.get(__NUMBER126_ISSET_ID);
  }

  public void setNumber126IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER126_ISSET_ID, value);
  }

  public double getNumber127() {
    return this.number127;
  }

  public Data6Thrift setNumber127(double number127) {
    this.number127 = number127;
    setNumber127IsSet(true);
    return this;
  }

  public void unsetNumber127() {
    __isset_bit_vector.clear(__NUMBER127_ISSET_ID);
  }

  /** Returns true if field number127 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber127() {
    return __isset_bit_vector.get(__NUMBER127_ISSET_ID);
  }

  public void setNumber127IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER127_ISSET_ID, value);
  }

  public double getNumber128() {
    return this.number128;
  }

  public Data6Thrift setNumber128(double number128) {
    this.number128 = number128;
    setNumber128IsSet(true);
    return this;
  }

  public void unsetNumber128() {
    __isset_bit_vector.clear(__NUMBER128_ISSET_ID);
  }

  /** Returns true if field number128 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber128() {
    return __isset_bit_vector.get(__NUMBER128_ISSET_ID);
  }

  public void setNumber128IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER128_ISSET_ID, value);
  }

  public double getNumber129() {
    return this.number129;
  }

  public Data6Thrift setNumber129(double number129) {
    this.number129 = number129;
    setNumber129IsSet(true);
    return this;
  }

  public void unsetNumber129() {
    __isset_bit_vector.clear(__NUMBER129_ISSET_ID);
  }

  /** Returns true if field number129 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber129() {
    return __isset_bit_vector.get(__NUMBER129_ISSET_ID);
  }

  public void setNumber129IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER129_ISSET_ID, value);
  }

  public double getNumber130() {
    return this.number130;
  }

  public Data6Thrift setNumber130(double number130) {
    this.number130 = number130;
    setNumber130IsSet(true);
    return this;
  }

  public void unsetNumber130() {
    __isset_bit_vector.clear(__NUMBER130_ISSET_ID);
  }

  /** Returns true if field number130 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber130() {
    return __isset_bit_vector.get(__NUMBER130_ISSET_ID);
  }

  public void setNumber130IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER130_ISSET_ID, value);
  }

  public double getNumber131() {
    return this.number131;
  }

  public Data6Thrift setNumber131(double number131) {
    this.number131 = number131;
    setNumber131IsSet(true);
    return this;
  }

  public void unsetNumber131() {
    __isset_bit_vector.clear(__NUMBER131_ISSET_ID);
  }

  /** Returns true if field number131 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber131() {
    return __isset_bit_vector.get(__NUMBER131_ISSET_ID);
  }

  public void setNumber131IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER131_ISSET_ID, value);
  }

  public double getNumber132() {
    return this.number132;
  }

  public Data6Thrift setNumber132(double number132) {
    this.number132 = number132;
    setNumber132IsSet(true);
    return this;
  }

  public void unsetNumber132() {
    __isset_bit_vector.clear(__NUMBER132_ISSET_ID);
  }

  /** Returns true if field number132 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber132() {
    return __isset_bit_vector.get(__NUMBER132_ISSET_ID);
  }

  public void setNumber132IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER132_ISSET_ID, value);
  }

  public double getNumber133() {
    return this.number133;
  }

  public Data6Thrift setNumber133(double number133) {
    this.number133 = number133;
    setNumber133IsSet(true);
    return this;
  }

  public void unsetNumber133() {
    __isset_bit_vector.clear(__NUMBER133_ISSET_ID);
  }

  /** Returns true if field number133 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber133() {
    return __isset_bit_vector.get(__NUMBER133_ISSET_ID);
  }

  public void setNumber133IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER133_ISSET_ID, value);
  }

  public double getNumber134() {
    return this.number134;
  }

  public Data6Thrift setNumber134(double number134) {
    this.number134 = number134;
    setNumber134IsSet(true);
    return this;
  }

  public void unsetNumber134() {
    __isset_bit_vector.clear(__NUMBER134_ISSET_ID);
  }

  /** Returns true if field number134 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber134() {
    return __isset_bit_vector.get(__NUMBER134_ISSET_ID);
  }

  public void setNumber134IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER134_ISSET_ID, value);
  }

  public double getNumber135() {
    return this.number135;
  }

  public Data6Thrift setNumber135(double number135) {
    this.number135 = number135;
    setNumber135IsSet(true);
    return this;
  }

  public void unsetNumber135() {
    __isset_bit_vector.clear(__NUMBER135_ISSET_ID);
  }

  /** Returns true if field number135 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber135() {
    return __isset_bit_vector.get(__NUMBER135_ISSET_ID);
  }

  public void setNumber135IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER135_ISSET_ID, value);
  }

  public double getNumber136() {
    return this.number136;
  }

  public Data6Thrift setNumber136(double number136) {
    this.number136 = number136;
    setNumber136IsSet(true);
    return this;
  }

  public void unsetNumber136() {
    __isset_bit_vector.clear(__NUMBER136_ISSET_ID);
  }

  /** Returns true if field number136 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber136() {
    return __isset_bit_vector.get(__NUMBER136_ISSET_ID);
  }

  public void setNumber136IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER136_ISSET_ID, value);
  }

  public double getNumber137() {
    return this.number137;
  }

  public Data6Thrift setNumber137(double number137) {
    this.number137 = number137;
    setNumber137IsSet(true);
    return this;
  }

  public void unsetNumber137() {
    __isset_bit_vector.clear(__NUMBER137_ISSET_ID);
  }

  /** Returns true if field number137 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber137() {
    return __isset_bit_vector.get(__NUMBER137_ISSET_ID);
  }

  public void setNumber137IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER137_ISSET_ID, value);
  }

  public double getNumber138() {
    return this.number138;
  }

  public Data6Thrift setNumber138(double number138) {
    this.number138 = number138;
    setNumber138IsSet(true);
    return this;
  }

  public void unsetNumber138() {
    __isset_bit_vector.clear(__NUMBER138_ISSET_ID);
  }

  /** Returns true if field number138 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber138() {
    return __isset_bit_vector.get(__NUMBER138_ISSET_ID);
  }

  public void setNumber138IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER138_ISSET_ID, value);
  }

  public double getNumber139() {
    return this.number139;
  }

  public Data6Thrift setNumber139(double number139) {
    this.number139 = number139;
    setNumber139IsSet(true);
    return this;
  }

  public void unsetNumber139() {
    __isset_bit_vector.clear(__NUMBER139_ISSET_ID);
  }

  /** Returns true if field number139 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber139() {
    return __isset_bit_vector.get(__NUMBER139_ISSET_ID);
  }

  public void setNumber139IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER139_ISSET_ID, value);
  }

  public double getNumber140() {
    return this.number140;
  }

  public Data6Thrift setNumber140(double number140) {
    this.number140 = number140;
    setNumber140IsSet(true);
    return this;
  }

  public void unsetNumber140() {
    __isset_bit_vector.clear(__NUMBER140_ISSET_ID);
  }

  /** Returns true if field number140 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber140() {
    return __isset_bit_vector.get(__NUMBER140_ISSET_ID);
  }

  public void setNumber140IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER140_ISSET_ID, value);
  }

  public double getNumber141() {
    return this.number141;
  }

  public Data6Thrift setNumber141(double number141) {
    this.number141 = number141;
    setNumber141IsSet(true);
    return this;
  }

  public void unsetNumber141() {
    __isset_bit_vector.clear(__NUMBER141_ISSET_ID);
  }

  /** Returns true if field number141 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber141() {
    return __isset_bit_vector.get(__NUMBER141_ISSET_ID);
  }

  public void setNumber141IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER141_ISSET_ID, value);
  }

  public double getNumber142() {
    return this.number142;
  }

  public Data6Thrift setNumber142(double number142) {
    this.number142 = number142;
    setNumber142IsSet(true);
    return this;
  }

  public void unsetNumber142() {
    __isset_bit_vector.clear(__NUMBER142_ISSET_ID);
  }

  /** Returns true if field number142 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber142() {
    return __isset_bit_vector.get(__NUMBER142_ISSET_ID);
  }

  public void setNumber142IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER142_ISSET_ID, value);
  }

  public double getNumber143() {
    return this.number143;
  }

  public Data6Thrift setNumber143(double number143) {
    this.number143 = number143;
    setNumber143IsSet(true);
    return this;
  }

  public void unsetNumber143() {
    __isset_bit_vector.clear(__NUMBER143_ISSET_ID);
  }

  /** Returns true if field number143 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber143() {
    return __isset_bit_vector.get(__NUMBER143_ISSET_ID);
  }

  public void setNumber143IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER143_ISSET_ID, value);
  }

  public double getNumber144() {
    return this.number144;
  }

  public Data6Thrift setNumber144(double number144) {
    this.number144 = number144;
    setNumber144IsSet(true);
    return this;
  }

  public void unsetNumber144() {
    __isset_bit_vector.clear(__NUMBER144_ISSET_ID);
  }

  /** Returns true if field number144 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber144() {
    return __isset_bit_vector.get(__NUMBER144_ISSET_ID);
  }

  public void setNumber144IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER144_ISSET_ID, value);
  }

  public double getNumber145() {
    return this.number145;
  }

  public Data6Thrift setNumber145(double number145) {
    this.number145 = number145;
    setNumber145IsSet(true);
    return this;
  }

  public void unsetNumber145() {
    __isset_bit_vector.clear(__NUMBER145_ISSET_ID);
  }

  /** Returns true if field number145 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber145() {
    return __isset_bit_vector.get(__NUMBER145_ISSET_ID);
  }

  public void setNumber145IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER145_ISSET_ID, value);
  }

  public double getNumber146() {
    return this.number146;
  }

  public Data6Thrift setNumber146(double number146) {
    this.number146 = number146;
    setNumber146IsSet(true);
    return this;
  }

  public void unsetNumber146() {
    __isset_bit_vector.clear(__NUMBER146_ISSET_ID);
  }

  /** Returns true if field number146 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber146() {
    return __isset_bit_vector.get(__NUMBER146_ISSET_ID);
  }

  public void setNumber146IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER146_ISSET_ID, value);
  }

  public double getNumber147() {
    return this.number147;
  }

  public Data6Thrift setNumber147(double number147) {
    this.number147 = number147;
    setNumber147IsSet(true);
    return this;
  }

  public void unsetNumber147() {
    __isset_bit_vector.clear(__NUMBER147_ISSET_ID);
  }

  /** Returns true if field number147 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber147() {
    return __isset_bit_vector.get(__NUMBER147_ISSET_ID);
  }

  public void setNumber147IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER147_ISSET_ID, value);
  }

  public double getNumber148() {
    return this.number148;
  }

  public Data6Thrift setNumber148(double number148) {
    this.number148 = number148;
    setNumber148IsSet(true);
    return this;
  }

  public void unsetNumber148() {
    __isset_bit_vector.clear(__NUMBER148_ISSET_ID);
  }

  /** Returns true if field number148 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber148() {
    return __isset_bit_vector.get(__NUMBER148_ISSET_ID);
  }

  public void setNumber148IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER148_ISSET_ID, value);
  }

  public double getNumber149() {
    return this.number149;
  }

  public Data6Thrift setNumber149(double number149) {
    this.number149 = number149;
    setNumber149IsSet(true);
    return this;
  }

  public void unsetNumber149() {
    __isset_bit_vector.clear(__NUMBER149_ISSET_ID);
  }

  /** Returns true if field number149 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber149() {
    return __isset_bit_vector.get(__NUMBER149_ISSET_ID);
  }

  public void setNumber149IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER149_ISSET_ID, value);
  }

  public double getNumber150() {
    return this.number150;
  }

  public Data6Thrift setNumber150(double number150) {
    this.number150 = number150;
    setNumber150IsSet(true);
    return this;
  }

  public void unsetNumber150() {
    __isset_bit_vector.clear(__NUMBER150_ISSET_ID);
  }

  /** Returns true if field number150 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber150() {
    return __isset_bit_vector.get(__NUMBER150_ISSET_ID);
  }

  public void setNumber150IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER150_ISSET_ID, value);
  }

  public double getNumber151() {
    return this.number151;
  }

  public Data6Thrift setNumber151(double number151) {
    this.number151 = number151;
    setNumber151IsSet(true);
    return this;
  }

  public void unsetNumber151() {
    __isset_bit_vector.clear(__NUMBER151_ISSET_ID);
  }

  /** Returns true if field number151 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber151() {
    return __isset_bit_vector.get(__NUMBER151_ISSET_ID);
  }

  public void setNumber151IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER151_ISSET_ID, value);
  }

  public double getNumber152() {
    return this.number152;
  }

  public Data6Thrift setNumber152(double number152) {
    this.number152 = number152;
    setNumber152IsSet(true);
    return this;
  }

  public void unsetNumber152() {
    __isset_bit_vector.clear(__NUMBER152_ISSET_ID);
  }

  /** Returns true if field number152 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber152() {
    return __isset_bit_vector.get(__NUMBER152_ISSET_ID);
  }

  public void setNumber152IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER152_ISSET_ID, value);
  }

  public double getNumber153() {
    return this.number153;
  }

  public Data6Thrift setNumber153(double number153) {
    this.number153 = number153;
    setNumber153IsSet(true);
    return this;
  }

  public void unsetNumber153() {
    __isset_bit_vector.clear(__NUMBER153_ISSET_ID);
  }

  /** Returns true if field number153 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber153() {
    return __isset_bit_vector.get(__NUMBER153_ISSET_ID);
  }

  public void setNumber153IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER153_ISSET_ID, value);
  }

  public double getNumber154() {
    return this.number154;
  }

  public Data6Thrift setNumber154(double number154) {
    this.number154 = number154;
    setNumber154IsSet(true);
    return this;
  }

  public void unsetNumber154() {
    __isset_bit_vector.clear(__NUMBER154_ISSET_ID);
  }

  /** Returns true if field number154 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber154() {
    return __isset_bit_vector.get(__NUMBER154_ISSET_ID);
  }

  public void setNumber154IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER154_ISSET_ID, value);
  }

  public double getNumber155() {
    return this.number155;
  }

  public Data6Thrift setNumber155(double number155) {
    this.number155 = number155;
    setNumber155IsSet(true);
    return this;
  }

  public void unsetNumber155() {
    __isset_bit_vector.clear(__NUMBER155_ISSET_ID);
  }

  /** Returns true if field number155 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber155() {
    return __isset_bit_vector.get(__NUMBER155_ISSET_ID);
  }

  public void setNumber155IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER155_ISSET_ID, value);
  }

  public double getNumber156() {
    return this.number156;
  }

  public Data6Thrift setNumber156(double number156) {
    this.number156 = number156;
    setNumber156IsSet(true);
    return this;
  }

  public void unsetNumber156() {
    __isset_bit_vector.clear(__NUMBER156_ISSET_ID);
  }

  /** Returns true if field number156 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber156() {
    return __isset_bit_vector.get(__NUMBER156_ISSET_ID);
  }

  public void setNumber156IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER156_ISSET_ID, value);
  }

  public double getNumber157() {
    return this.number157;
  }

  public Data6Thrift setNumber157(double number157) {
    this.number157 = number157;
    setNumber157IsSet(true);
    return this;
  }

  public void unsetNumber157() {
    __isset_bit_vector.clear(__NUMBER157_ISSET_ID);
  }

  /** Returns true if field number157 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber157() {
    return __isset_bit_vector.get(__NUMBER157_ISSET_ID);
  }

  public void setNumber157IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER157_ISSET_ID, value);
  }

  public double getNumber158() {
    return this.number158;
  }

  public Data6Thrift setNumber158(double number158) {
    this.number158 = number158;
    setNumber158IsSet(true);
    return this;
  }

  public void unsetNumber158() {
    __isset_bit_vector.clear(__NUMBER158_ISSET_ID);
  }

  /** Returns true if field number158 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber158() {
    return __isset_bit_vector.get(__NUMBER158_ISSET_ID);
  }

  public void setNumber158IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER158_ISSET_ID, value);
  }

  public double getNumber159() {
    return this.number159;
  }

  public Data6Thrift setNumber159(double number159) {
    this.number159 = number159;
    setNumber159IsSet(true);
    return this;
  }

  public void unsetNumber159() {
    __isset_bit_vector.clear(__NUMBER159_ISSET_ID);
  }

  /** Returns true if field number159 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber159() {
    return __isset_bit_vector.get(__NUMBER159_ISSET_ID);
  }

  public void setNumber159IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER159_ISSET_ID, value);
  }

  public double getNumber160() {
    return this.number160;
  }

  public Data6Thrift setNumber160(double number160) {
    this.number160 = number160;
    setNumber160IsSet(true);
    return this;
  }

  public void unsetNumber160() {
    __isset_bit_vector.clear(__NUMBER160_ISSET_ID);
  }

  /** Returns true if field number160 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber160() {
    return __isset_bit_vector.get(__NUMBER160_ISSET_ID);
  }

  public void setNumber160IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER160_ISSET_ID, value);
  }

  public double getNumber161() {
    return this.number161;
  }

  public Data6Thrift setNumber161(double number161) {
    this.number161 = number161;
    setNumber161IsSet(true);
    return this;
  }

  public void unsetNumber161() {
    __isset_bit_vector.clear(__NUMBER161_ISSET_ID);
  }

  /** Returns true if field number161 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber161() {
    return __isset_bit_vector.get(__NUMBER161_ISSET_ID);
  }

  public void setNumber161IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER161_ISSET_ID, value);
  }

  public double getNumber162() {
    return this.number162;
  }

  public Data6Thrift setNumber162(double number162) {
    this.number162 = number162;
    setNumber162IsSet(true);
    return this;
  }

  public void unsetNumber162() {
    __isset_bit_vector.clear(__NUMBER162_ISSET_ID);
  }

  /** Returns true if field number162 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber162() {
    return __isset_bit_vector.get(__NUMBER162_ISSET_ID);
  }

  public void setNumber162IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER162_ISSET_ID, value);
  }

  public double getNumber163() {
    return this.number163;
  }

  public Data6Thrift setNumber163(double number163) {
    this.number163 = number163;
    setNumber163IsSet(true);
    return this;
  }

  public void unsetNumber163() {
    __isset_bit_vector.clear(__NUMBER163_ISSET_ID);
  }

  /** Returns true if field number163 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber163() {
    return __isset_bit_vector.get(__NUMBER163_ISSET_ID);
  }

  public void setNumber163IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER163_ISSET_ID, value);
  }

  public double getNumber164() {
    return this.number164;
  }

  public Data6Thrift setNumber164(double number164) {
    this.number164 = number164;
    setNumber164IsSet(true);
    return this;
  }

  public void unsetNumber164() {
    __isset_bit_vector.clear(__NUMBER164_ISSET_ID);
  }

  /** Returns true if field number164 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber164() {
    return __isset_bit_vector.get(__NUMBER164_ISSET_ID);
  }

  public void setNumber164IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER164_ISSET_ID, value);
  }

  public double getNumber165() {
    return this.number165;
  }

  public Data6Thrift setNumber165(double number165) {
    this.number165 = number165;
    setNumber165IsSet(true);
    return this;
  }

  public void unsetNumber165() {
    __isset_bit_vector.clear(__NUMBER165_ISSET_ID);
  }

  /** Returns true if field number165 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber165() {
    return __isset_bit_vector.get(__NUMBER165_ISSET_ID);
  }

  public void setNumber165IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER165_ISSET_ID, value);
  }

  public double getNumber166() {
    return this.number166;
  }

  public Data6Thrift setNumber166(double number166) {
    this.number166 = number166;
    setNumber166IsSet(true);
    return this;
  }

  public void unsetNumber166() {
    __isset_bit_vector.clear(__NUMBER166_ISSET_ID);
  }

  /** Returns true if field number166 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber166() {
    return __isset_bit_vector.get(__NUMBER166_ISSET_ID);
  }

  public void setNumber166IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER166_ISSET_ID, value);
  }

  public double getNumber167() {
    return this.number167;
  }

  public Data6Thrift setNumber167(double number167) {
    this.number167 = number167;
    setNumber167IsSet(true);
    return this;
  }

  public void unsetNumber167() {
    __isset_bit_vector.clear(__NUMBER167_ISSET_ID);
  }

  /** Returns true if field number167 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber167() {
    return __isset_bit_vector.get(__NUMBER167_ISSET_ID);
  }

  public void setNumber167IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER167_ISSET_ID, value);
  }

  public double getNumber168() {
    return this.number168;
  }

  public Data6Thrift setNumber168(double number168) {
    this.number168 = number168;
    setNumber168IsSet(true);
    return this;
  }

  public void unsetNumber168() {
    __isset_bit_vector.clear(__NUMBER168_ISSET_ID);
  }

  /** Returns true if field number168 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber168() {
    return __isset_bit_vector.get(__NUMBER168_ISSET_ID);
  }

  public void setNumber168IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER168_ISSET_ID, value);
  }

  public double getNumber169() {
    return this.number169;
  }

  public Data6Thrift setNumber169(double number169) {
    this.number169 = number169;
    setNumber169IsSet(true);
    return this;
  }

  public void unsetNumber169() {
    __isset_bit_vector.clear(__NUMBER169_ISSET_ID);
  }

  /** Returns true if field number169 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber169() {
    return __isset_bit_vector.get(__NUMBER169_ISSET_ID);
  }

  public void setNumber169IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER169_ISSET_ID, value);
  }

  public double getNumber170() {
    return this.number170;
  }

  public Data6Thrift setNumber170(double number170) {
    this.number170 = number170;
    setNumber170IsSet(true);
    return this;
  }

  public void unsetNumber170() {
    __isset_bit_vector.clear(__NUMBER170_ISSET_ID);
  }

  /** Returns true if field number170 is set (has been assigned a value) and false otherwise */
  public boolean isSetNumber170() {
    return __isset_bit_vector.get(__NUMBER170_ISSET_ID);
  }

  public void setNumber170IsSet(boolean value) {
    __isset_bit_vector.set(__NUMBER170_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case STRING1:
      if (value == null) {
        unsetString1();
      } else {
        setString1((java.lang.String)value);
      }
      break;

    case STRING2:
      if (value == null) {
        unsetString2();
      } else {
        setString2((java.lang.String)value);
      }
      break;

    case STRING3:
      if (value == null) {
        unsetString3();
      } else {
        setString3((java.lang.String)value);
      }
      break;

    case STRING4:
      if (value == null) {
        unsetString4();
      } else {
        setString4((java.lang.String)value);
      }
      break;

    case STRING5:
      if (value == null) {
        unsetString5();
      } else {
        setString5((java.lang.String)value);
      }
      break;

    case STRING6:
      if (value == null) {
        unsetString6();
      } else {
        setString6((java.lang.String)value);
      }
      break;

    case STRING7:
      if (value == null) {
        unsetString7();
      } else {
        setString7((java.lang.String)value);
      }
      break;

    case STRING8:
      if (value == null) {
        unsetString8();
      } else {
        setString8((java.lang.String)value);
      }
      break;

    case STRING9:
      if (value == null) {
        unsetString9();
      } else {
        setString9((java.lang.String)value);
      }
      break;

    case STRING10:
      if (value == null) {
        unsetString10();
      } else {
        setString10((java.lang.String)value);
      }
      break;

    case STRING11:
      if (value == null) {
        unsetString11();
      } else {
        setString11((java.lang.String)value);
      }
      break;

    case STRING12:
      if (value == null) {
        unsetString12();
      } else {
        setString12((java.lang.String)value);
      }
      break;

    case STRING13:
      if (value == null) {
        unsetString13();
      } else {
        setString13((java.lang.String)value);
      }
      break;

    case STRING14:
      if (value == null) {
        unsetString14();
      } else {
        setString14((java.lang.String)value);
      }
      break;

    case STRING15:
      if (value == null) {
        unsetString15();
      } else {
        setString15((java.lang.String)value);
      }
      break;

    case STRING16:
      if (value == null) {
        unsetString16();
      } else {
        setString16((java.lang.String)value);
      }
      break;

    case STRING17:
      if (value == null) {
        unsetString17();
      } else {
        setString17((java.lang.String)value);
      }
      break;

    case STRING18:
      if (value == null) {
        unsetString18();
      } else {
        setString18((java.lang.String)value);
      }
      break;

    case STRING19:
      if (value == null) {
        unsetString19();
      } else {
        setString19((java.lang.String)value);
      }
      break;

    case STRING20:
      if (value == null) {
        unsetString20();
      } else {
        setString20((java.lang.String)value);
      }
      break;

    case STRING21:
      if (value == null) {
        unsetString21();
      } else {
        setString21((java.lang.String)value);
      }
      break;

    case STRING22:
      if (value == null) {
        unsetString22();
      } else {
        setString22((java.lang.String)value);
      }
      break;

    case STRING23:
      if (value == null) {
        unsetString23();
      } else {
        setString23((java.lang.String)value);
      }
      break;

    case STRING24:
      if (value == null) {
        unsetString24();
      } else {
        setString24((java.lang.String)value);
      }
      break;

    case STRING25:
      if (value == null) {
        unsetString25();
      } else {
        setString25((java.lang.String)value);
      }
      break;

    case STRING26:
      if (value == null) {
        unsetString26();
      } else {
        setString26((java.lang.String)value);
      }
      break;

    case STRING27:
      if (value == null) {
        unsetString27();
      } else {
        setString27((java.lang.String)value);
      }
      break;

    case STRING28:
      if (value == null) {
        unsetString28();
      } else {
        setString28((java.lang.String)value);
      }
      break;

    case STRING29:
      if (value == null) {
        unsetString29();
      } else {
        setString29((java.lang.String)value);
      }
      break;

    case STRING30:
      if (value == null) {
        unsetString30();
      } else {
        setString30((java.lang.String)value);
      }
      break;

    case NUMBER1:
      if (value == null) {
        unsetNumber1();
      } else {
        setNumber1((java.lang.Integer)value);
      }
      break;

    case NUMBER2:
      if (value == null) {
        unsetNumber2();
      } else {
        setNumber2((java.lang.Integer)value);
      }
      break;

    case NUMBER3:
      if (value == null) {
        unsetNumber3();
      } else {
        setNumber3((java.lang.Integer)value);
      }
      break;

    case NUMBER4:
      if (value == null) {
        unsetNumber4();
      } else {
        setNumber4((java.lang.Integer)value);
      }
      break;

    case NUMBER5:
      if (value == null) {
        unsetNumber5();
      } else {
        setNumber5((java.lang.Integer)value);
      }
      break;

    case NUMBER6:
      if (value == null) {
        unsetNumber6();
      } else {
        setNumber6((java.lang.Integer)value);
      }
      break;

    case NUMBER7:
      if (value == null) {
        unsetNumber7();
      } else {
        setNumber7((java.lang.Integer)value);
      }
      break;

    case NUMBER8:
      if (value == null) {
        unsetNumber8();
      } else {
        setNumber8((java.lang.Integer)value);
      }
      break;

    case NUMBER9:
      if (value == null) {
        unsetNumber9();
      } else {
        setNumber9((java.lang.Integer)value);
      }
      break;

    case NUMBER10:
      if (value == null) {
        unsetNumber10();
      } else {
        setNumber10((java.lang.Integer)value);
      }
      break;

    case NUMBER11:
      if (value == null) {
        unsetNumber11();
      } else {
        setNumber11((java.lang.Integer)value);
      }
      break;

    case NUMBER12:
      if (value == null) {
        unsetNumber12();
      } else {
        setNumber12((java.lang.Integer)value);
      }
      break;

    case NUMBER13:
      if (value == null) {
        unsetNumber13();
      } else {
        setNumber13((java.lang.Integer)value);
      }
      break;

    case NUMBER14:
      if (value == null) {
        unsetNumber14();
      } else {
        setNumber14((java.lang.Integer)value);
      }
      break;

    case NUMBER15:
      if (value == null) {
        unsetNumber15();
      } else {
        setNumber15((java.lang.Integer)value);
      }
      break;

    case NUMBER16:
      if (value == null) {
        unsetNumber16();
      } else {
        setNumber16((java.lang.Integer)value);
      }
      break;

    case NUMBER17:
      if (value == null) {
        unsetNumber17();
      } else {
        setNumber17((java.lang.Integer)value);
      }
      break;

    case NUMBER18:
      if (value == null) {
        unsetNumber18();
      } else {
        setNumber18((java.lang.Integer)value);
      }
      break;

    case NUMBER19:
      if (value == null) {
        unsetNumber19();
      } else {
        setNumber19((java.lang.Integer)value);
      }
      break;

    case NUMBER20:
      if (value == null) {
        unsetNumber20();
      } else {
        setNumber20((java.lang.Integer)value);
      }
      break;

    case NUMBER21:
      if (value == null) {
        unsetNumber21();
      } else {
        setNumber21((java.lang.Integer)value);
      }
      break;

    case NUMBER22:
      if (value == null) {
        unsetNumber22();
      } else {
        setNumber22((java.lang.Integer)value);
      }
      break;

    case NUMBER23:
      if (value == null) {
        unsetNumber23();
      } else {
        setNumber23((java.lang.Integer)value);
      }
      break;

    case NUMBER24:
      if (value == null) {
        unsetNumber24();
      } else {
        setNumber24((java.lang.Integer)value);
      }
      break;

    case NUMBER25:
      if (value == null) {
        unsetNumber25();
      } else {
        setNumber25((java.lang.Integer)value);
      }
      break;

    case NUMBER26:
      if (value == null) {
        unsetNumber26();
      } else {
        setNumber26((java.lang.Integer)value);
      }
      break;

    case NUMBER27:
      if (value == null) {
        unsetNumber27();
      } else {
        setNumber27((java.lang.Integer)value);
      }
      break;

    case NUMBER28:
      if (value == null) {
        unsetNumber28();
      } else {
        setNumber28((java.lang.Integer)value);
      }
      break;

    case NUMBER29:
      if (value == null) {
        unsetNumber29();
      } else {
        setNumber29((java.lang.Integer)value);
      }
      break;

    case NUMBER30:
      if (value == null) {
        unsetNumber30();
      } else {
        setNumber30((java.lang.Integer)value);
      }
      break;

    case NUMBER31:
      if (value == null) {
        unsetNumber31();
      } else {
        setNumber31((java.lang.Integer)value);
      }
      break;

    case NUMBER32:
      if (value == null) {
        unsetNumber32();
      } else {
        setNumber32((java.lang.Integer)value);
      }
      break;

    case NUMBER33:
      if (value == null) {
        unsetNumber33();
      } else {
        setNumber33((java.lang.Integer)value);
      }
      break;

    case NUMBER34:
      if (value == null) {
        unsetNumber34();
      } else {
        setNumber34((java.lang.Integer)value);
      }
      break;

    case NUMBER35:
      if (value == null) {
        unsetNumber35();
      } else {
        setNumber35((java.lang.Integer)value);
      }
      break;

    case NUMBER36:
      if (value == null) {
        unsetNumber36();
      } else {
        setNumber36((java.lang.Integer)value);
      }
      break;

    case NUMBER37:
      if (value == null) {
        unsetNumber37();
      } else {
        setNumber37((java.lang.Integer)value);
      }
      break;

    case NUMBER38:
      if (value == null) {
        unsetNumber38();
      } else {
        setNumber38((java.lang.Integer)value);
      }
      break;

    case NUMBER39:
      if (value == null) {
        unsetNumber39();
      } else {
        setNumber39((java.lang.Integer)value);
      }
      break;

    case NUMBER40:
      if (value == null) {
        unsetNumber40();
      } else {
        setNumber40((java.lang.Integer)value);
      }
      break;

    case NUMBER41:
      if (value == null) {
        unsetNumber41();
      } else {
        setNumber41((java.lang.Integer)value);
      }
      break;

    case NUMBER42:
      if (value == null) {
        unsetNumber42();
      } else {
        setNumber42((java.lang.Integer)value);
      }
      break;

    case NUMBER43:
      if (value == null) {
        unsetNumber43();
      } else {
        setNumber43((java.lang.Integer)value);
      }
      break;

    case NUMBER44:
      if (value == null) {
        unsetNumber44();
      } else {
        setNumber44((java.lang.Integer)value);
      }
      break;

    case NUMBER45:
      if (value == null) {
        unsetNumber45();
      } else {
        setNumber45((java.lang.Integer)value);
      }
      break;

    case NUMBER46:
      if (value == null) {
        unsetNumber46();
      } else {
        setNumber46((java.lang.Integer)value);
      }
      break;

    case NUMBER47:
      if (value == null) {
        unsetNumber47();
      } else {
        setNumber47((java.lang.Integer)value);
      }
      break;

    case NUMBER48:
      if (value == null) {
        unsetNumber48();
      } else {
        setNumber48((java.lang.Integer)value);
      }
      break;

    case NUMBER49:
      if (value == null) {
        unsetNumber49();
      } else {
        setNumber49((java.lang.Integer)value);
      }
      break;

    case NUMBER50:
      if (value == null) {
        unsetNumber50();
      } else {
        setNumber50((java.lang.Integer)value);
      }
      break;

    case NUMBER51:
      if (value == null) {
        unsetNumber51();
      } else {
        setNumber51((java.lang.Integer)value);
      }
      break;

    case NUMBER52:
      if (value == null) {
        unsetNumber52();
      } else {
        setNumber52((java.lang.Integer)value);
      }
      break;

    case NUMBER53:
      if (value == null) {
        unsetNumber53();
      } else {
        setNumber53((java.lang.Integer)value);
      }
      break;

    case NUMBER54:
      if (value == null) {
        unsetNumber54();
      } else {
        setNumber54((java.lang.Integer)value);
      }
      break;

    case NUMBER55:
      if (value == null) {
        unsetNumber55();
      } else {
        setNumber55((java.lang.Integer)value);
      }
      break;

    case NUMBER56:
      if (value == null) {
        unsetNumber56();
      } else {
        setNumber56((java.lang.Integer)value);
      }
      break;

    case NUMBER57:
      if (value == null) {
        unsetNumber57();
      } else {
        setNumber57((java.lang.Integer)value);
      }
      break;

    case NUMBER58:
      if (value == null) {
        unsetNumber58();
      } else {
        setNumber58((java.lang.Integer)value);
      }
      break;

    case NUMBER59:
      if (value == null) {
        unsetNumber59();
      } else {
        setNumber59((java.lang.Integer)value);
      }
      break;

    case NUMBER60:
      if (value == null) {
        unsetNumber60();
      } else {
        setNumber60((java.lang.Integer)value);
      }
      break;

    case NUMBER61:
      if (value == null) {
        unsetNumber61();
      } else {
        setNumber61((java.lang.Integer)value);
      }
      break;

    case NUMBER62:
      if (value == null) {
        unsetNumber62();
      } else {
        setNumber62((java.lang.Integer)value);
      }
      break;

    case NUMBER63:
      if (value == null) {
        unsetNumber63();
      } else {
        setNumber63((java.lang.Integer)value);
      }
      break;

    case NUMBER64:
      if (value == null) {
        unsetNumber64();
      } else {
        setNumber64((java.lang.Integer)value);
      }
      break;

    case NUMBER65:
      if (value == null) {
        unsetNumber65();
      } else {
        setNumber65((java.lang.Integer)value);
      }
      break;

    case NUMBER66:
      if (value == null) {
        unsetNumber66();
      } else {
        setNumber66((java.lang.Integer)value);
      }
      break;

    case NUMBER67:
      if (value == null) {
        unsetNumber67();
      } else {
        setNumber67((java.lang.Integer)value);
      }
      break;

    case NUMBER68:
      if (value == null) {
        unsetNumber68();
      } else {
        setNumber68((java.lang.Integer)value);
      }
      break;

    case NUMBER69:
      if (value == null) {
        unsetNumber69();
      } else {
        setNumber69((java.lang.Integer)value);
      }
      break;

    case NUMBER70:
      if (value == null) {
        unsetNumber70();
      } else {
        setNumber70((java.lang.Integer)value);
      }
      break;

    case NUMBER71:
      if (value == null) {
        unsetNumber71();
      } else {
        setNumber71((java.lang.Integer)value);
      }
      break;

    case NUMBER72:
      if (value == null) {
        unsetNumber72();
      } else {
        setNumber72((java.lang.Integer)value);
      }
      break;

    case NUMBER73:
      if (value == null) {
        unsetNumber73();
      } else {
        setNumber73((java.lang.Integer)value);
      }
      break;

    case NUMBER74:
      if (value == null) {
        unsetNumber74();
      } else {
        setNumber74((java.lang.Integer)value);
      }
      break;

    case NUMBER75:
      if (value == null) {
        unsetNumber75();
      } else {
        setNumber75((java.lang.Integer)value);
      }
      break;

    case NUMBER76:
      if (value == null) {
        unsetNumber76();
      } else {
        setNumber76((java.lang.Integer)value);
      }
      break;

    case NUMBER77:
      if (value == null) {
        unsetNumber77();
      } else {
        setNumber77((java.lang.Integer)value);
      }
      break;

    case NUMBER78:
      if (value == null) {
        unsetNumber78();
      } else {
        setNumber78((java.lang.Integer)value);
      }
      break;

    case NUMBER79:
      if (value == null) {
        unsetNumber79();
      } else {
        setNumber79((java.lang.Integer)value);
      }
      break;

    case NUMBER80:
      if (value == null) {
        unsetNumber80();
      } else {
        setNumber80((java.lang.Integer)value);
      }
      break;

    case NUMBER81:
      if (value == null) {
        unsetNumber81();
      } else {
        setNumber81((java.lang.Integer)value);
      }
      break;

    case NUMBER82:
      if (value == null) {
        unsetNumber82();
      } else {
        setNumber82((java.lang.Integer)value);
      }
      break;

    case NUMBER83:
      if (value == null) {
        unsetNumber83();
      } else {
        setNumber83((java.lang.Integer)value);
      }
      break;

    case NUMBER84:
      if (value == null) {
        unsetNumber84();
      } else {
        setNumber84((java.lang.Integer)value);
      }
      break;

    case NUMBER85:
      if (value == null) {
        unsetNumber85();
      } else {
        setNumber85((java.lang.Integer)value);
      }
      break;

    case NUMBER86:
      if (value == null) {
        unsetNumber86();
      } else {
        setNumber86((java.lang.Integer)value);
      }
      break;

    case NUMBER87:
      if (value == null) {
        unsetNumber87();
      } else {
        setNumber87((java.lang.Integer)value);
      }
      break;

    case NUMBER88:
      if (value == null) {
        unsetNumber88();
      } else {
        setNumber88((java.lang.Integer)value);
      }
      break;

    case NUMBER89:
      if (value == null) {
        unsetNumber89();
      } else {
        setNumber89((java.lang.Integer)value);
      }
      break;

    case NUMBER90:
      if (value == null) {
        unsetNumber90();
      } else {
        setNumber90((java.lang.Integer)value);
      }
      break;

    case NUMBER91:
      if (value == null) {
        unsetNumber91();
      } else {
        setNumber91((java.lang.Integer)value);
      }
      break;

    case NUMBER92:
      if (value == null) {
        unsetNumber92();
      } else {
        setNumber92((java.lang.Integer)value);
      }
      break;

    case NUMBER93:
      if (value == null) {
        unsetNumber93();
      } else {
        setNumber93((java.lang.Integer)value);
      }
      break;

    case NUMBER94:
      if (value == null) {
        unsetNumber94();
      } else {
        setNumber94((java.lang.Integer)value);
      }
      break;

    case NUMBER95:
      if (value == null) {
        unsetNumber95();
      } else {
        setNumber95((java.lang.Integer)value);
      }
      break;

    case NUMBER96:
      if (value == null) {
        unsetNumber96();
      } else {
        setNumber96((java.lang.Integer)value);
      }
      break;

    case NUMBER97:
      if (value == null) {
        unsetNumber97();
      } else {
        setNumber97((java.lang.Integer)value);
      }
      break;

    case NUMBER98:
      if (value == null) {
        unsetNumber98();
      } else {
        setNumber98((java.lang.Integer)value);
      }
      break;

    case NUMBER99:
      if (value == null) {
        unsetNumber99();
      } else {
        setNumber99((java.lang.Integer)value);
      }
      break;

    case NUMBER100:
      if (value == null) {
        unsetNumber100();
      } else {
        setNumber100((java.lang.Integer)value);
      }
      break;

    case NUMBER101:
      if (value == null) {
        unsetNumber101();
      } else {
        setNumber101((java.lang.Integer)value);
      }
      break;

    case NUMBER102:
      if (value == null) {
        unsetNumber102();
      } else {
        setNumber102((java.lang.Integer)value);
      }
      break;

    case NUMBER103:
      if (value == null) {
        unsetNumber103();
      } else {
        setNumber103((java.lang.Integer)value);
      }
      break;

    case NUMBER104:
      if (value == null) {
        unsetNumber104();
      } else {
        setNumber104((java.lang.Integer)value);
      }
      break;

    case NUMBER105:
      if (value == null) {
        unsetNumber105();
      } else {
        setNumber105((java.lang.Integer)value);
      }
      break;

    case NUMBER106:
      if (value == null) {
        unsetNumber106();
      } else {
        setNumber106((java.lang.Integer)value);
      }
      break;

    case NUMBER107:
      if (value == null) {
        unsetNumber107();
      } else {
        setNumber107((java.lang.Integer)value);
      }
      break;

    case NUMBER108:
      if (value == null) {
        unsetNumber108();
      } else {
        setNumber108((java.lang.Integer)value);
      }
      break;

    case NUMBER109:
      if (value == null) {
        unsetNumber109();
      } else {
        setNumber109((java.lang.Integer)value);
      }
      break;

    case NUMBER110:
      if (value == null) {
        unsetNumber110();
      } else {
        setNumber110((java.lang.Integer)value);
      }
      break;

    case NUMBER111:
      if (value == null) {
        unsetNumber111();
      } else {
        setNumber111((java.lang.Integer)value);
      }
      break;

    case NUMBER112:
      if (value == null) {
        unsetNumber112();
      } else {
        setNumber112((java.lang.Integer)value);
      }
      break;

    case NUMBER113:
      if (value == null) {
        unsetNumber113();
      } else {
        setNumber113((java.lang.Integer)value);
      }
      break;

    case NUMBER114:
      if (value == null) {
        unsetNumber114();
      } else {
        setNumber114((java.lang.Integer)value);
      }
      break;

    case NUMBER115:
      if (value == null) {
        unsetNumber115();
      } else {
        setNumber115((java.lang.Integer)value);
      }
      break;

    case NUMBER116:
      if (value == null) {
        unsetNumber116();
      } else {
        setNumber116((java.lang.Integer)value);
      }
      break;

    case NUMBER117:
      if (value == null) {
        unsetNumber117();
      } else {
        setNumber117((java.lang.Integer)value);
      }
      break;

    case NUMBER118:
      if (value == null) {
        unsetNumber118();
      } else {
        setNumber118((java.lang.Integer)value);
      }
      break;

    case NUMBER119:
      if (value == null) {
        unsetNumber119();
      } else {
        setNumber119((java.lang.Integer)value);
      }
      break;

    case NUMBER120:
      if (value == null) {
        unsetNumber120();
      } else {
        setNumber120((java.lang.Integer)value);
      }
      break;

    case NUMBER121:
      if (value == null) {
        unsetNumber121();
      } else {
        setNumber121((java.lang.Double)value);
      }
      break;

    case NUMBER122:
      if (value == null) {
        unsetNumber122();
      } else {
        setNumber122((java.lang.Double)value);
      }
      break;

    case NUMBER123:
      if (value == null) {
        unsetNumber123();
      } else {
        setNumber123((java.lang.Double)value);
      }
      break;

    case NUMBER124:
      if (value == null) {
        unsetNumber124();
      } else {
        setNumber124((java.lang.Double)value);
      }
      break;

    case NUMBER125:
      if (value == null) {
        unsetNumber125();
      } else {
        setNumber125((java.lang.Double)value);
      }
      break;

    case NUMBER126:
      if (value == null) {
        unsetNumber126();
      } else {
        setNumber126((java.lang.Double)value);
      }
      break;

    case NUMBER127:
      if (value == null) {
        unsetNumber127();
      } else {
        setNumber127((java.lang.Double)value);
      }
      break;

    case NUMBER128:
      if (value == null) {
        unsetNumber128();
      } else {
        setNumber128((java.lang.Double)value);
      }
      break;

    case NUMBER129:
      if (value == null) {
        unsetNumber129();
      } else {
        setNumber129((java.lang.Double)value);
      }
      break;

    case NUMBER130:
      if (value == null) {
        unsetNumber130();
      } else {
        setNumber130((java.lang.Double)value);
      }
      break;

    case NUMBER131:
      if (value == null) {
        unsetNumber131();
      } else {
        setNumber131((java.lang.Double)value);
      }
      break;

    case NUMBER132:
      if (value == null) {
        unsetNumber132();
      } else {
        setNumber132((java.lang.Double)value);
      }
      break;

    case NUMBER133:
      if (value == null) {
        unsetNumber133();
      } else {
        setNumber133((java.lang.Double)value);
      }
      break;

    case NUMBER134:
      if (value == null) {
        unsetNumber134();
      } else {
        setNumber134((java.lang.Double)value);
      }
      break;

    case NUMBER135:
      if (value == null) {
        unsetNumber135();
      } else {
        setNumber135((java.lang.Double)value);
      }
      break;

    case NUMBER136:
      if (value == null) {
        unsetNumber136();
      } else {
        setNumber136((java.lang.Double)value);
      }
      break;

    case NUMBER137:
      if (value == null) {
        unsetNumber137();
      } else {
        setNumber137((java.lang.Double)value);
      }
      break;

    case NUMBER138:
      if (value == null) {
        unsetNumber138();
      } else {
        setNumber138((java.lang.Double)value);
      }
      break;

    case NUMBER139:
      if (value == null) {
        unsetNumber139();
      } else {
        setNumber139((java.lang.Double)value);
      }
      break;

    case NUMBER140:
      if (value == null) {
        unsetNumber140();
      } else {
        setNumber140((java.lang.Double)value);
      }
      break;

    case NUMBER141:
      if (value == null) {
        unsetNumber141();
      } else {
        setNumber141((java.lang.Double)value);
      }
      break;

    case NUMBER142:
      if (value == null) {
        unsetNumber142();
      } else {
        setNumber142((java.lang.Double)value);
      }
      break;

    case NUMBER143:
      if (value == null) {
        unsetNumber143();
      } else {
        setNumber143((java.lang.Double)value);
      }
      break;

    case NUMBER144:
      if (value == null) {
        unsetNumber144();
      } else {
        setNumber144((java.lang.Double)value);
      }
      break;

    case NUMBER145:
      if (value == null) {
        unsetNumber145();
      } else {
        setNumber145((java.lang.Double)value);
      }
      break;

    case NUMBER146:
      if (value == null) {
        unsetNumber146();
      } else {
        setNumber146((java.lang.Double)value);
      }
      break;

    case NUMBER147:
      if (value == null) {
        unsetNumber147();
      } else {
        setNumber147((java.lang.Double)value);
      }
      break;

    case NUMBER148:
      if (value == null) {
        unsetNumber148();
      } else {
        setNumber148((java.lang.Double)value);
      }
      break;

    case NUMBER149:
      if (value == null) {
        unsetNumber149();
      } else {
        setNumber149((java.lang.Double)value);
      }
      break;

    case NUMBER150:
      if (value == null) {
        unsetNumber150();
      } else {
        setNumber150((java.lang.Double)value);
      }
      break;

    case NUMBER151:
      if (value == null) {
        unsetNumber151();
      } else {
        setNumber151((java.lang.Double)value);
      }
      break;

    case NUMBER152:
      if (value == null) {
        unsetNumber152();
      } else {
        setNumber152((java.lang.Double)value);
      }
      break;

    case NUMBER153:
      if (value == null) {
        unsetNumber153();
      } else {
        setNumber153((java.lang.Double)value);
      }
      break;

    case NUMBER154:
      if (value == null) {
        unsetNumber154();
      } else {
        setNumber154((java.lang.Double)value);
      }
      break;

    case NUMBER155:
      if (value == null) {
        unsetNumber155();
      } else {
        setNumber155((java.lang.Double)value);
      }
      break;

    case NUMBER156:
      if (value == null) {
        unsetNumber156();
      } else {
        setNumber156((java.lang.Double)value);
      }
      break;

    case NUMBER157:
      if (value == null) {
        unsetNumber157();
      } else {
        setNumber157((java.lang.Double)value);
      }
      break;

    case NUMBER158:
      if (value == null) {
        unsetNumber158();
      } else {
        setNumber158((java.lang.Double)value);
      }
      break;

    case NUMBER159:
      if (value == null) {
        unsetNumber159();
      } else {
        setNumber159((java.lang.Double)value);
      }
      break;

    case NUMBER160:
      if (value == null) {
        unsetNumber160();
      } else {
        setNumber160((java.lang.Double)value);
      }
      break;

    case NUMBER161:
      if (value == null) {
        unsetNumber161();
      } else {
        setNumber161((java.lang.Double)value);
      }
      break;

    case NUMBER162:
      if (value == null) {
        unsetNumber162();
      } else {
        setNumber162((java.lang.Double)value);
      }
      break;

    case NUMBER163:
      if (value == null) {
        unsetNumber163();
      } else {
        setNumber163((java.lang.Double)value);
      }
      break;

    case NUMBER164:
      if (value == null) {
        unsetNumber164();
      } else {
        setNumber164((java.lang.Double)value);
      }
      break;

    case NUMBER165:
      if (value == null) {
        unsetNumber165();
      } else {
        setNumber165((java.lang.Double)value);
      }
      break;

    case NUMBER166:
      if (value == null) {
        unsetNumber166();
      } else {
        setNumber166((java.lang.Double)value);
      }
      break;

    case NUMBER167:
      if (value == null) {
        unsetNumber167();
      } else {
        setNumber167((java.lang.Double)value);
      }
      break;

    case NUMBER168:
      if (value == null) {
        unsetNumber168();
      } else {
        setNumber168((java.lang.Double)value);
      }
      break;

    case NUMBER169:
      if (value == null) {
        unsetNumber169();
      } else {
        setNumber169((java.lang.Double)value);
      }
      break;

    case NUMBER170:
      if (value == null) {
        unsetNumber170();
      } else {
        setNumber170((java.lang.Double)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case STRING1:
      return getString1();

    case STRING2:
      return getString2();

    case STRING3:
      return getString3();

    case STRING4:
      return getString4();

    case STRING5:
      return getString5();

    case STRING6:
      return getString6();

    case STRING7:
      return getString7();

    case STRING8:
      return getString8();

    case STRING9:
      return getString9();

    case STRING10:
      return getString10();

    case STRING11:
      return getString11();

    case STRING12:
      return getString12();

    case STRING13:
      return getString13();

    case STRING14:
      return getString14();

    case STRING15:
      return getString15();

    case STRING16:
      return getString16();

    case STRING17:
      return getString17();

    case STRING18:
      return getString18();

    case STRING19:
      return getString19();

    case STRING20:
      return getString20();

    case STRING21:
      return getString21();

    case STRING22:
      return getString22();

    case STRING23:
      return getString23();

    case STRING24:
      return getString24();

    case STRING25:
      return getString25();

    case STRING26:
      return getString26();

    case STRING27:
      return getString27();

    case STRING28:
      return getString28();

    case STRING29:
      return getString29();

    case STRING30:
      return getString30();

    case NUMBER1:
      return getNumber1();

    case NUMBER2:
      return getNumber2();

    case NUMBER3:
      return getNumber3();

    case NUMBER4:
      return getNumber4();

    case NUMBER5:
      return getNumber5();

    case NUMBER6:
      return getNumber6();

    case NUMBER7:
      return getNumber7();

    case NUMBER8:
      return getNumber8();

    case NUMBER9:
      return getNumber9();

    case NUMBER10:
      return getNumber10();

    case NUMBER11:
      return getNumber11();

    case NUMBER12:
      return getNumber12();

    case NUMBER13:
      return getNumber13();

    case NUMBER14:
      return getNumber14();

    case NUMBER15:
      return getNumber15();

    case NUMBER16:
      return getNumber16();

    case NUMBER17:
      return getNumber17();

    case NUMBER18:
      return getNumber18();

    case NUMBER19:
      return getNumber19();

    case NUMBER20:
      return getNumber20();

    case NUMBER21:
      return getNumber21();

    case NUMBER22:
      return getNumber22();

    case NUMBER23:
      return getNumber23();

    case NUMBER24:
      return getNumber24();

    case NUMBER25:
      return getNumber25();

    case NUMBER26:
      return getNumber26();

    case NUMBER27:
      return getNumber27();

    case NUMBER28:
      return getNumber28();

    case NUMBER29:
      return getNumber29();

    case NUMBER30:
      return getNumber30();

    case NUMBER31:
      return getNumber31();

    case NUMBER32:
      return getNumber32();

    case NUMBER33:
      return getNumber33();

    case NUMBER34:
      return getNumber34();

    case NUMBER35:
      return getNumber35();

    case NUMBER36:
      return getNumber36();

    case NUMBER37:
      return getNumber37();

    case NUMBER38:
      return getNumber38();

    case NUMBER39:
      return getNumber39();

    case NUMBER40:
      return getNumber40();

    case NUMBER41:
      return getNumber41();

    case NUMBER42:
      return getNumber42();

    case NUMBER43:
      return getNumber43();

    case NUMBER44:
      return getNumber44();

    case NUMBER45:
      return getNumber45();

    case NUMBER46:
      return getNumber46();

    case NUMBER47:
      return getNumber47();

    case NUMBER48:
      return getNumber48();

    case NUMBER49:
      return getNumber49();

    case NUMBER50:
      return getNumber50();

    case NUMBER51:
      return getNumber51();

    case NUMBER52:
      return getNumber52();

    case NUMBER53:
      return getNumber53();

    case NUMBER54:
      return getNumber54();

    case NUMBER55:
      return getNumber55();

    case NUMBER56:
      return getNumber56();

    case NUMBER57:
      return getNumber57();

    case NUMBER58:
      return getNumber58();

    case NUMBER59:
      return getNumber59();

    case NUMBER60:
      return getNumber60();

    case NUMBER61:
      return getNumber61();

    case NUMBER62:
      return getNumber62();

    case NUMBER63:
      return getNumber63();

    case NUMBER64:
      return getNumber64();

    case NUMBER65:
      return getNumber65();

    case NUMBER66:
      return getNumber66();

    case NUMBER67:
      return getNumber67();

    case NUMBER68:
      return getNumber68();

    case NUMBER69:
      return getNumber69();

    case NUMBER70:
      return getNumber70();

    case NUMBER71:
      return getNumber71();

    case NUMBER72:
      return getNumber72();

    case NUMBER73:
      return getNumber73();

    case NUMBER74:
      return getNumber74();

    case NUMBER75:
      return getNumber75();

    case NUMBER76:
      return getNumber76();

    case NUMBER77:
      return getNumber77();

    case NUMBER78:
      return getNumber78();

    case NUMBER79:
      return getNumber79();

    case NUMBER80:
      return getNumber80();

    case NUMBER81:
      return getNumber81();

    case NUMBER82:
      return getNumber82();

    case NUMBER83:
      return getNumber83();

    case NUMBER84:
      return getNumber84();

    case NUMBER85:
      return getNumber85();

    case NUMBER86:
      return getNumber86();

    case NUMBER87:
      return getNumber87();

    case NUMBER88:
      return getNumber88();

    case NUMBER89:
      return getNumber89();

    case NUMBER90:
      return getNumber90();

    case NUMBER91:
      return getNumber91();

    case NUMBER92:
      return getNumber92();

    case NUMBER93:
      return getNumber93();

    case NUMBER94:
      return getNumber94();

    case NUMBER95:
      return getNumber95();

    case NUMBER96:
      return getNumber96();

    case NUMBER97:
      return getNumber97();

    case NUMBER98:
      return getNumber98();

    case NUMBER99:
      return getNumber99();

    case NUMBER100:
      return getNumber100();

    case NUMBER101:
      return getNumber101();

    case NUMBER102:
      return getNumber102();

    case NUMBER103:
      return getNumber103();

    case NUMBER104:
      return getNumber104();

    case NUMBER105:
      return getNumber105();

    case NUMBER106:
      return getNumber106();

    case NUMBER107:
      return getNumber107();

    case NUMBER108:
      return getNumber108();

    case NUMBER109:
      return getNumber109();

    case NUMBER110:
      return getNumber110();

    case NUMBER111:
      return getNumber111();

    case NUMBER112:
      return getNumber112();

    case NUMBER113:
      return getNumber113();

    case NUMBER114:
      return getNumber114();

    case NUMBER115:
      return getNumber115();

    case NUMBER116:
      return getNumber116();

    case NUMBER117:
      return getNumber117();

    case NUMBER118:
      return getNumber118();

    case NUMBER119:
      return getNumber119();

    case NUMBER120:
      return getNumber120();

    case NUMBER121:
      return getNumber121();

    case NUMBER122:
      return getNumber122();

    case NUMBER123:
      return getNumber123();

    case NUMBER124:
      return getNumber124();

    case NUMBER125:
      return getNumber125();

    case NUMBER126:
      return getNumber126();

    case NUMBER127:
      return getNumber127();

    case NUMBER128:
      return getNumber128();

    case NUMBER129:
      return getNumber129();

    case NUMBER130:
      return getNumber130();

    case NUMBER131:
      return getNumber131();

    case NUMBER132:
      return getNumber132();

    case NUMBER133:
      return getNumber133();

    case NUMBER134:
      return getNumber134();

    case NUMBER135:
      return getNumber135();

    case NUMBER136:
      return getNumber136();

    case NUMBER137:
      return getNumber137();

    case NUMBER138:
      return getNumber138();

    case NUMBER139:
      return getNumber139();

    case NUMBER140:
      return getNumber140();

    case NUMBER141:
      return getNumber141();

    case NUMBER142:
      return getNumber142();

    case NUMBER143:
      return getNumber143();

    case NUMBER144:
      return getNumber144();

    case NUMBER145:
      return getNumber145();

    case NUMBER146:
      return getNumber146();

    case NUMBER147:
      return getNumber147();

    case NUMBER148:
      return getNumber148();

    case NUMBER149:
      return getNumber149();

    case NUMBER150:
      return getNumber150();

    case NUMBER151:
      return getNumber151();

    case NUMBER152:
      return getNumber152();

    case NUMBER153:
      return getNumber153();

    case NUMBER154:
      return getNumber154();

    case NUMBER155:
      return getNumber155();

    case NUMBER156:
      return getNumber156();

    case NUMBER157:
      return getNumber157();

    case NUMBER158:
      return getNumber158();

    case NUMBER159:
      return getNumber159();

    case NUMBER160:
      return getNumber160();

    case NUMBER161:
      return getNumber161();

    case NUMBER162:
      return getNumber162();

    case NUMBER163:
      return getNumber163();

    case NUMBER164:
      return getNumber164();

    case NUMBER165:
      return getNumber165();

    case NUMBER166:
      return getNumber166();

    case NUMBER167:
      return getNumber167();

    case NUMBER168:
      return getNumber168();

    case NUMBER169:
      return getNumber169();

    case NUMBER170:
      return getNumber170();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case STRING1:
      return isSetString1();
    case STRING2:
      return isSetString2();
    case STRING3:
      return isSetString3();
    case STRING4:
      return isSetString4();
    case STRING5:
      return isSetString5();
    case STRING6:
      return isSetString6();
    case STRING7:
      return isSetString7();
    case STRING8:
      return isSetString8();
    case STRING9:
      return isSetString9();
    case STRING10:
      return isSetString10();
    case STRING11:
      return isSetString11();
    case STRING12:
      return isSetString12();
    case STRING13:
      return isSetString13();
    case STRING14:
      return isSetString14();
    case STRING15:
      return isSetString15();
    case STRING16:
      return isSetString16();
    case STRING17:
      return isSetString17();
    case STRING18:
      return isSetString18();
    case STRING19:
      return isSetString19();
    case STRING20:
      return isSetString20();
    case STRING21:
      return isSetString21();
    case STRING22:
      return isSetString22();
    case STRING23:
      return isSetString23();
    case STRING24:
      return isSetString24();
    case STRING25:
      return isSetString25();
    case STRING26:
      return isSetString26();
    case STRING27:
      return isSetString27();
    case STRING28:
      return isSetString28();
    case STRING29:
      return isSetString29();
    case STRING30:
      return isSetString30();
    case NUMBER1:
      return isSetNumber1();
    case NUMBER2:
      return isSetNumber2();
    case NUMBER3:
      return isSetNumber3();
    case NUMBER4:
      return isSetNumber4();
    case NUMBER5:
      return isSetNumber5();
    case NUMBER6:
      return isSetNumber6();
    case NUMBER7:
      return isSetNumber7();
    case NUMBER8:
      return isSetNumber8();
    case NUMBER9:
      return isSetNumber9();
    case NUMBER10:
      return isSetNumber10();
    case NUMBER11:
      return isSetNumber11();
    case NUMBER12:
      return isSetNumber12();
    case NUMBER13:
      return isSetNumber13();
    case NUMBER14:
      return isSetNumber14();
    case NUMBER15:
      return isSetNumber15();
    case NUMBER16:
      return isSetNumber16();
    case NUMBER17:
      return isSetNumber17();
    case NUMBER18:
      return isSetNumber18();
    case NUMBER19:
      return isSetNumber19();
    case NUMBER20:
      return isSetNumber20();
    case NUMBER21:
      return isSetNumber21();
    case NUMBER22:
      return isSetNumber22();
    case NUMBER23:
      return isSetNumber23();
    case NUMBER24:
      return isSetNumber24();
    case NUMBER25:
      return isSetNumber25();
    case NUMBER26:
      return isSetNumber26();
    case NUMBER27:
      return isSetNumber27();
    case NUMBER28:
      return isSetNumber28();
    case NUMBER29:
      return isSetNumber29();
    case NUMBER30:
      return isSetNumber30();
    case NUMBER31:
      return isSetNumber31();
    case NUMBER32:
      return isSetNumber32();
    case NUMBER33:
      return isSetNumber33();
    case NUMBER34:
      return isSetNumber34();
    case NUMBER35:
      return isSetNumber35();
    case NUMBER36:
      return isSetNumber36();
    case NUMBER37:
      return isSetNumber37();
    case NUMBER38:
      return isSetNumber38();
    case NUMBER39:
      return isSetNumber39();
    case NUMBER40:
      return isSetNumber40();
    case NUMBER41:
      return isSetNumber41();
    case NUMBER42:
      return isSetNumber42();
    case NUMBER43:
      return isSetNumber43();
    case NUMBER44:
      return isSetNumber44();
    case NUMBER45:
      return isSetNumber45();
    case NUMBER46:
      return isSetNumber46();
    case NUMBER47:
      return isSetNumber47();
    case NUMBER48:
      return isSetNumber48();
    case NUMBER49:
      return isSetNumber49();
    case NUMBER50:
      return isSetNumber50();
    case NUMBER51:
      return isSetNumber51();
    case NUMBER52:
      return isSetNumber52();
    case NUMBER53:
      return isSetNumber53();
    case NUMBER54:
      return isSetNumber54();
    case NUMBER55:
      return isSetNumber55();
    case NUMBER56:
      return isSetNumber56();
    case NUMBER57:
      return isSetNumber57();
    case NUMBER58:
      return isSetNumber58();
    case NUMBER59:
      return isSetNumber59();
    case NUMBER60:
      return isSetNumber60();
    case NUMBER61:
      return isSetNumber61();
    case NUMBER62:
      return isSetNumber62();
    case NUMBER63:
      return isSetNumber63();
    case NUMBER64:
      return isSetNumber64();
    case NUMBER65:
      return isSetNumber65();
    case NUMBER66:
      return isSetNumber66();
    case NUMBER67:
      return isSetNumber67();
    case NUMBER68:
      return isSetNumber68();
    case NUMBER69:
      return isSetNumber69();
    case NUMBER70:
      return isSetNumber70();
    case NUMBER71:
      return isSetNumber71();
    case NUMBER72:
      return isSetNumber72();
    case NUMBER73:
      return isSetNumber73();
    case NUMBER74:
      return isSetNumber74();
    case NUMBER75:
      return isSetNumber75();
    case NUMBER76:
      return isSetNumber76();
    case NUMBER77:
      return isSetNumber77();
    case NUMBER78:
      return isSetNumber78();
    case NUMBER79:
      return isSetNumber79();
    case NUMBER80:
      return isSetNumber80();
    case NUMBER81:
      return isSetNumber81();
    case NUMBER82:
      return isSetNumber82();
    case NUMBER83:
      return isSetNumber83();
    case NUMBER84:
      return isSetNumber84();
    case NUMBER85:
      return isSetNumber85();
    case NUMBER86:
      return isSetNumber86();
    case NUMBER87:
      return isSetNumber87();
    case NUMBER88:
      return isSetNumber88();
    case NUMBER89:
      return isSetNumber89();
    case NUMBER90:
      return isSetNumber90();
    case NUMBER91:
      return isSetNumber91();
    case NUMBER92:
      return isSetNumber92();
    case NUMBER93:
      return isSetNumber93();
    case NUMBER94:
      return isSetNumber94();
    case NUMBER95:
      return isSetNumber95();
    case NUMBER96:
      return isSetNumber96();
    case NUMBER97:
      return isSetNumber97();
    case NUMBER98:
      return isSetNumber98();
    case NUMBER99:
      return isSetNumber99();
    case NUMBER100:
      return isSetNumber100();
    case NUMBER101:
      return isSetNumber101();
    case NUMBER102:
      return isSetNumber102();
    case NUMBER103:
      return isSetNumber103();
    case NUMBER104:
      return isSetNumber104();
    case NUMBER105:
      return isSetNumber105();
    case NUMBER106:
      return isSetNumber106();
    case NUMBER107:
      return isSetNumber107();
    case NUMBER108:
      return isSetNumber108();
    case NUMBER109:
      return isSetNumber109();
    case NUMBER110:
      return isSetNumber110();
    case NUMBER111:
      return isSetNumber111();
    case NUMBER112:
      return isSetNumber112();
    case NUMBER113:
      return isSetNumber113();
    case NUMBER114:
      return isSetNumber114();
    case NUMBER115:
      return isSetNumber115();
    case NUMBER116:
      return isSetNumber116();
    case NUMBER117:
      return isSetNumber117();
    case NUMBER118:
      return isSetNumber118();
    case NUMBER119:
      return isSetNumber119();
    case NUMBER120:
      return isSetNumber120();
    case NUMBER121:
      return isSetNumber121();
    case NUMBER122:
      return isSetNumber122();
    case NUMBER123:
      return isSetNumber123();
    case NUMBER124:
      return isSetNumber124();
    case NUMBER125:
      return isSetNumber125();
    case NUMBER126:
      return isSetNumber126();
    case NUMBER127:
      return isSetNumber127();
    case NUMBER128:
      return isSetNumber128();
    case NUMBER129:
      return isSetNumber129();
    case NUMBER130:
      return isSetNumber130();
    case NUMBER131:
      return isSetNumber131();
    case NUMBER132:
      return isSetNumber132();
    case NUMBER133:
      return isSetNumber133();
    case NUMBER134:
      return isSetNumber134();
    case NUMBER135:
      return isSetNumber135();
    case NUMBER136:
      return isSetNumber136();
    case NUMBER137:
      return isSetNumber137();
    case NUMBER138:
      return isSetNumber138();
    case NUMBER139:
      return isSetNumber139();
    case NUMBER140:
      return isSetNumber140();
    case NUMBER141:
      return isSetNumber141();
    case NUMBER142:
      return isSetNumber142();
    case NUMBER143:
      return isSetNumber143();
    case NUMBER144:
      return isSetNumber144();
    case NUMBER145:
      return isSetNumber145();
    case NUMBER146:
      return isSetNumber146();
    case NUMBER147:
      return isSetNumber147();
    case NUMBER148:
      return isSetNumber148();
    case NUMBER149:
      return isSetNumber149();
    case NUMBER150:
      return isSetNumber150();
    case NUMBER151:
      return isSetNumber151();
    case NUMBER152:
      return isSetNumber152();
    case NUMBER153:
      return isSetNumber153();
    case NUMBER154:
      return isSetNumber154();
    case NUMBER155:
      return isSetNumber155();
    case NUMBER156:
      return isSetNumber156();
    case NUMBER157:
      return isSetNumber157();
    case NUMBER158:
      return isSetNumber158();
    case NUMBER159:
      return isSetNumber159();
    case NUMBER160:
      return isSetNumber160();
    case NUMBER161:
      return isSetNumber161();
    case NUMBER162:
      return isSetNumber162();
    case NUMBER163:
      return isSetNumber163();
    case NUMBER164:
      return isSetNumber164();
    case NUMBER165:
      return isSetNumber165();
    case NUMBER166:
      return isSetNumber166();
    case NUMBER167:
      return isSetNumber167();
    case NUMBER168:
      return isSetNumber168();
    case NUMBER169:
      return isSetNumber169();
    case NUMBER170:
      return isSetNumber170();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof Data6Thrift)
      return this.equals((Data6Thrift)that);
    return false;
  }

  public boolean equals(Data6Thrift that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_string1 = true && this.isSetString1();
    boolean that_present_string1 = true && that.isSetString1();
    if (this_present_string1 || that_present_string1) {
      if (!(this_present_string1 && that_present_string1))
        return false;
      if (!this.string1.equals(that.string1))
        return false;
    }

    boolean this_present_string2 = true && this.isSetString2();
    boolean that_present_string2 = true && that.isSetString2();
    if (this_present_string2 || that_present_string2) {
      if (!(this_present_string2 && that_present_string2))
        return false;
      if (!this.string2.equals(that.string2))
        return false;
    }

    boolean this_present_string3 = true && this.isSetString3();
    boolean that_present_string3 = true && that.isSetString3();
    if (this_present_string3 || that_present_string3) {
      if (!(this_present_string3 && that_present_string3))
        return false;
      if (!this.string3.equals(that.string3))
        return false;
    }

    boolean this_present_string4 = true && this.isSetString4();
    boolean that_present_string4 = true && that.isSetString4();
    if (this_present_string4 || that_present_string4) {
      if (!(this_present_string4 && that_present_string4))
        return false;
      if (!this.string4.equals(that.string4))
        return false;
    }

    boolean this_present_string5 = true && this.isSetString5();
    boolean that_present_string5 = true && that.isSetString5();
    if (this_present_string5 || that_present_string5) {
      if (!(this_present_string5 && that_present_string5))
        return false;
      if (!this.string5.equals(that.string5))
        return false;
    }

    boolean this_present_string6 = true && this.isSetString6();
    boolean that_present_string6 = true && that.isSetString6();
    if (this_present_string6 || that_present_string6) {
      if (!(this_present_string6 && that_present_string6))
        return false;
      if (!this.string6.equals(that.string6))
        return false;
    }

    boolean this_present_string7 = true && this.isSetString7();
    boolean that_present_string7 = true && that.isSetString7();
    if (this_present_string7 || that_present_string7) {
      if (!(this_present_string7 && that_present_string7))
        return false;
      if (!this.string7.equals(that.string7))
        return false;
    }

    boolean this_present_string8 = true && this.isSetString8();
    boolean that_present_string8 = true && that.isSetString8();
    if (this_present_string8 || that_present_string8) {
      if (!(this_present_string8 && that_present_string8))
        return false;
      if (!this.string8.equals(that.string8))
        return false;
    }

    boolean this_present_string9 = true && this.isSetString9();
    boolean that_present_string9 = true && that.isSetString9();
    if (this_present_string9 || that_present_string9) {
      if (!(this_present_string9 && that_present_string9))
        return false;
      if (!this.string9.equals(that.string9))
        return false;
    }

    boolean this_present_string10 = true && this.isSetString10();
    boolean that_present_string10 = true && that.isSetString10();
    if (this_present_string10 || that_present_string10) {
      if (!(this_present_string10 && that_present_string10))
        return false;
      if (!this.string10.equals(that.string10))
        return false;
    }

    boolean this_present_string11 = true && this.isSetString11();
    boolean that_present_string11 = true && that.isSetString11();
    if (this_present_string11 || that_present_string11) {
      if (!(this_present_string11 && that_present_string11))
        return false;
      if (!this.string11.equals(that.string11))
        return false;
    }

    boolean this_present_string12 = true && this.isSetString12();
    boolean that_present_string12 = true && that.isSetString12();
    if (this_present_string12 || that_present_string12) {
      if (!(this_present_string12 && that_present_string12))
        return false;
      if (!this.string12.equals(that.string12))
        return false;
    }

    boolean this_present_string13 = true && this.isSetString13();
    boolean that_present_string13 = true && that.isSetString13();
    if (this_present_string13 || that_present_string13) {
      if (!(this_present_string13 && that_present_string13))
        return false;
      if (!this.string13.equals(that.string13))
        return false;
    }

    boolean this_present_string14 = true && this.isSetString14();
    boolean that_present_string14 = true && that.isSetString14();
    if (this_present_string14 || that_present_string14) {
      if (!(this_present_string14 && that_present_string14))
        return false;
      if (!this.string14.equals(that.string14))
        return false;
    }

    boolean this_present_string15 = true && this.isSetString15();
    boolean that_present_string15 = true && that.isSetString15();
    if (this_present_string15 || that_present_string15) {
      if (!(this_present_string15 && that_present_string15))
        return false;
      if (!this.string15.equals(that.string15))
        return false;
    }

    boolean this_present_string16 = true && this.isSetString16();
    boolean that_present_string16 = true && that.isSetString16();
    if (this_present_string16 || that_present_string16) {
      if (!(this_present_string16 && that_present_string16))
        return false;
      if (!this.string16.equals(that.string16))
        return false;
    }

    boolean this_present_string17 = true && this.isSetString17();
    boolean that_present_string17 = true && that.isSetString17();
    if (this_present_string17 || that_present_string17) {
      if (!(this_present_string17 && that_present_string17))
        return false;
      if (!this.string17.equals(that.string17))
        return false;
    }

    boolean this_present_string18 = true && this.isSetString18();
    boolean that_present_string18 = true && that.isSetString18();
    if (this_present_string18 || that_present_string18) {
      if (!(this_present_string18 && that_present_string18))
        return false;
      if (!this.string18.equals(that.string18))
        return false;
    }

    boolean this_present_string19 = true && this.isSetString19();
    boolean that_present_string19 = true && that.isSetString19();
    if (this_present_string19 || that_present_string19) {
      if (!(this_present_string19 && that_present_string19))
        return false;
      if (!this.string19.equals(that.string19))
        return false;
    }

    boolean this_present_string20 = true && this.isSetString20();
    boolean that_present_string20 = true && that.isSetString20();
    if (this_present_string20 || that_present_string20) {
      if (!(this_present_string20 && that_present_string20))
        return false;
      if (!this.string20.equals(that.string20))
        return false;
    }

    boolean this_present_string21 = true && this.isSetString21();
    boolean that_present_string21 = true && that.isSetString21();
    if (this_present_string21 || that_present_string21) {
      if (!(this_present_string21 && that_present_string21))
        return false;
      if (!this.string21.equals(that.string21))
        return false;
    }

    boolean this_present_string22 = true && this.isSetString22();
    boolean that_present_string22 = true && that.isSetString22();
    if (this_present_string22 || that_present_string22) {
      if (!(this_present_string22 && that_present_string22))
        return false;
      if (!this.string22.equals(that.string22))
        return false;
    }

    boolean this_present_string23 = true && this.isSetString23();
    boolean that_present_string23 = true && that.isSetString23();
    if (this_present_string23 || that_present_string23) {
      if (!(this_present_string23 && that_present_string23))
        return false;
      if (!this.string23.equals(that.string23))
        return false;
    }

    boolean this_present_string24 = true && this.isSetString24();
    boolean that_present_string24 = true && that.isSetString24();
    if (this_present_string24 || that_present_string24) {
      if (!(this_present_string24 && that_present_string24))
        return false;
      if (!this.string24.equals(that.string24))
        return false;
    }

    boolean this_present_string25 = true && this.isSetString25();
    boolean that_present_string25 = true && that.isSetString25();
    if (this_present_string25 || that_present_string25) {
      if (!(this_present_string25 && that_present_string25))
        return false;
      if (!this.string25.equals(that.string25))
        return false;
    }

    boolean this_present_string26 = true && this.isSetString26();
    boolean that_present_string26 = true && that.isSetString26();
    if (this_present_string26 || that_present_string26) {
      if (!(this_present_string26 && that_present_string26))
        return false;
      if (!this.string26.equals(that.string26))
        return false;
    }

    boolean this_present_string27 = true && this.isSetString27();
    boolean that_present_string27 = true && that.isSetString27();
    if (this_present_string27 || that_present_string27) {
      if (!(this_present_string27 && that_present_string27))
        return false;
      if (!this.string27.equals(that.string27))
        return false;
    }

    boolean this_present_string28 = true && this.isSetString28();
    boolean that_present_string28 = true && that.isSetString28();
    if (this_present_string28 || that_present_string28) {
      if (!(this_present_string28 && that_present_string28))
        return false;
      if (!this.string28.equals(that.string28))
        return false;
    }

    boolean this_present_string29 = true && this.isSetString29();
    boolean that_present_string29 = true && that.isSetString29();
    if (this_present_string29 || that_present_string29) {
      if (!(this_present_string29 && that_present_string29))
        return false;
      if (!this.string29.equals(that.string29))
        return false;
    }

    boolean this_present_string30 = true && this.isSetString30();
    boolean that_present_string30 = true && that.isSetString30();
    if (this_present_string30 || that_present_string30) {
      if (!(this_present_string30 && that_present_string30))
        return false;
      if (!this.string30.equals(that.string30))
        return false;
    }

    boolean this_present_number1 = true;
    boolean that_present_number1 = true;
    if (this_present_number1 || that_present_number1) {
      if (!(this_present_number1 && that_present_number1))
        return false;
      if (this.number1 != that.number1)
        return false;
    }

    boolean this_present_number2 = true;
    boolean that_present_number2 = true;
    if (this_present_number2 || that_present_number2) {
      if (!(this_present_number2 && that_present_number2))
        return false;
      if (this.number2 != that.number2)
        return false;
    }

    boolean this_present_number3 = true;
    boolean that_present_number3 = true;
    if (this_present_number3 || that_present_number3) {
      if (!(this_present_number3 && that_present_number3))
        return false;
      if (this.number3 != that.number3)
        return false;
    }

    boolean this_present_number4 = true;
    boolean that_present_number4 = true;
    if (this_present_number4 || that_present_number4) {
      if (!(this_present_number4 && that_present_number4))
        return false;
      if (this.number4 != that.number4)
        return false;
    }

    boolean this_present_number5 = true;
    boolean that_present_number5 = true;
    if (this_present_number5 || that_present_number5) {
      if (!(this_present_number5 && that_present_number5))
        return false;
      if (this.number5 != that.number5)
        return false;
    }

    boolean this_present_number6 = true;
    boolean that_present_number6 = true;
    if (this_present_number6 || that_present_number6) {
      if (!(this_present_number6 && that_present_number6))
        return false;
      if (this.number6 != that.number6)
        return false;
    }

    boolean this_present_number7 = true;
    boolean that_present_number7 = true;
    if (this_present_number7 || that_present_number7) {
      if (!(this_present_number7 && that_present_number7))
        return false;
      if (this.number7 != that.number7)
        return false;
    }

    boolean this_present_number8 = true;
    boolean that_present_number8 = true;
    if (this_present_number8 || that_present_number8) {
      if (!(this_present_number8 && that_present_number8))
        return false;
      if (this.number8 != that.number8)
        return false;
    }

    boolean this_present_number9 = true;
    boolean that_present_number9 = true;
    if (this_present_number9 || that_present_number9) {
      if (!(this_present_number9 && that_present_number9))
        return false;
      if (this.number9 != that.number9)
        return false;
    }

    boolean this_present_number10 = true;
    boolean that_present_number10 = true;
    if (this_present_number10 || that_present_number10) {
      if (!(this_present_number10 && that_present_number10))
        return false;
      if (this.number10 != that.number10)
        return false;
    }

    boolean this_present_number11 = true;
    boolean that_present_number11 = true;
    if (this_present_number11 || that_present_number11) {
      if (!(this_present_number11 && that_present_number11))
        return false;
      if (this.number11 != that.number11)
        return false;
    }

    boolean this_present_number12 = true;
    boolean that_present_number12 = true;
    if (this_present_number12 || that_present_number12) {
      if (!(this_present_number12 && that_present_number12))
        return false;
      if (this.number12 != that.number12)
        return false;
    }

    boolean this_present_number13 = true;
    boolean that_present_number13 = true;
    if (this_present_number13 || that_present_number13) {
      if (!(this_present_number13 && that_present_number13))
        return false;
      if (this.number13 != that.number13)
        return false;
    }

    boolean this_present_number14 = true;
    boolean that_present_number14 = true;
    if (this_present_number14 || that_present_number14) {
      if (!(this_present_number14 && that_present_number14))
        return false;
      if (this.number14 != that.number14)
        return false;
    }

    boolean this_present_number15 = true;
    boolean that_present_number15 = true;
    if (this_present_number15 || that_present_number15) {
      if (!(this_present_number15 && that_present_number15))
        return false;
      if (this.number15 != that.number15)
        return false;
    }

    boolean this_present_number16 = true;
    boolean that_present_number16 = true;
    if (this_present_number16 || that_present_number16) {
      if (!(this_present_number16 && that_present_number16))
        return false;
      if (this.number16 != that.number16)
        return false;
    }

    boolean this_present_number17 = true;
    boolean that_present_number17 = true;
    if (this_present_number17 || that_present_number17) {
      if (!(this_present_number17 && that_present_number17))
        return false;
      if (this.number17 != that.number17)
        return false;
    }

    boolean this_present_number18 = true;
    boolean that_present_number18 = true;
    if (this_present_number18 || that_present_number18) {
      if (!(this_present_number18 && that_present_number18))
        return false;
      if (this.number18 != that.number18)
        return false;
    }

    boolean this_present_number19 = true;
    boolean that_present_number19 = true;
    if (this_present_number19 || that_present_number19) {
      if (!(this_present_number19 && that_present_number19))
        return false;
      if (this.number19 != that.number19)
        return false;
    }

    boolean this_present_number20 = true;
    boolean that_present_number20 = true;
    if (this_present_number20 || that_present_number20) {
      if (!(this_present_number20 && that_present_number20))
        return false;
      if (this.number20 != that.number20)
        return false;
    }

    boolean this_present_number21 = true;
    boolean that_present_number21 = true;
    if (this_present_number21 || that_present_number21) {
      if (!(this_present_number21 && that_present_number21))
        return false;
      if (this.number21 != that.number21)
        return false;
    }

    boolean this_present_number22 = true;
    boolean that_present_number22 = true;
    if (this_present_number22 || that_present_number22) {
      if (!(this_present_number22 && that_present_number22))
        return false;
      if (this.number22 != that.number22)
        return false;
    }

    boolean this_present_number23 = true;
    boolean that_present_number23 = true;
    if (this_present_number23 || that_present_number23) {
      if (!(this_present_number23 && that_present_number23))
        return false;
      if (this.number23 != that.number23)
        return false;
    }

    boolean this_present_number24 = true;
    boolean that_present_number24 = true;
    if (this_present_number24 || that_present_number24) {
      if (!(this_present_number24 && that_present_number24))
        return false;
      if (this.number24 != that.number24)
        return false;
    }

    boolean this_present_number25 = true;
    boolean that_present_number25 = true;
    if (this_present_number25 || that_present_number25) {
      if (!(this_present_number25 && that_present_number25))
        return false;
      if (this.number25 != that.number25)
        return false;
    }

    boolean this_present_number26 = true;
    boolean that_present_number26 = true;
    if (this_present_number26 || that_present_number26) {
      if (!(this_present_number26 && that_present_number26))
        return false;
      if (this.number26 != that.number26)
        return false;
    }

    boolean this_present_number27 = true;
    boolean that_present_number27 = true;
    if (this_present_number27 || that_present_number27) {
      if (!(this_present_number27 && that_present_number27))
        return false;
      if (this.number27 != that.number27)
        return false;
    }

    boolean this_present_number28 = true;
    boolean that_present_number28 = true;
    if (this_present_number28 || that_present_number28) {
      if (!(this_present_number28 && that_present_number28))
        return false;
      if (this.number28 != that.number28)
        return false;
    }

    boolean this_present_number29 = true;
    boolean that_present_number29 = true;
    if (this_present_number29 || that_present_number29) {
      if (!(this_present_number29 && that_present_number29))
        return false;
      if (this.number29 != that.number29)
        return false;
    }

    boolean this_present_number30 = true;
    boolean that_present_number30 = true;
    if (this_present_number30 || that_present_number30) {
      if (!(this_present_number30 && that_present_number30))
        return false;
      if (this.number30 != that.number30)
        return false;
    }

    boolean this_present_number31 = true;
    boolean that_present_number31 = true;
    if (this_present_number31 || that_present_number31) {
      if (!(this_present_number31 && that_present_number31))
        return false;
      if (this.number31 != that.number31)
        return false;
    }

    boolean this_present_number32 = true;
    boolean that_present_number32 = true;
    if (this_present_number32 || that_present_number32) {
      if (!(this_present_number32 && that_present_number32))
        return false;
      if (this.number32 != that.number32)
        return false;
    }

    boolean this_present_number33 = true;
    boolean that_present_number33 = true;
    if (this_present_number33 || that_present_number33) {
      if (!(this_present_number33 && that_present_number33))
        return false;
      if (this.number33 != that.number33)
        return false;
    }

    boolean this_present_number34 = true;
    boolean that_present_number34 = true;
    if (this_present_number34 || that_present_number34) {
      if (!(this_present_number34 && that_present_number34))
        return false;
      if (this.number34 != that.number34)
        return false;
    }

    boolean this_present_number35 = true;
    boolean that_present_number35 = true;
    if (this_present_number35 || that_present_number35) {
      if (!(this_present_number35 && that_present_number35))
        return false;
      if (this.number35 != that.number35)
        return false;
    }

    boolean this_present_number36 = true;
    boolean that_present_number36 = true;
    if (this_present_number36 || that_present_number36) {
      if (!(this_present_number36 && that_present_number36))
        return false;
      if (this.number36 != that.number36)
        return false;
    }

    boolean this_present_number37 = true;
    boolean that_present_number37 = true;
    if (this_present_number37 || that_present_number37) {
      if (!(this_present_number37 && that_present_number37))
        return false;
      if (this.number37 != that.number37)
        return false;
    }

    boolean this_present_number38 = true;
    boolean that_present_number38 = true;
    if (this_present_number38 || that_present_number38) {
      if (!(this_present_number38 && that_present_number38))
        return false;
      if (this.number38 != that.number38)
        return false;
    }

    boolean this_present_number39 = true;
    boolean that_present_number39 = true;
    if (this_present_number39 || that_present_number39) {
      if (!(this_present_number39 && that_present_number39))
        return false;
      if (this.number39 != that.number39)
        return false;
    }

    boolean this_present_number40 = true;
    boolean that_present_number40 = true;
    if (this_present_number40 || that_present_number40) {
      if (!(this_present_number40 && that_present_number40))
        return false;
      if (this.number40 != that.number40)
        return false;
    }

    boolean this_present_number41 = true;
    boolean that_present_number41 = true;
    if (this_present_number41 || that_present_number41) {
      if (!(this_present_number41 && that_present_number41))
        return false;
      if (this.number41 != that.number41)
        return false;
    }

    boolean this_present_number42 = true;
    boolean that_present_number42 = true;
    if (this_present_number42 || that_present_number42) {
      if (!(this_present_number42 && that_present_number42))
        return false;
      if (this.number42 != that.number42)
        return false;
    }

    boolean this_present_number43 = true;
    boolean that_present_number43 = true;
    if (this_present_number43 || that_present_number43) {
      if (!(this_present_number43 && that_present_number43))
        return false;
      if (this.number43 != that.number43)
        return false;
    }

    boolean this_present_number44 = true;
    boolean that_present_number44 = true;
    if (this_present_number44 || that_present_number44) {
      if (!(this_present_number44 && that_present_number44))
        return false;
      if (this.number44 != that.number44)
        return false;
    }

    boolean this_present_number45 = true;
    boolean that_present_number45 = true;
    if (this_present_number45 || that_present_number45) {
      if (!(this_present_number45 && that_present_number45))
        return false;
      if (this.number45 != that.number45)
        return false;
    }

    boolean this_present_number46 = true;
    boolean that_present_number46 = true;
    if (this_present_number46 || that_present_number46) {
      if (!(this_present_number46 && that_present_number46))
        return false;
      if (this.number46 != that.number46)
        return false;
    }

    boolean this_present_number47 = true;
    boolean that_present_number47 = true;
    if (this_present_number47 || that_present_number47) {
      if (!(this_present_number47 && that_present_number47))
        return false;
      if (this.number47 != that.number47)
        return false;
    }

    boolean this_present_number48 = true;
    boolean that_present_number48 = true;
    if (this_present_number48 || that_present_number48) {
      if (!(this_present_number48 && that_present_number48))
        return false;
      if (this.number48 != that.number48)
        return false;
    }

    boolean this_present_number49 = true;
    boolean that_present_number49 = true;
    if (this_present_number49 || that_present_number49) {
      if (!(this_present_number49 && that_present_number49))
        return false;
      if (this.number49 != that.number49)
        return false;
    }

    boolean this_present_number50 = true;
    boolean that_present_number50 = true;
    if (this_present_number50 || that_present_number50) {
      if (!(this_present_number50 && that_present_number50))
        return false;
      if (this.number50 != that.number50)
        return false;
    }

    boolean this_present_number51 = true;
    boolean that_present_number51 = true;
    if (this_present_number51 || that_present_number51) {
      if (!(this_present_number51 && that_present_number51))
        return false;
      if (this.number51 != that.number51)
        return false;
    }

    boolean this_present_number52 = true;
    boolean that_present_number52 = true;
    if (this_present_number52 || that_present_number52) {
      if (!(this_present_number52 && that_present_number52))
        return false;
      if (this.number52 != that.number52)
        return false;
    }

    boolean this_present_number53 = true;
    boolean that_present_number53 = true;
    if (this_present_number53 || that_present_number53) {
      if (!(this_present_number53 && that_present_number53))
        return false;
      if (this.number53 != that.number53)
        return false;
    }

    boolean this_present_number54 = true;
    boolean that_present_number54 = true;
    if (this_present_number54 || that_present_number54) {
      if (!(this_present_number54 && that_present_number54))
        return false;
      if (this.number54 != that.number54)
        return false;
    }

    boolean this_present_number55 = true;
    boolean that_present_number55 = true;
    if (this_present_number55 || that_present_number55) {
      if (!(this_present_number55 && that_present_number55))
        return false;
      if (this.number55 != that.number55)
        return false;
    }

    boolean this_present_number56 = true;
    boolean that_present_number56 = true;
    if (this_present_number56 || that_present_number56) {
      if (!(this_present_number56 && that_present_number56))
        return false;
      if (this.number56 != that.number56)
        return false;
    }

    boolean this_present_number57 = true;
    boolean that_present_number57 = true;
    if (this_present_number57 || that_present_number57) {
      if (!(this_present_number57 && that_present_number57))
        return false;
      if (this.number57 != that.number57)
        return false;
    }

    boolean this_present_number58 = true;
    boolean that_present_number58 = true;
    if (this_present_number58 || that_present_number58) {
      if (!(this_present_number58 && that_present_number58))
        return false;
      if (this.number58 != that.number58)
        return false;
    }

    boolean this_present_number59 = true;
    boolean that_present_number59 = true;
    if (this_present_number59 || that_present_number59) {
      if (!(this_present_number59 && that_present_number59))
        return false;
      if (this.number59 != that.number59)
        return false;
    }

    boolean this_present_number60 = true;
    boolean that_present_number60 = true;
    if (this_present_number60 || that_present_number60) {
      if (!(this_present_number60 && that_present_number60))
        return false;
      if (this.number60 != that.number60)
        return false;
    }

    boolean this_present_number61 = true;
    boolean that_present_number61 = true;
    if (this_present_number61 || that_present_number61) {
      if (!(this_present_number61 && that_present_number61))
        return false;
      if (this.number61 != that.number61)
        return false;
    }

    boolean this_present_number62 = true;
    boolean that_present_number62 = true;
    if (this_present_number62 || that_present_number62) {
      if (!(this_present_number62 && that_present_number62))
        return false;
      if (this.number62 != that.number62)
        return false;
    }

    boolean this_present_number63 = true;
    boolean that_present_number63 = true;
    if (this_present_number63 || that_present_number63) {
      if (!(this_present_number63 && that_present_number63))
        return false;
      if (this.number63 != that.number63)
        return false;
    }

    boolean this_present_number64 = true;
    boolean that_present_number64 = true;
    if (this_present_number64 || that_present_number64) {
      if (!(this_present_number64 && that_present_number64))
        return false;
      if (this.number64 != that.number64)
        return false;
    }

    boolean this_present_number65 = true;
    boolean that_present_number65 = true;
    if (this_present_number65 || that_present_number65) {
      if (!(this_present_number65 && that_present_number65))
        return false;
      if (this.number65 != that.number65)
        return false;
    }

    boolean this_present_number66 = true;
    boolean that_present_number66 = true;
    if (this_present_number66 || that_present_number66) {
      if (!(this_present_number66 && that_present_number66))
        return false;
      if (this.number66 != that.number66)
        return false;
    }

    boolean this_present_number67 = true;
    boolean that_present_number67 = true;
    if (this_present_number67 || that_present_number67) {
      if (!(this_present_number67 && that_present_number67))
        return false;
      if (this.number67 != that.number67)
        return false;
    }

    boolean this_present_number68 = true;
    boolean that_present_number68 = true;
    if (this_present_number68 || that_present_number68) {
      if (!(this_present_number68 && that_present_number68))
        return false;
      if (this.number68 != that.number68)
        return false;
    }

    boolean this_present_number69 = true;
    boolean that_present_number69 = true;
    if (this_present_number69 || that_present_number69) {
      if (!(this_present_number69 && that_present_number69))
        return false;
      if (this.number69 != that.number69)
        return false;
    }

    boolean this_present_number70 = true;
    boolean that_present_number70 = true;
    if (this_present_number70 || that_present_number70) {
      if (!(this_present_number70 && that_present_number70))
        return false;
      if (this.number70 != that.number70)
        return false;
    }

    boolean this_present_number71 = true;
    boolean that_present_number71 = true;
    if (this_present_number71 || that_present_number71) {
      if (!(this_present_number71 && that_present_number71))
        return false;
      if (this.number71 != that.number71)
        return false;
    }

    boolean this_present_number72 = true;
    boolean that_present_number72 = true;
    if (this_present_number72 || that_present_number72) {
      if (!(this_present_number72 && that_present_number72))
        return false;
      if (this.number72 != that.number72)
        return false;
    }

    boolean this_present_number73 = true;
    boolean that_present_number73 = true;
    if (this_present_number73 || that_present_number73) {
      if (!(this_present_number73 && that_present_number73))
        return false;
      if (this.number73 != that.number73)
        return false;
    }

    boolean this_present_number74 = true;
    boolean that_present_number74 = true;
    if (this_present_number74 || that_present_number74) {
      if (!(this_present_number74 && that_present_number74))
        return false;
      if (this.number74 != that.number74)
        return false;
    }

    boolean this_present_number75 = true;
    boolean that_present_number75 = true;
    if (this_present_number75 || that_present_number75) {
      if (!(this_present_number75 && that_present_number75))
        return false;
      if (this.number75 != that.number75)
        return false;
    }

    boolean this_present_number76 = true;
    boolean that_present_number76 = true;
    if (this_present_number76 || that_present_number76) {
      if (!(this_present_number76 && that_present_number76))
        return false;
      if (this.number76 != that.number76)
        return false;
    }

    boolean this_present_number77 = true;
    boolean that_present_number77 = true;
    if (this_present_number77 || that_present_number77) {
      if (!(this_present_number77 && that_present_number77))
        return false;
      if (this.number77 != that.number77)
        return false;
    }

    boolean this_present_number78 = true;
    boolean that_present_number78 = true;
    if (this_present_number78 || that_present_number78) {
      if (!(this_present_number78 && that_present_number78))
        return false;
      if (this.number78 != that.number78)
        return false;
    }

    boolean this_present_number79 = true;
    boolean that_present_number79 = true;
    if (this_present_number79 || that_present_number79) {
      if (!(this_present_number79 && that_present_number79))
        return false;
      if (this.number79 != that.number79)
        return false;
    }

    boolean this_present_number80 = true;
    boolean that_present_number80 = true;
    if (this_present_number80 || that_present_number80) {
      if (!(this_present_number80 && that_present_number80))
        return false;
      if (this.number80 != that.number80)
        return false;
    }

    boolean this_present_number81 = true;
    boolean that_present_number81 = true;
    if (this_present_number81 || that_present_number81) {
      if (!(this_present_number81 && that_present_number81))
        return false;
      if (this.number81 != that.number81)
        return false;
    }

    boolean this_present_number82 = true;
    boolean that_present_number82 = true;
    if (this_present_number82 || that_present_number82) {
      if (!(this_present_number82 && that_present_number82))
        return false;
      if (this.number82 != that.number82)
        return false;
    }

    boolean this_present_number83 = true;
    boolean that_present_number83 = true;
    if (this_present_number83 || that_present_number83) {
      if (!(this_present_number83 && that_present_number83))
        return false;
      if (this.number83 != that.number83)
        return false;
    }

    boolean this_present_number84 = true;
    boolean that_present_number84 = true;
    if (this_present_number84 || that_present_number84) {
      if (!(this_present_number84 && that_present_number84))
        return false;
      if (this.number84 != that.number84)
        return false;
    }

    boolean this_present_number85 = true;
    boolean that_present_number85 = true;
    if (this_present_number85 || that_present_number85) {
      if (!(this_present_number85 && that_present_number85))
        return false;
      if (this.number85 != that.number85)
        return false;
    }

    boolean this_present_number86 = true;
    boolean that_present_number86 = true;
    if (this_present_number86 || that_present_number86) {
      if (!(this_present_number86 && that_present_number86))
        return false;
      if (this.number86 != that.number86)
        return false;
    }

    boolean this_present_number87 = true;
    boolean that_present_number87 = true;
    if (this_present_number87 || that_present_number87) {
      if (!(this_present_number87 && that_present_number87))
        return false;
      if (this.number87 != that.number87)
        return false;
    }

    boolean this_present_number88 = true;
    boolean that_present_number88 = true;
    if (this_present_number88 || that_present_number88) {
      if (!(this_present_number88 && that_present_number88))
        return false;
      if (this.number88 != that.number88)
        return false;
    }

    boolean this_present_number89 = true;
    boolean that_present_number89 = true;
    if (this_present_number89 || that_present_number89) {
      if (!(this_present_number89 && that_present_number89))
        return false;
      if (this.number89 != that.number89)
        return false;
    }

    boolean this_present_number90 = true;
    boolean that_present_number90 = true;
    if (this_present_number90 || that_present_number90) {
      if (!(this_present_number90 && that_present_number90))
        return false;
      if (this.number90 != that.number90)
        return false;
    }

    boolean this_present_number91 = true;
    boolean that_present_number91 = true;
    if (this_present_number91 || that_present_number91) {
      if (!(this_present_number91 && that_present_number91))
        return false;
      if (this.number91 != that.number91)
        return false;
    }

    boolean this_present_number92 = true;
    boolean that_present_number92 = true;
    if (this_present_number92 || that_present_number92) {
      if (!(this_present_number92 && that_present_number92))
        return false;
      if (this.number92 != that.number92)
        return false;
    }

    boolean this_present_number93 = true;
    boolean that_present_number93 = true;
    if (this_present_number93 || that_present_number93) {
      if (!(this_present_number93 && that_present_number93))
        return false;
      if (this.number93 != that.number93)
        return false;
    }

    boolean this_present_number94 = true;
    boolean that_present_number94 = true;
    if (this_present_number94 || that_present_number94) {
      if (!(this_present_number94 && that_present_number94))
        return false;
      if (this.number94 != that.number94)
        return false;
    }

    boolean this_present_number95 = true;
    boolean that_present_number95 = true;
    if (this_present_number95 || that_present_number95) {
      if (!(this_present_number95 && that_present_number95))
        return false;
      if (this.number95 != that.number95)
        return false;
    }

    boolean this_present_number96 = true;
    boolean that_present_number96 = true;
    if (this_present_number96 || that_present_number96) {
      if (!(this_present_number96 && that_present_number96))
        return false;
      if (this.number96 != that.number96)
        return false;
    }

    boolean this_present_number97 = true;
    boolean that_present_number97 = true;
    if (this_present_number97 || that_present_number97) {
      if (!(this_present_number97 && that_present_number97))
        return false;
      if (this.number97 != that.number97)
        return false;
    }

    boolean this_present_number98 = true;
    boolean that_present_number98 = true;
    if (this_present_number98 || that_present_number98) {
      if (!(this_present_number98 && that_present_number98))
        return false;
      if (this.number98 != that.number98)
        return false;
    }

    boolean this_present_number99 = true;
    boolean that_present_number99 = true;
    if (this_present_number99 || that_present_number99) {
      if (!(this_present_number99 && that_present_number99))
        return false;
      if (this.number99 != that.number99)
        return false;
    }

    boolean this_present_number100 = true;
    boolean that_present_number100 = true;
    if (this_present_number100 || that_present_number100) {
      if (!(this_present_number100 && that_present_number100))
        return false;
      if (this.number100 != that.number100)
        return false;
    }

    boolean this_present_number101 = true;
    boolean that_present_number101 = true;
    if (this_present_number101 || that_present_number101) {
      if (!(this_present_number101 && that_present_number101))
        return false;
      if (this.number101 != that.number101)
        return false;
    }

    boolean this_present_number102 = true;
    boolean that_present_number102 = true;
    if (this_present_number102 || that_present_number102) {
      if (!(this_present_number102 && that_present_number102))
        return false;
      if (this.number102 != that.number102)
        return false;
    }

    boolean this_present_number103 = true;
    boolean that_present_number103 = true;
    if (this_present_number103 || that_present_number103) {
      if (!(this_present_number103 && that_present_number103))
        return false;
      if (this.number103 != that.number103)
        return false;
    }

    boolean this_present_number104 = true;
    boolean that_present_number104 = true;
    if (this_present_number104 || that_present_number104) {
      if (!(this_present_number104 && that_present_number104))
        return false;
      if (this.number104 != that.number104)
        return false;
    }

    boolean this_present_number105 = true;
    boolean that_present_number105 = true;
    if (this_present_number105 || that_present_number105) {
      if (!(this_present_number105 && that_present_number105))
        return false;
      if (this.number105 != that.number105)
        return false;
    }

    boolean this_present_number106 = true;
    boolean that_present_number106 = true;
    if (this_present_number106 || that_present_number106) {
      if (!(this_present_number106 && that_present_number106))
        return false;
      if (this.number106 != that.number106)
        return false;
    }

    boolean this_present_number107 = true;
    boolean that_present_number107 = true;
    if (this_present_number107 || that_present_number107) {
      if (!(this_present_number107 && that_present_number107))
        return false;
      if (this.number107 != that.number107)
        return false;
    }

    boolean this_present_number108 = true;
    boolean that_present_number108 = true;
    if (this_present_number108 || that_present_number108) {
      if (!(this_present_number108 && that_present_number108))
        return false;
      if (this.number108 != that.number108)
        return false;
    }

    boolean this_present_number109 = true;
    boolean that_present_number109 = true;
    if (this_present_number109 || that_present_number109) {
      if (!(this_present_number109 && that_present_number109))
        return false;
      if (this.number109 != that.number109)
        return false;
    }

    boolean this_present_number110 = true;
    boolean that_present_number110 = true;
    if (this_present_number110 || that_present_number110) {
      if (!(this_present_number110 && that_present_number110))
        return false;
      if (this.number110 != that.number110)
        return false;
    }

    boolean this_present_number111 = true;
    boolean that_present_number111 = true;
    if (this_present_number111 || that_present_number111) {
      if (!(this_present_number111 && that_present_number111))
        return false;
      if (this.number111 != that.number111)
        return false;
    }

    boolean this_present_number112 = true;
    boolean that_present_number112 = true;
    if (this_present_number112 || that_present_number112) {
      if (!(this_present_number112 && that_present_number112))
        return false;
      if (this.number112 != that.number112)
        return false;
    }

    boolean this_present_number113 = true;
    boolean that_present_number113 = true;
    if (this_present_number113 || that_present_number113) {
      if (!(this_present_number113 && that_present_number113))
        return false;
      if (this.number113 != that.number113)
        return false;
    }

    boolean this_present_number114 = true;
    boolean that_present_number114 = true;
    if (this_present_number114 || that_present_number114) {
      if (!(this_present_number114 && that_present_number114))
        return false;
      if (this.number114 != that.number114)
        return false;
    }

    boolean this_present_number115 = true;
    boolean that_present_number115 = true;
    if (this_present_number115 || that_present_number115) {
      if (!(this_present_number115 && that_present_number115))
        return false;
      if (this.number115 != that.number115)
        return false;
    }

    boolean this_present_number116 = true;
    boolean that_present_number116 = true;
    if (this_present_number116 || that_present_number116) {
      if (!(this_present_number116 && that_present_number116))
        return false;
      if (this.number116 != that.number116)
        return false;
    }

    boolean this_present_number117 = true;
    boolean that_present_number117 = true;
    if (this_present_number117 || that_present_number117) {
      if (!(this_present_number117 && that_present_number117))
        return false;
      if (this.number117 != that.number117)
        return false;
    }

    boolean this_present_number118 = true;
    boolean that_present_number118 = true;
    if (this_present_number118 || that_present_number118) {
      if (!(this_present_number118 && that_present_number118))
        return false;
      if (this.number118 != that.number118)
        return false;
    }

    boolean this_present_number119 = true;
    boolean that_present_number119 = true;
    if (this_present_number119 || that_present_number119) {
      if (!(this_present_number119 && that_present_number119))
        return false;
      if (this.number119 != that.number119)
        return false;
    }

    boolean this_present_number120 = true;
    boolean that_present_number120 = true;
    if (this_present_number120 || that_present_number120) {
      if (!(this_present_number120 && that_present_number120))
        return false;
      if (this.number120 != that.number120)
        return false;
    }

    boolean this_present_number121 = true;
    boolean that_present_number121 = true;
    if (this_present_number121 || that_present_number121) {
      if (!(this_present_number121 && that_present_number121))
        return false;
      if (this.number121 != that.number121)
        return false;
    }

    boolean this_present_number122 = true;
    boolean that_present_number122 = true;
    if (this_present_number122 || that_present_number122) {
      if (!(this_present_number122 && that_present_number122))
        return false;
      if (this.number122 != that.number122)
        return false;
    }

    boolean this_present_number123 = true;
    boolean that_present_number123 = true;
    if (this_present_number123 || that_present_number123) {
      if (!(this_present_number123 && that_present_number123))
        return false;
      if (this.number123 != that.number123)
        return false;
    }

    boolean this_present_number124 = true;
    boolean that_present_number124 = true;
    if (this_present_number124 || that_present_number124) {
      if (!(this_present_number124 && that_present_number124))
        return false;
      if (this.number124 != that.number124)
        return false;
    }

    boolean this_present_number125 = true;
    boolean that_present_number125 = true;
    if (this_present_number125 || that_present_number125) {
      if (!(this_present_number125 && that_present_number125))
        return false;
      if (this.number125 != that.number125)
        return false;
    }

    boolean this_present_number126 = true;
    boolean that_present_number126 = true;
    if (this_present_number126 || that_present_number126) {
      if (!(this_present_number126 && that_present_number126))
        return false;
      if (this.number126 != that.number126)
        return false;
    }

    boolean this_present_number127 = true;
    boolean that_present_number127 = true;
    if (this_present_number127 || that_present_number127) {
      if (!(this_present_number127 && that_present_number127))
        return false;
      if (this.number127 != that.number127)
        return false;
    }

    boolean this_present_number128 = true;
    boolean that_present_number128 = true;
    if (this_present_number128 || that_present_number128) {
      if (!(this_present_number128 && that_present_number128))
        return false;
      if (this.number128 != that.number128)
        return false;
    }

    boolean this_present_number129 = true;
    boolean that_present_number129 = true;
    if (this_present_number129 || that_present_number129) {
      if (!(this_present_number129 && that_present_number129))
        return false;
      if (this.number129 != that.number129)
        return false;
    }

    boolean this_present_number130 = true;
    boolean that_present_number130 = true;
    if (this_present_number130 || that_present_number130) {
      if (!(this_present_number130 && that_present_number130))
        return false;
      if (this.number130 != that.number130)
        return false;
    }

    boolean this_present_number131 = true;
    boolean that_present_number131 = true;
    if (this_present_number131 || that_present_number131) {
      if (!(this_present_number131 && that_present_number131))
        return false;
      if (this.number131 != that.number131)
        return false;
    }

    boolean this_present_number132 = true;
    boolean that_present_number132 = true;
    if (this_present_number132 || that_present_number132) {
      if (!(this_present_number132 && that_present_number132))
        return false;
      if (this.number132 != that.number132)
        return false;
    }

    boolean this_present_number133 = true;
    boolean that_present_number133 = true;
    if (this_present_number133 || that_present_number133) {
      if (!(this_present_number133 && that_present_number133))
        return false;
      if (this.number133 != that.number133)
        return false;
    }

    boolean this_present_number134 = true;
    boolean that_present_number134 = true;
    if (this_present_number134 || that_present_number134) {
      if (!(this_present_number134 && that_present_number134))
        return false;
      if (this.number134 != that.number134)
        return false;
    }

    boolean this_present_number135 = true;
    boolean that_present_number135 = true;
    if (this_present_number135 || that_present_number135) {
      if (!(this_present_number135 && that_present_number135))
        return false;
      if (this.number135 != that.number135)
        return false;
    }

    boolean this_present_number136 = true;
    boolean that_present_number136 = true;
    if (this_present_number136 || that_present_number136) {
      if (!(this_present_number136 && that_present_number136))
        return false;
      if (this.number136 != that.number136)
        return false;
    }

    boolean this_present_number137 = true;
    boolean that_present_number137 = true;
    if (this_present_number137 || that_present_number137) {
      if (!(this_present_number137 && that_present_number137))
        return false;
      if (this.number137 != that.number137)
        return false;
    }

    boolean this_present_number138 = true;
    boolean that_present_number138 = true;
    if (this_present_number138 || that_present_number138) {
      if (!(this_present_number138 && that_present_number138))
        return false;
      if (this.number138 != that.number138)
        return false;
    }

    boolean this_present_number139 = true;
    boolean that_present_number139 = true;
    if (this_present_number139 || that_present_number139) {
      if (!(this_present_number139 && that_present_number139))
        return false;
      if (this.number139 != that.number139)
        return false;
    }

    boolean this_present_number140 = true;
    boolean that_present_number140 = true;
    if (this_present_number140 || that_present_number140) {
      if (!(this_present_number140 && that_present_number140))
        return false;
      if (this.number140 != that.number140)
        return false;
    }

    boolean this_present_number141 = true;
    boolean that_present_number141 = true;
    if (this_present_number141 || that_present_number141) {
      if (!(this_present_number141 && that_present_number141))
        return false;
      if (this.number141 != that.number141)
        return false;
    }

    boolean this_present_number142 = true;
    boolean that_present_number142 = true;
    if (this_present_number142 || that_present_number142) {
      if (!(this_present_number142 && that_present_number142))
        return false;
      if (this.number142 != that.number142)
        return false;
    }

    boolean this_present_number143 = true;
    boolean that_present_number143 = true;
    if (this_present_number143 || that_present_number143) {
      if (!(this_present_number143 && that_present_number143))
        return false;
      if (this.number143 != that.number143)
        return false;
    }

    boolean this_present_number144 = true;
    boolean that_present_number144 = true;
    if (this_present_number144 || that_present_number144) {
      if (!(this_present_number144 && that_present_number144))
        return false;
      if (this.number144 != that.number144)
        return false;
    }

    boolean this_present_number145 = true;
    boolean that_present_number145 = true;
    if (this_present_number145 || that_present_number145) {
      if (!(this_present_number145 && that_present_number145))
        return false;
      if (this.number145 != that.number145)
        return false;
    }

    boolean this_present_number146 = true;
    boolean that_present_number146 = true;
    if (this_present_number146 || that_present_number146) {
      if (!(this_present_number146 && that_present_number146))
        return false;
      if (this.number146 != that.number146)
        return false;
    }

    boolean this_present_number147 = true;
    boolean that_present_number147 = true;
    if (this_present_number147 || that_present_number147) {
      if (!(this_present_number147 && that_present_number147))
        return false;
      if (this.number147 != that.number147)
        return false;
    }

    boolean this_present_number148 = true;
    boolean that_present_number148 = true;
    if (this_present_number148 || that_present_number148) {
      if (!(this_present_number148 && that_present_number148))
        return false;
      if (this.number148 != that.number148)
        return false;
    }

    boolean this_present_number149 = true;
    boolean that_present_number149 = true;
    if (this_present_number149 || that_present_number149) {
      if (!(this_present_number149 && that_present_number149))
        return false;
      if (this.number149 != that.number149)
        return false;
    }

    boolean this_present_number150 = true;
    boolean that_present_number150 = true;
    if (this_present_number150 || that_present_number150) {
      if (!(this_present_number150 && that_present_number150))
        return false;
      if (this.number150 != that.number150)
        return false;
    }

    boolean this_present_number151 = true;
    boolean that_present_number151 = true;
    if (this_present_number151 || that_present_number151) {
      if (!(this_present_number151 && that_present_number151))
        return false;
      if (this.number151 != that.number151)
        return false;
    }

    boolean this_present_number152 = true;
    boolean that_present_number152 = true;
    if (this_present_number152 || that_present_number152) {
      if (!(this_present_number152 && that_present_number152))
        return false;
      if (this.number152 != that.number152)
        return false;
    }

    boolean this_present_number153 = true;
    boolean that_present_number153 = true;
    if (this_present_number153 || that_present_number153) {
      if (!(this_present_number153 && that_present_number153))
        return false;
      if (this.number153 != that.number153)
        return false;
    }

    boolean this_present_number154 = true;
    boolean that_present_number154 = true;
    if (this_present_number154 || that_present_number154) {
      if (!(this_present_number154 && that_present_number154))
        return false;
      if (this.number154 != that.number154)
        return false;
    }

    boolean this_present_number155 = true;
    boolean that_present_number155 = true;
    if (this_present_number155 || that_present_number155) {
      if (!(this_present_number155 && that_present_number155))
        return false;
      if (this.number155 != that.number155)
        return false;
    }

    boolean this_present_number156 = true;
    boolean that_present_number156 = true;
    if (this_present_number156 || that_present_number156) {
      if (!(this_present_number156 && that_present_number156))
        return false;
      if (this.number156 != that.number156)
        return false;
    }

    boolean this_present_number157 = true;
    boolean that_present_number157 = true;
    if (this_present_number157 || that_present_number157) {
      if (!(this_present_number157 && that_present_number157))
        return false;
      if (this.number157 != that.number157)
        return false;
    }

    boolean this_present_number158 = true;
    boolean that_present_number158 = true;
    if (this_present_number158 || that_present_number158) {
      if (!(this_present_number158 && that_present_number158))
        return false;
      if (this.number158 != that.number158)
        return false;
    }

    boolean this_present_number159 = true;
    boolean that_present_number159 = true;
    if (this_present_number159 || that_present_number159) {
      if (!(this_present_number159 && that_present_number159))
        return false;
      if (this.number159 != that.number159)
        return false;
    }

    boolean this_present_number160 = true;
    boolean that_present_number160 = true;
    if (this_present_number160 || that_present_number160) {
      if (!(this_present_number160 && that_present_number160))
        return false;
      if (this.number160 != that.number160)
        return false;
    }

    boolean this_present_number161 = true;
    boolean that_present_number161 = true;
    if (this_present_number161 || that_present_number161) {
      if (!(this_present_number161 && that_present_number161))
        return false;
      if (this.number161 != that.number161)
        return false;
    }

    boolean this_present_number162 = true;
    boolean that_present_number162 = true;
    if (this_present_number162 || that_present_number162) {
      if (!(this_present_number162 && that_present_number162))
        return false;
      if (this.number162 != that.number162)
        return false;
    }

    boolean this_present_number163 = true;
    boolean that_present_number163 = true;
    if (this_present_number163 || that_present_number163) {
      if (!(this_present_number163 && that_present_number163))
        return false;
      if (this.number163 != that.number163)
        return false;
    }

    boolean this_present_number164 = true;
    boolean that_present_number164 = true;
    if (this_present_number164 || that_present_number164) {
      if (!(this_present_number164 && that_present_number164))
        return false;
      if (this.number164 != that.number164)
        return false;
    }

    boolean this_present_number165 = true;
    boolean that_present_number165 = true;
    if (this_present_number165 || that_present_number165) {
      if (!(this_present_number165 && that_present_number165))
        return false;
      if (this.number165 != that.number165)
        return false;
    }

    boolean this_present_number166 = true;
    boolean that_present_number166 = true;
    if (this_present_number166 || that_present_number166) {
      if (!(this_present_number166 && that_present_number166))
        return false;
      if (this.number166 != that.number166)
        return false;
    }

    boolean this_present_number167 = true;
    boolean that_present_number167 = true;
    if (this_present_number167 || that_present_number167) {
      if (!(this_present_number167 && that_present_number167))
        return false;
      if (this.number167 != that.number167)
        return false;
    }

    boolean this_present_number168 = true;
    boolean that_present_number168 = true;
    if (this_present_number168 || that_present_number168) {
      if (!(this_present_number168 && that_present_number168))
        return false;
      if (this.number168 != that.number168)
        return false;
    }

    boolean this_present_number169 = true;
    boolean that_present_number169 = true;
    if (this_present_number169 || that_present_number169) {
      if (!(this_present_number169 && that_present_number169))
        return false;
      if (this.number169 != that.number169)
        return false;
    }

    boolean this_present_number170 = true;
    boolean that_present_number170 = true;
    if (this_present_number170 || that_present_number170) {
      if (!(this_present_number170 && that_present_number170))
        return false;
      if (this.number170 != that.number170)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetString1()) ? 131071 : 524287);
    if (isSetString1())
      hashCode = hashCode * 8191 + string1.hashCode();

    hashCode = hashCode * 8191 + ((isSetString2()) ? 131071 : 524287);
    if (isSetString2())
      hashCode = hashCode * 8191 + string2.hashCode();

    hashCode = hashCode * 8191 + ((isSetString3()) ? 131071 : 524287);
    if (isSetString3())
      hashCode = hashCode * 8191 + string3.hashCode();

    hashCode = hashCode * 8191 + ((isSetString4()) ? 131071 : 524287);
    if (isSetString4())
      hashCode = hashCode * 8191 + string4.hashCode();

    hashCode = hashCode * 8191 + ((isSetString5()) ? 131071 : 524287);
    if (isSetString5())
      hashCode = hashCode * 8191 + string5.hashCode();

    hashCode = hashCode * 8191 + ((isSetString6()) ? 131071 : 524287);
    if (isSetString6())
      hashCode = hashCode * 8191 + string6.hashCode();

    hashCode = hashCode * 8191 + ((isSetString7()) ? 131071 : 524287);
    if (isSetString7())
      hashCode = hashCode * 8191 + string7.hashCode();

    hashCode = hashCode * 8191 + ((isSetString8()) ? 131071 : 524287);
    if (isSetString8())
      hashCode = hashCode * 8191 + string8.hashCode();

    hashCode = hashCode * 8191 + ((isSetString9()) ? 131071 : 524287);
    if (isSetString9())
      hashCode = hashCode * 8191 + string9.hashCode();

    hashCode = hashCode * 8191 + ((isSetString10()) ? 131071 : 524287);
    if (isSetString10())
      hashCode = hashCode * 8191 + string10.hashCode();

    hashCode = hashCode * 8191 + ((isSetString11()) ? 131071 : 524287);
    if (isSetString11())
      hashCode = hashCode * 8191 + string11.hashCode();

    hashCode = hashCode * 8191 + ((isSetString12()) ? 131071 : 524287);
    if (isSetString12())
      hashCode = hashCode * 8191 + string12.hashCode();

    hashCode = hashCode * 8191 + ((isSetString13()) ? 131071 : 524287);
    if (isSetString13())
      hashCode = hashCode * 8191 + string13.hashCode();

    hashCode = hashCode * 8191 + ((isSetString14()) ? 131071 : 524287);
    if (isSetString14())
      hashCode = hashCode * 8191 + string14.hashCode();

    hashCode = hashCode * 8191 + ((isSetString15()) ? 131071 : 524287);
    if (isSetString15())
      hashCode = hashCode * 8191 + string15.hashCode();

    hashCode = hashCode * 8191 + ((isSetString16()) ? 131071 : 524287);
    if (isSetString16())
      hashCode = hashCode * 8191 + string16.hashCode();

    hashCode = hashCode * 8191 + ((isSetString17()) ? 131071 : 524287);
    if (isSetString17())
      hashCode = hashCode * 8191 + string17.hashCode();

    hashCode = hashCode * 8191 + ((isSetString18()) ? 131071 : 524287);
    if (isSetString18())
      hashCode = hashCode * 8191 + string18.hashCode();

    hashCode = hashCode * 8191 + ((isSetString19()) ? 131071 : 524287);
    if (isSetString19())
      hashCode = hashCode * 8191 + string19.hashCode();

    hashCode = hashCode * 8191 + ((isSetString20()) ? 131071 : 524287);
    if (isSetString20())
      hashCode = hashCode * 8191 + string20.hashCode();

    hashCode = hashCode * 8191 + ((isSetString21()) ? 131071 : 524287);
    if (isSetString21())
      hashCode = hashCode * 8191 + string21.hashCode();

    hashCode = hashCode * 8191 + ((isSetString22()) ? 131071 : 524287);
    if (isSetString22())
      hashCode = hashCode * 8191 + string22.hashCode();

    hashCode = hashCode * 8191 + ((isSetString23()) ? 131071 : 524287);
    if (isSetString23())
      hashCode = hashCode * 8191 + string23.hashCode();

    hashCode = hashCode * 8191 + ((isSetString24()) ? 131071 : 524287);
    if (isSetString24())
      hashCode = hashCode * 8191 + string24.hashCode();

    hashCode = hashCode * 8191 + ((isSetString25()) ? 131071 : 524287);
    if (isSetString25())
      hashCode = hashCode * 8191 + string25.hashCode();

    hashCode = hashCode * 8191 + ((isSetString26()) ? 131071 : 524287);
    if (isSetString26())
      hashCode = hashCode * 8191 + string26.hashCode();

    hashCode = hashCode * 8191 + ((isSetString27()) ? 131071 : 524287);
    if (isSetString27())
      hashCode = hashCode * 8191 + string27.hashCode();

    hashCode = hashCode * 8191 + ((isSetString28()) ? 131071 : 524287);
    if (isSetString28())
      hashCode = hashCode * 8191 + string28.hashCode();

    hashCode = hashCode * 8191 + ((isSetString29()) ? 131071 : 524287);
    if (isSetString29())
      hashCode = hashCode * 8191 + string29.hashCode();

    hashCode = hashCode * 8191 + ((isSetString30()) ? 131071 : 524287);
    if (isSetString30())
      hashCode = hashCode * 8191 + string30.hashCode();

    hashCode = hashCode * 8191 + number1;

    hashCode = hashCode * 8191 + number2;

    hashCode = hashCode * 8191 + number3;

    hashCode = hashCode * 8191 + number4;

    hashCode = hashCode * 8191 + number5;

    hashCode = hashCode * 8191 + number6;

    hashCode = hashCode * 8191 + number7;

    hashCode = hashCode * 8191 + number8;

    hashCode = hashCode * 8191 + number9;

    hashCode = hashCode * 8191 + number10;

    hashCode = hashCode * 8191 + number11;

    hashCode = hashCode * 8191 + number12;

    hashCode = hashCode * 8191 + number13;

    hashCode = hashCode * 8191 + number14;

    hashCode = hashCode * 8191 + number15;

    hashCode = hashCode * 8191 + number16;

    hashCode = hashCode * 8191 + number17;

    hashCode = hashCode * 8191 + number18;

    hashCode = hashCode * 8191 + number19;

    hashCode = hashCode * 8191 + number20;

    hashCode = hashCode * 8191 + number21;

    hashCode = hashCode * 8191 + number22;

    hashCode = hashCode * 8191 + number23;

    hashCode = hashCode * 8191 + number24;

    hashCode = hashCode * 8191 + number25;

    hashCode = hashCode * 8191 + number26;

    hashCode = hashCode * 8191 + number27;

    hashCode = hashCode * 8191 + number28;

    hashCode = hashCode * 8191 + number29;

    hashCode = hashCode * 8191 + number30;

    hashCode = hashCode * 8191 + number31;

    hashCode = hashCode * 8191 + number32;

    hashCode = hashCode * 8191 + number33;

    hashCode = hashCode * 8191 + number34;

    hashCode = hashCode * 8191 + number35;

    hashCode = hashCode * 8191 + number36;

    hashCode = hashCode * 8191 + number37;

    hashCode = hashCode * 8191 + number38;

    hashCode = hashCode * 8191 + number39;

    hashCode = hashCode * 8191 + number40;

    hashCode = hashCode * 8191 + number41;

    hashCode = hashCode * 8191 + number42;

    hashCode = hashCode * 8191 + number43;

    hashCode = hashCode * 8191 + number44;

    hashCode = hashCode * 8191 + number45;

    hashCode = hashCode * 8191 + number46;

    hashCode = hashCode * 8191 + number47;

    hashCode = hashCode * 8191 + number48;

    hashCode = hashCode * 8191 + number49;

    hashCode = hashCode * 8191 + number50;

    hashCode = hashCode * 8191 + number51;

    hashCode = hashCode * 8191 + number52;

    hashCode = hashCode * 8191 + number53;

    hashCode = hashCode * 8191 + number54;

    hashCode = hashCode * 8191 + number55;

    hashCode = hashCode * 8191 + number56;

    hashCode = hashCode * 8191 + number57;

    hashCode = hashCode * 8191 + number58;

    hashCode = hashCode * 8191 + number59;

    hashCode = hashCode * 8191 + number60;

    hashCode = hashCode * 8191 + number61;

    hashCode = hashCode * 8191 + number62;

    hashCode = hashCode * 8191 + number63;

    hashCode = hashCode * 8191 + number64;

    hashCode = hashCode * 8191 + number65;

    hashCode = hashCode * 8191 + number66;

    hashCode = hashCode * 8191 + number67;

    hashCode = hashCode * 8191 + number68;

    hashCode = hashCode * 8191 + number69;

    hashCode = hashCode * 8191 + number70;

    hashCode = hashCode * 8191 + number71;

    hashCode = hashCode * 8191 + number72;

    hashCode = hashCode * 8191 + number73;

    hashCode = hashCode * 8191 + number74;

    hashCode = hashCode * 8191 + number75;

    hashCode = hashCode * 8191 + number76;

    hashCode = hashCode * 8191 + number77;

    hashCode = hashCode * 8191 + number78;

    hashCode = hashCode * 8191 + number79;

    hashCode = hashCode * 8191 + number80;

    hashCode = hashCode * 8191 + number81;

    hashCode = hashCode * 8191 + number82;

    hashCode = hashCode * 8191 + number83;

    hashCode = hashCode * 8191 + number84;

    hashCode = hashCode * 8191 + number85;

    hashCode = hashCode * 8191 + number86;

    hashCode = hashCode * 8191 + number87;

    hashCode = hashCode * 8191 + number88;

    hashCode = hashCode * 8191 + number89;

    hashCode = hashCode * 8191 + number90;

    hashCode = hashCode * 8191 + number91;

    hashCode = hashCode * 8191 + number92;

    hashCode = hashCode * 8191 + number93;

    hashCode = hashCode * 8191 + number94;

    hashCode = hashCode * 8191 + number95;

    hashCode = hashCode * 8191 + number96;

    hashCode = hashCode * 8191 + number97;

    hashCode = hashCode * 8191 + number98;

    hashCode = hashCode * 8191 + number99;

    hashCode = hashCode * 8191 + number100;

    hashCode = hashCode * 8191 + number101;

    hashCode = hashCode * 8191 + number102;

    hashCode = hashCode * 8191 + number103;

    hashCode = hashCode * 8191 + number104;

    hashCode = hashCode * 8191 + number105;

    hashCode = hashCode * 8191 + number106;

    hashCode = hashCode * 8191 + number107;

    hashCode = hashCode * 8191 + number108;

    hashCode = hashCode * 8191 + number109;

    hashCode = hashCode * 8191 + number110;

    hashCode = hashCode * 8191 + number111;

    hashCode = hashCode * 8191 + number112;

    hashCode = hashCode * 8191 + number113;

    hashCode = hashCode * 8191 + number114;

    hashCode = hashCode * 8191 + number115;

    hashCode = hashCode * 8191 + number116;

    hashCode = hashCode * 8191 + number117;

    hashCode = hashCode * 8191 + number118;

    hashCode = hashCode * 8191 + number119;

    hashCode = hashCode * 8191 + number120;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(number121);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(number122);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(number123);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(number124);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(number125);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(number126);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(number127);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(number128);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(number129);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(number130);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(number131);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(number132);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(number133);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(number134);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(number135);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(number136);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(number137);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(number138);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(number139);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(number140);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(number141);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(number142);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(number143);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(number144);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(number145);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(number146);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(number147);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(number148);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(number149);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(number150);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(number151);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(number152);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(number153);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(number154);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(number155);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(number156);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(number157);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(number158);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(number159);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(number160);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(number161);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(number162);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(number163);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(number164);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(number165);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(number166);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(number167);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(number168);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(number169);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(number170);

    return hashCode;
  }

  @Override
  public int compareTo(Data6Thrift other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetString1(), other.isSetString1());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetString1()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.string1, other.string1);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetString2(), other.isSetString2());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetString2()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.string2, other.string2);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetString3(), other.isSetString3());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetString3()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.string3, other.string3);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetString4(), other.isSetString4());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetString4()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.string4, other.string4);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetString5(), other.isSetString5());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetString5()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.string5, other.string5);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetString6(), other.isSetString6());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetString6()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.string6, other.string6);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetString7(), other.isSetString7());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetString7()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.string7, other.string7);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetString8(), other.isSetString8());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetString8()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.string8, other.string8);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetString9(), other.isSetString9());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetString9()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.string9, other.string9);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetString10(), other.isSetString10());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetString10()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.string10, other.string10);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetString11(), other.isSetString11());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetString11()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.string11, other.string11);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetString12(), other.isSetString12());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetString12()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.string12, other.string12);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetString13(), other.isSetString13());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetString13()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.string13, other.string13);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetString14(), other.isSetString14());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetString14()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.string14, other.string14);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetString15(), other.isSetString15());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetString15()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.string15, other.string15);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetString16(), other.isSetString16());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetString16()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.string16, other.string16);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetString17(), other.isSetString17());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetString17()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.string17, other.string17);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetString18(), other.isSetString18());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetString18()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.string18, other.string18);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetString19(), other.isSetString19());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetString19()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.string19, other.string19);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetString20(), other.isSetString20());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetString20()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.string20, other.string20);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetString21(), other.isSetString21());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetString21()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.string21, other.string21);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetString22(), other.isSetString22());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetString22()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.string22, other.string22);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetString23(), other.isSetString23());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetString23()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.string23, other.string23);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetString24(), other.isSetString24());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetString24()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.string24, other.string24);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetString25(), other.isSetString25());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetString25()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.string25, other.string25);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetString26(), other.isSetString26());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetString26()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.string26, other.string26);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetString27(), other.isSetString27());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetString27()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.string27, other.string27);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetString28(), other.isSetString28());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetString28()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.string28, other.string28);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetString29(), other.isSetString29());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetString29()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.string29, other.string29);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetString30(), other.isSetString30());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetString30()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.string30, other.string30);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber1(), other.isSetNumber1());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber1()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number1, other.number1);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber2(), other.isSetNumber2());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber2()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number2, other.number2);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber3(), other.isSetNumber3());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber3()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number3, other.number3);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber4(), other.isSetNumber4());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber4()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number4, other.number4);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber5(), other.isSetNumber5());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber5()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number5, other.number5);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber6(), other.isSetNumber6());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber6()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number6, other.number6);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber7(), other.isSetNumber7());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber7()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number7, other.number7);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber8(), other.isSetNumber8());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber8()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number8, other.number8);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber9(), other.isSetNumber9());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber9()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number9, other.number9);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber10(), other.isSetNumber10());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber10()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number10, other.number10);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber11(), other.isSetNumber11());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber11()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number11, other.number11);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber12(), other.isSetNumber12());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber12()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number12, other.number12);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber13(), other.isSetNumber13());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber13()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number13, other.number13);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber14(), other.isSetNumber14());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber14()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number14, other.number14);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber15(), other.isSetNumber15());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber15()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number15, other.number15);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber16(), other.isSetNumber16());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber16()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number16, other.number16);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber17(), other.isSetNumber17());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber17()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number17, other.number17);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber18(), other.isSetNumber18());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber18()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number18, other.number18);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber19(), other.isSetNumber19());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber19()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number19, other.number19);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber20(), other.isSetNumber20());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber20()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number20, other.number20);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber21(), other.isSetNumber21());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber21()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number21, other.number21);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber22(), other.isSetNumber22());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber22()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number22, other.number22);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber23(), other.isSetNumber23());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber23()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number23, other.number23);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber24(), other.isSetNumber24());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber24()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number24, other.number24);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber25(), other.isSetNumber25());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber25()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number25, other.number25);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber26(), other.isSetNumber26());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber26()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number26, other.number26);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber27(), other.isSetNumber27());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber27()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number27, other.number27);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber28(), other.isSetNumber28());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber28()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number28, other.number28);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber29(), other.isSetNumber29());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber29()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number29, other.number29);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber30(), other.isSetNumber30());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber30()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number30, other.number30);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber31(), other.isSetNumber31());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber31()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number31, other.number31);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber32(), other.isSetNumber32());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber32()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number32, other.number32);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber33(), other.isSetNumber33());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber33()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number33, other.number33);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber34(), other.isSetNumber34());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber34()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number34, other.number34);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber35(), other.isSetNumber35());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber35()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number35, other.number35);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber36(), other.isSetNumber36());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber36()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number36, other.number36);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber37(), other.isSetNumber37());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber37()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number37, other.number37);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber38(), other.isSetNumber38());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber38()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number38, other.number38);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber39(), other.isSetNumber39());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber39()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number39, other.number39);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber40(), other.isSetNumber40());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber40()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number40, other.number40);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber41(), other.isSetNumber41());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber41()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number41, other.number41);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber42(), other.isSetNumber42());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber42()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number42, other.number42);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber43(), other.isSetNumber43());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber43()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number43, other.number43);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber44(), other.isSetNumber44());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber44()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number44, other.number44);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber45(), other.isSetNumber45());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber45()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number45, other.number45);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber46(), other.isSetNumber46());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber46()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number46, other.number46);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber47(), other.isSetNumber47());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber47()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number47, other.number47);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber48(), other.isSetNumber48());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber48()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number48, other.number48);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber49(), other.isSetNumber49());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber49()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number49, other.number49);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber50(), other.isSetNumber50());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber50()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number50, other.number50);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber51(), other.isSetNumber51());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber51()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number51, other.number51);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber52(), other.isSetNumber52());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber52()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number52, other.number52);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber53(), other.isSetNumber53());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber53()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number53, other.number53);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber54(), other.isSetNumber54());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber54()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number54, other.number54);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber55(), other.isSetNumber55());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber55()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number55, other.number55);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber56(), other.isSetNumber56());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber56()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number56, other.number56);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber57(), other.isSetNumber57());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber57()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number57, other.number57);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber58(), other.isSetNumber58());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber58()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number58, other.number58);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber59(), other.isSetNumber59());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber59()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number59, other.number59);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber60(), other.isSetNumber60());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber60()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number60, other.number60);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber61(), other.isSetNumber61());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber61()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number61, other.number61);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber62(), other.isSetNumber62());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber62()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number62, other.number62);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber63(), other.isSetNumber63());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber63()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number63, other.number63);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber64(), other.isSetNumber64());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber64()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number64, other.number64);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber65(), other.isSetNumber65());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber65()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number65, other.number65);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber66(), other.isSetNumber66());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber66()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number66, other.number66);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber67(), other.isSetNumber67());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber67()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number67, other.number67);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber68(), other.isSetNumber68());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber68()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number68, other.number68);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber69(), other.isSetNumber69());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber69()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number69, other.number69);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber70(), other.isSetNumber70());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber70()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number70, other.number70);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber71(), other.isSetNumber71());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber71()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number71, other.number71);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber72(), other.isSetNumber72());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber72()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number72, other.number72);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber73(), other.isSetNumber73());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber73()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number73, other.number73);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber74(), other.isSetNumber74());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber74()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number74, other.number74);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber75(), other.isSetNumber75());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber75()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number75, other.number75);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber76(), other.isSetNumber76());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber76()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number76, other.number76);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber77(), other.isSetNumber77());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber77()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number77, other.number77);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber78(), other.isSetNumber78());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber78()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number78, other.number78);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber79(), other.isSetNumber79());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber79()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number79, other.number79);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber80(), other.isSetNumber80());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber80()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number80, other.number80);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber81(), other.isSetNumber81());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber81()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number81, other.number81);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber82(), other.isSetNumber82());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber82()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number82, other.number82);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber83(), other.isSetNumber83());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber83()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number83, other.number83);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber84(), other.isSetNumber84());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber84()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number84, other.number84);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber85(), other.isSetNumber85());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber85()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number85, other.number85);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber86(), other.isSetNumber86());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber86()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number86, other.number86);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber87(), other.isSetNumber87());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber87()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number87, other.number87);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber88(), other.isSetNumber88());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber88()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number88, other.number88);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber89(), other.isSetNumber89());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber89()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number89, other.number89);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber90(), other.isSetNumber90());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber90()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number90, other.number90);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber91(), other.isSetNumber91());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber91()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number91, other.number91);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber92(), other.isSetNumber92());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber92()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number92, other.number92);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber93(), other.isSetNumber93());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber93()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number93, other.number93);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber94(), other.isSetNumber94());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber94()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number94, other.number94);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber95(), other.isSetNumber95());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber95()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number95, other.number95);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber96(), other.isSetNumber96());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber96()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number96, other.number96);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber97(), other.isSetNumber97());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber97()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number97, other.number97);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber98(), other.isSetNumber98());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber98()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number98, other.number98);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber99(), other.isSetNumber99());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber99()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number99, other.number99);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber100(), other.isSetNumber100());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber100()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number100, other.number100);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber101(), other.isSetNumber101());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber101()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number101, other.number101);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber102(), other.isSetNumber102());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber102()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number102, other.number102);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber103(), other.isSetNumber103());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber103()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number103, other.number103);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber104(), other.isSetNumber104());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber104()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number104, other.number104);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber105(), other.isSetNumber105());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber105()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number105, other.number105);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber106(), other.isSetNumber106());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber106()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number106, other.number106);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber107(), other.isSetNumber107());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber107()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number107, other.number107);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber108(), other.isSetNumber108());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber108()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number108, other.number108);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber109(), other.isSetNumber109());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber109()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number109, other.number109);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber110(), other.isSetNumber110());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber110()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number110, other.number110);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber111(), other.isSetNumber111());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber111()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number111, other.number111);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber112(), other.isSetNumber112());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber112()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number112, other.number112);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber113(), other.isSetNumber113());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber113()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number113, other.number113);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber114(), other.isSetNumber114());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber114()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number114, other.number114);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber115(), other.isSetNumber115());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber115()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number115, other.number115);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber116(), other.isSetNumber116());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber116()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number116, other.number116);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber117(), other.isSetNumber117());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber117()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number117, other.number117);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber118(), other.isSetNumber118());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber118()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number118, other.number118);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber119(), other.isSetNumber119());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber119()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number119, other.number119);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber120(), other.isSetNumber120());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber120()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number120, other.number120);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber121(), other.isSetNumber121());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber121()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number121, other.number121);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber122(), other.isSetNumber122());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber122()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number122, other.number122);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber123(), other.isSetNumber123());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber123()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number123, other.number123);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber124(), other.isSetNumber124());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber124()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number124, other.number124);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber125(), other.isSetNumber125());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber125()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number125, other.number125);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber126(), other.isSetNumber126());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber126()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number126, other.number126);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber127(), other.isSetNumber127());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber127()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number127, other.number127);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber128(), other.isSetNumber128());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber128()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number128, other.number128);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber129(), other.isSetNumber129());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber129()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number129, other.number129);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber130(), other.isSetNumber130());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber130()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number130, other.number130);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber131(), other.isSetNumber131());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber131()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number131, other.number131);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber132(), other.isSetNumber132());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber132()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number132, other.number132);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber133(), other.isSetNumber133());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber133()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number133, other.number133);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber134(), other.isSetNumber134());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber134()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number134, other.number134);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber135(), other.isSetNumber135());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber135()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number135, other.number135);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber136(), other.isSetNumber136());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber136()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number136, other.number136);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber137(), other.isSetNumber137());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber137()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number137, other.number137);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber138(), other.isSetNumber138());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber138()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number138, other.number138);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber139(), other.isSetNumber139());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber139()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number139, other.number139);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber140(), other.isSetNumber140());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber140()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number140, other.number140);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber141(), other.isSetNumber141());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber141()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number141, other.number141);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber142(), other.isSetNumber142());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber142()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number142, other.number142);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber143(), other.isSetNumber143());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber143()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number143, other.number143);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber144(), other.isSetNumber144());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber144()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number144, other.number144);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber145(), other.isSetNumber145());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber145()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number145, other.number145);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber146(), other.isSetNumber146());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber146()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number146, other.number146);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber147(), other.isSetNumber147());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber147()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number147, other.number147);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber148(), other.isSetNumber148());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber148()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number148, other.number148);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber149(), other.isSetNumber149());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber149()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number149, other.number149);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber150(), other.isSetNumber150());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber150()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number150, other.number150);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber151(), other.isSetNumber151());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber151()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number151, other.number151);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber152(), other.isSetNumber152());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber152()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number152, other.number152);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber153(), other.isSetNumber153());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber153()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number153, other.number153);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber154(), other.isSetNumber154());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber154()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number154, other.number154);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber155(), other.isSetNumber155());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber155()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number155, other.number155);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber156(), other.isSetNumber156());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber156()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number156, other.number156);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber157(), other.isSetNumber157());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber157()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number157, other.number157);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber158(), other.isSetNumber158());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber158()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number158, other.number158);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber159(), other.isSetNumber159());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber159()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number159, other.number159);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber160(), other.isSetNumber160());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber160()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number160, other.number160);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber161(), other.isSetNumber161());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber161()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number161, other.number161);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber162(), other.isSetNumber162());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber162()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number162, other.number162);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber163(), other.isSetNumber163());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber163()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number163, other.number163);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber164(), other.isSetNumber164());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber164()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number164, other.number164);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber165(), other.isSetNumber165());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber165()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number165, other.number165);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber166(), other.isSetNumber166());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber166()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number166, other.number166);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber167(), other.isSetNumber167());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber167()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number167, other.number167);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber168(), other.isSetNumber168());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber168()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number168, other.number168);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber169(), other.isSetNumber169());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber169()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number169, other.number169);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNumber170(), other.isSetNumber170());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumber170()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.number170, other.number170);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("Data6Thrift(");
    boolean first = true;

    sb.append("string1:");
    if (this.string1 == null) {
      sb.append("null");
    } else {
      sb.append(this.string1);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("string2:");
    if (this.string2 == null) {
      sb.append("null");
    } else {
      sb.append(this.string2);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("string3:");
    if (this.string3 == null) {
      sb.append("null");
    } else {
      sb.append(this.string3);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("string4:");
    if (this.string4 == null) {
      sb.append("null");
    } else {
      sb.append(this.string4);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("string5:");
    if (this.string5 == null) {
      sb.append("null");
    } else {
      sb.append(this.string5);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("string6:");
    if (this.string6 == null) {
      sb.append("null");
    } else {
      sb.append(this.string6);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("string7:");
    if (this.string7 == null) {
      sb.append("null");
    } else {
      sb.append(this.string7);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("string8:");
    if (this.string8 == null) {
      sb.append("null");
    } else {
      sb.append(this.string8);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("string9:");
    if (this.string9 == null) {
      sb.append("null");
    } else {
      sb.append(this.string9);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("string10:");
    if (this.string10 == null) {
      sb.append("null");
    } else {
      sb.append(this.string10);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("string11:");
    if (this.string11 == null) {
      sb.append("null");
    } else {
      sb.append(this.string11);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("string12:");
    if (this.string12 == null) {
      sb.append("null");
    } else {
      sb.append(this.string12);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("string13:");
    if (this.string13 == null) {
      sb.append("null");
    } else {
      sb.append(this.string13);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("string14:");
    if (this.string14 == null) {
      sb.append("null");
    } else {
      sb.append(this.string14);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("string15:");
    if (this.string15 == null) {
      sb.append("null");
    } else {
      sb.append(this.string15);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("string16:");
    if (this.string16 == null) {
      sb.append("null");
    } else {
      sb.append(this.string16);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("string17:");
    if (this.string17 == null) {
      sb.append("null");
    } else {
      sb.append(this.string17);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("string18:");
    if (this.string18 == null) {
      sb.append("null");
    } else {
      sb.append(this.string18);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("string19:");
    if (this.string19 == null) {
      sb.append("null");
    } else {
      sb.append(this.string19);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("string20:");
    if (this.string20 == null) {
      sb.append("null");
    } else {
      sb.append(this.string20);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("string21:");
    if (this.string21 == null) {
      sb.append("null");
    } else {
      sb.append(this.string21);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("string22:");
    if (this.string22 == null) {
      sb.append("null");
    } else {
      sb.append(this.string22);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("string23:");
    if (this.string23 == null) {
      sb.append("null");
    } else {
      sb.append(this.string23);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("string24:");
    if (this.string24 == null) {
      sb.append("null");
    } else {
      sb.append(this.string24);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("string25:");
    if (this.string25 == null) {
      sb.append("null");
    } else {
      sb.append(this.string25);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("string26:");
    if (this.string26 == null) {
      sb.append("null");
    } else {
      sb.append(this.string26);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("string27:");
    if (this.string27 == null) {
      sb.append("null");
    } else {
      sb.append(this.string27);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("string28:");
    if (this.string28 == null) {
      sb.append("null");
    } else {
      sb.append(this.string28);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("string29:");
    if (this.string29 == null) {
      sb.append("null");
    } else {
      sb.append(this.string29);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("string30:");
    if (this.string30 == null) {
      sb.append("null");
    } else {
      sb.append(this.string30);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("number1:");
    sb.append(this.number1);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number2:");
    sb.append(this.number2);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number3:");
    sb.append(this.number3);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number4:");
    sb.append(this.number4);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number5:");
    sb.append(this.number5);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number6:");
    sb.append(this.number6);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number7:");
    sb.append(this.number7);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number8:");
    sb.append(this.number8);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number9:");
    sb.append(this.number9);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number10:");
    sb.append(this.number10);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number11:");
    sb.append(this.number11);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number12:");
    sb.append(this.number12);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number13:");
    sb.append(this.number13);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number14:");
    sb.append(this.number14);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number15:");
    sb.append(this.number15);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number16:");
    sb.append(this.number16);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number17:");
    sb.append(this.number17);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number18:");
    sb.append(this.number18);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number19:");
    sb.append(this.number19);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number20:");
    sb.append(this.number20);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number21:");
    sb.append(this.number21);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number22:");
    sb.append(this.number22);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number23:");
    sb.append(this.number23);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number24:");
    sb.append(this.number24);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number25:");
    sb.append(this.number25);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number26:");
    sb.append(this.number26);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number27:");
    sb.append(this.number27);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number28:");
    sb.append(this.number28);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number29:");
    sb.append(this.number29);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number30:");
    sb.append(this.number30);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number31:");
    sb.append(this.number31);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number32:");
    sb.append(this.number32);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number33:");
    sb.append(this.number33);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number34:");
    sb.append(this.number34);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number35:");
    sb.append(this.number35);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number36:");
    sb.append(this.number36);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number37:");
    sb.append(this.number37);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number38:");
    sb.append(this.number38);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number39:");
    sb.append(this.number39);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number40:");
    sb.append(this.number40);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number41:");
    sb.append(this.number41);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number42:");
    sb.append(this.number42);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number43:");
    sb.append(this.number43);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number44:");
    sb.append(this.number44);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number45:");
    sb.append(this.number45);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number46:");
    sb.append(this.number46);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number47:");
    sb.append(this.number47);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number48:");
    sb.append(this.number48);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number49:");
    sb.append(this.number49);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number50:");
    sb.append(this.number50);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number51:");
    sb.append(this.number51);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number52:");
    sb.append(this.number52);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number53:");
    sb.append(this.number53);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number54:");
    sb.append(this.number54);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number55:");
    sb.append(this.number55);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number56:");
    sb.append(this.number56);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number57:");
    sb.append(this.number57);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number58:");
    sb.append(this.number58);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number59:");
    sb.append(this.number59);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number60:");
    sb.append(this.number60);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number61:");
    sb.append(this.number61);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number62:");
    sb.append(this.number62);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number63:");
    sb.append(this.number63);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number64:");
    sb.append(this.number64);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number65:");
    sb.append(this.number65);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number66:");
    sb.append(this.number66);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number67:");
    sb.append(this.number67);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number68:");
    sb.append(this.number68);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number69:");
    sb.append(this.number69);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number70:");
    sb.append(this.number70);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number71:");
    sb.append(this.number71);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number72:");
    sb.append(this.number72);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number73:");
    sb.append(this.number73);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number74:");
    sb.append(this.number74);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number75:");
    sb.append(this.number75);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number76:");
    sb.append(this.number76);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number77:");
    sb.append(this.number77);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number78:");
    sb.append(this.number78);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number79:");
    sb.append(this.number79);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number80:");
    sb.append(this.number80);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number81:");
    sb.append(this.number81);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number82:");
    sb.append(this.number82);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number83:");
    sb.append(this.number83);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number84:");
    sb.append(this.number84);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number85:");
    sb.append(this.number85);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number86:");
    sb.append(this.number86);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number87:");
    sb.append(this.number87);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number88:");
    sb.append(this.number88);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number89:");
    sb.append(this.number89);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number90:");
    sb.append(this.number90);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number91:");
    sb.append(this.number91);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number92:");
    sb.append(this.number92);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number93:");
    sb.append(this.number93);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number94:");
    sb.append(this.number94);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number95:");
    sb.append(this.number95);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number96:");
    sb.append(this.number96);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number97:");
    sb.append(this.number97);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number98:");
    sb.append(this.number98);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number99:");
    sb.append(this.number99);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number100:");
    sb.append(this.number100);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number101:");
    sb.append(this.number101);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number102:");
    sb.append(this.number102);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number103:");
    sb.append(this.number103);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number104:");
    sb.append(this.number104);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number105:");
    sb.append(this.number105);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number106:");
    sb.append(this.number106);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number107:");
    sb.append(this.number107);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number108:");
    sb.append(this.number108);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number109:");
    sb.append(this.number109);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number110:");
    sb.append(this.number110);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number111:");
    sb.append(this.number111);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number112:");
    sb.append(this.number112);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number113:");
    sb.append(this.number113);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number114:");
    sb.append(this.number114);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number115:");
    sb.append(this.number115);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number116:");
    sb.append(this.number116);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number117:");
    sb.append(this.number117);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number118:");
    sb.append(this.number118);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number119:");
    sb.append(this.number119);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number120:");
    sb.append(this.number120);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number121:");
    sb.append(this.number121);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number122:");
    sb.append(this.number122);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number123:");
    sb.append(this.number123);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number124:");
    sb.append(this.number124);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number125:");
    sb.append(this.number125);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number126:");
    sb.append(this.number126);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number127:");
    sb.append(this.number127);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number128:");
    sb.append(this.number128);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number129:");
    sb.append(this.number129);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number130:");
    sb.append(this.number130);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number131:");
    sb.append(this.number131);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number132:");
    sb.append(this.number132);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number133:");
    sb.append(this.number133);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number134:");
    sb.append(this.number134);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number135:");
    sb.append(this.number135);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number136:");
    sb.append(this.number136);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number137:");
    sb.append(this.number137);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number138:");
    sb.append(this.number138);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number139:");
    sb.append(this.number139);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number140:");
    sb.append(this.number140);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number141:");
    sb.append(this.number141);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number142:");
    sb.append(this.number142);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number143:");
    sb.append(this.number143);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number144:");
    sb.append(this.number144);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number145:");
    sb.append(this.number145);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number146:");
    sb.append(this.number146);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number147:");
    sb.append(this.number147);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number148:");
    sb.append(this.number148);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number149:");
    sb.append(this.number149);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number150:");
    sb.append(this.number150);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number151:");
    sb.append(this.number151);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number152:");
    sb.append(this.number152);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number153:");
    sb.append(this.number153);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number154:");
    sb.append(this.number154);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number155:");
    sb.append(this.number155);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number156:");
    sb.append(this.number156);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number157:");
    sb.append(this.number157);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number158:");
    sb.append(this.number158);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number159:");
    sb.append(this.number159);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number160:");
    sb.append(this.number160);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number161:");
    sb.append(this.number161);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number162:");
    sb.append(this.number162);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number163:");
    sb.append(this.number163);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number164:");
    sb.append(this.number164);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number165:");
    sb.append(this.number165);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number166:");
    sb.append(this.number166);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number167:");
    sb.append(this.number167);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number168:");
    sb.append(this.number168);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number169:");
    sb.append(this.number169);
    first = false;
    if (!first) sb.append(", ");
    sb.append("number170:");
    sb.append(this.number170);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bit_vector = new java.util.BitSet(1);
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class Data6ThriftStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public Data6ThriftStandardScheme getScheme() {
      return new Data6ThriftStandardScheme();
    }
  }

  private static class Data6ThriftStandardScheme extends org.apache.thrift.scheme.StandardScheme<Data6Thrift> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, Data6Thrift struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // STRING1
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.string1 = iprot.readString();
              struct.setString1IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // STRING2
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.string2 = iprot.readString();
              struct.setString2IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // STRING3
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.string3 = iprot.readString();
              struct.setString3IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // STRING4
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.string4 = iprot.readString();
              struct.setString4IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // STRING5
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.string5 = iprot.readString();
              struct.setString5IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // STRING6
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.string6 = iprot.readString();
              struct.setString6IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // STRING7
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.string7 = iprot.readString();
              struct.setString7IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // STRING8
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.string8 = iprot.readString();
              struct.setString8IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // STRING9
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.string9 = iprot.readString();
              struct.setString9IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // STRING10
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.string10 = iprot.readString();
              struct.setString10IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // STRING11
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.string11 = iprot.readString();
              struct.setString11IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // STRING12
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.string12 = iprot.readString();
              struct.setString12IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // STRING13
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.string13 = iprot.readString();
              struct.setString13IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // STRING14
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.string14 = iprot.readString();
              struct.setString14IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // STRING15
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.string15 = iprot.readString();
              struct.setString15IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // STRING16
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.string16 = iprot.readString();
              struct.setString16IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // STRING17
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.string17 = iprot.readString();
              struct.setString17IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // STRING18
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.string18 = iprot.readString();
              struct.setString18IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // STRING19
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.string19 = iprot.readString();
              struct.setString19IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // STRING20
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.string20 = iprot.readString();
              struct.setString20IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // STRING21
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.string21 = iprot.readString();
              struct.setString21IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // STRING22
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.string22 = iprot.readString();
              struct.setString22IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // STRING23
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.string23 = iprot.readString();
              struct.setString23IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // STRING24
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.string24 = iprot.readString();
              struct.setString24IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // STRING25
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.string25 = iprot.readString();
              struct.setString25IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // STRING26
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.string26 = iprot.readString();
              struct.setString26IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 27: // STRING27
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.string27 = iprot.readString();
              struct.setString27IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 28: // STRING28
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.string28 = iprot.readString();
              struct.setString28IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 29: // STRING29
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.string29 = iprot.readString();
              struct.setString29IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 30: // STRING30
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.string30 = iprot.readString();
              struct.setString30IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 31: // NUMBER1
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number1 = iprot.readI32();
              struct.setNumber1IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 32: // NUMBER2
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number2 = iprot.readI32();
              struct.setNumber2IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 33: // NUMBER3
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number3 = iprot.readI32();
              struct.setNumber3IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 34: // NUMBER4
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number4 = iprot.readI32();
              struct.setNumber4IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 35: // NUMBER5
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number5 = iprot.readI32();
              struct.setNumber5IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 36: // NUMBER6
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number6 = iprot.readI32();
              struct.setNumber6IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 37: // NUMBER7
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number7 = iprot.readI32();
              struct.setNumber7IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 38: // NUMBER8
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number8 = iprot.readI32();
              struct.setNumber8IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 39: // NUMBER9
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number9 = iprot.readI32();
              struct.setNumber9IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 40: // NUMBER10
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number10 = iprot.readI32();
              struct.setNumber10IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 41: // NUMBER11
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number11 = iprot.readI32();
              struct.setNumber11IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 42: // NUMBER12
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number12 = iprot.readI32();
              struct.setNumber12IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 43: // NUMBER13
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number13 = iprot.readI32();
              struct.setNumber13IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 44: // NUMBER14
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number14 = iprot.readI32();
              struct.setNumber14IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 45: // NUMBER15
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number15 = iprot.readI32();
              struct.setNumber15IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 46: // NUMBER16
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number16 = iprot.readI32();
              struct.setNumber16IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 47: // NUMBER17
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number17 = iprot.readI32();
              struct.setNumber17IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 48: // NUMBER18
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number18 = iprot.readI32();
              struct.setNumber18IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 49: // NUMBER19
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number19 = iprot.readI32();
              struct.setNumber19IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 50: // NUMBER20
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number20 = iprot.readI32();
              struct.setNumber20IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 51: // NUMBER21
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number21 = iprot.readI32();
              struct.setNumber21IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 52: // NUMBER22
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number22 = iprot.readI32();
              struct.setNumber22IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 53: // NUMBER23
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number23 = iprot.readI32();
              struct.setNumber23IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 54: // NUMBER24
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number24 = iprot.readI32();
              struct.setNumber24IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 55: // NUMBER25
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number25 = iprot.readI32();
              struct.setNumber25IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 56: // NUMBER26
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number26 = iprot.readI32();
              struct.setNumber26IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 57: // NUMBER27
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number27 = iprot.readI32();
              struct.setNumber27IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 58: // NUMBER28
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number28 = iprot.readI32();
              struct.setNumber28IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 59: // NUMBER29
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number29 = iprot.readI32();
              struct.setNumber29IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 60: // NUMBER30
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number30 = iprot.readI32();
              struct.setNumber30IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 61: // NUMBER31
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number31 = iprot.readI32();
              struct.setNumber31IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 62: // NUMBER32
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number32 = iprot.readI32();
              struct.setNumber32IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 63: // NUMBER33
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number33 = iprot.readI32();
              struct.setNumber33IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 64: // NUMBER34
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number34 = iprot.readI32();
              struct.setNumber34IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 65: // NUMBER35
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number35 = iprot.readI32();
              struct.setNumber35IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 66: // NUMBER36
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number36 = iprot.readI32();
              struct.setNumber36IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 67: // NUMBER37
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number37 = iprot.readI32();
              struct.setNumber37IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 68: // NUMBER38
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number38 = iprot.readI32();
              struct.setNumber38IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 69: // NUMBER39
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number39 = iprot.readI32();
              struct.setNumber39IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 70: // NUMBER40
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number40 = iprot.readI32();
              struct.setNumber40IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 71: // NUMBER41
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number41 = iprot.readI32();
              struct.setNumber41IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 72: // NUMBER42
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number42 = iprot.readI32();
              struct.setNumber42IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 73: // NUMBER43
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number43 = iprot.readI32();
              struct.setNumber43IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 74: // NUMBER44
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number44 = iprot.readI32();
              struct.setNumber44IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 75: // NUMBER45
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number45 = iprot.readI32();
              struct.setNumber45IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 76: // NUMBER46
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number46 = iprot.readI32();
              struct.setNumber46IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 77: // NUMBER47
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number47 = iprot.readI32();
              struct.setNumber47IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 78: // NUMBER48
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number48 = iprot.readI32();
              struct.setNumber48IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 79: // NUMBER49
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number49 = iprot.readI32();
              struct.setNumber49IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 80: // NUMBER50
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number50 = iprot.readI32();
              struct.setNumber50IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 81: // NUMBER51
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number51 = iprot.readI32();
              struct.setNumber51IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 82: // NUMBER52
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number52 = iprot.readI32();
              struct.setNumber52IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 83: // NUMBER53
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number53 = iprot.readI32();
              struct.setNumber53IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 84: // NUMBER54
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number54 = iprot.readI32();
              struct.setNumber54IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 85: // NUMBER55
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number55 = iprot.readI32();
              struct.setNumber55IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 86: // NUMBER56
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number56 = iprot.readI32();
              struct.setNumber56IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 87: // NUMBER57
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number57 = iprot.readI32();
              struct.setNumber57IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 88: // NUMBER58
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number58 = iprot.readI32();
              struct.setNumber58IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 89: // NUMBER59
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number59 = iprot.readI32();
              struct.setNumber59IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 90: // NUMBER60
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number60 = iprot.readI32();
              struct.setNumber60IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 91: // NUMBER61
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number61 = iprot.readI32();
              struct.setNumber61IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 92: // NUMBER62
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number62 = iprot.readI32();
              struct.setNumber62IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 93: // NUMBER63
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number63 = iprot.readI32();
              struct.setNumber63IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 94: // NUMBER64
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number64 = iprot.readI32();
              struct.setNumber64IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 95: // NUMBER65
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number65 = iprot.readI32();
              struct.setNumber65IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 96: // NUMBER66
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number66 = iprot.readI32();
              struct.setNumber66IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 97: // NUMBER67
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number67 = iprot.readI32();
              struct.setNumber67IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 98: // NUMBER68
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number68 = iprot.readI32();
              struct.setNumber68IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 99: // NUMBER69
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number69 = iprot.readI32();
              struct.setNumber69IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 100: // NUMBER70
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number70 = iprot.readI32();
              struct.setNumber70IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 101: // NUMBER71
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number71 = iprot.readI32();
              struct.setNumber71IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 102: // NUMBER72
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number72 = iprot.readI32();
              struct.setNumber72IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 103: // NUMBER73
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number73 = iprot.readI32();
              struct.setNumber73IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 104: // NUMBER74
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number74 = iprot.readI32();
              struct.setNumber74IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 105: // NUMBER75
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number75 = iprot.readI32();
              struct.setNumber75IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 106: // NUMBER76
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number76 = iprot.readI32();
              struct.setNumber76IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 107: // NUMBER77
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number77 = iprot.readI32();
              struct.setNumber77IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 108: // NUMBER78
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number78 = iprot.readI32();
              struct.setNumber78IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 109: // NUMBER79
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number79 = iprot.readI32();
              struct.setNumber79IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 110: // NUMBER80
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number80 = iprot.readI32();
              struct.setNumber80IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 111: // NUMBER81
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number81 = iprot.readI32();
              struct.setNumber81IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 112: // NUMBER82
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number82 = iprot.readI32();
              struct.setNumber82IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 113: // NUMBER83
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number83 = iprot.readI32();
              struct.setNumber83IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 114: // NUMBER84
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number84 = iprot.readI32();
              struct.setNumber84IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 115: // NUMBER85
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number85 = iprot.readI32();
              struct.setNumber85IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 116: // NUMBER86
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number86 = iprot.readI32();
              struct.setNumber86IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 117: // NUMBER87
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number87 = iprot.readI32();
              struct.setNumber87IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 118: // NUMBER88
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number88 = iprot.readI32();
              struct.setNumber88IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 119: // NUMBER89
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number89 = iprot.readI32();
              struct.setNumber89IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 120: // NUMBER90
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number90 = iprot.readI32();
              struct.setNumber90IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 121: // NUMBER91
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number91 = iprot.readI32();
              struct.setNumber91IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 122: // NUMBER92
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number92 = iprot.readI32();
              struct.setNumber92IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 123: // NUMBER93
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number93 = iprot.readI32();
              struct.setNumber93IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 124: // NUMBER94
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number94 = iprot.readI32();
              struct.setNumber94IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 125: // NUMBER95
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number95 = iprot.readI32();
              struct.setNumber95IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 126: // NUMBER96
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number96 = iprot.readI32();
              struct.setNumber96IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 127: // NUMBER97
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number97 = iprot.readI32();
              struct.setNumber97IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 128: // NUMBER98
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number98 = iprot.readI32();
              struct.setNumber98IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 129: // NUMBER99
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number99 = iprot.readI32();
              struct.setNumber99IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 130: // NUMBER100
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number100 = iprot.readI32();
              struct.setNumber100IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 131: // NUMBER101
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number101 = iprot.readI32();
              struct.setNumber101IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 132: // NUMBER102
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number102 = iprot.readI32();
              struct.setNumber102IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 133: // NUMBER103
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number103 = iprot.readI32();
              struct.setNumber103IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 134: // NUMBER104
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number104 = iprot.readI32();
              struct.setNumber104IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 135: // NUMBER105
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number105 = iprot.readI32();
              struct.setNumber105IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 136: // NUMBER106
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number106 = iprot.readI32();
              struct.setNumber106IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 137: // NUMBER107
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number107 = iprot.readI32();
              struct.setNumber107IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 138: // NUMBER108
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number108 = iprot.readI32();
              struct.setNumber108IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 139: // NUMBER109
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number109 = iprot.readI32();
              struct.setNumber109IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 140: // NUMBER110
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number110 = iprot.readI32();
              struct.setNumber110IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 141: // NUMBER111
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number111 = iprot.readI32();
              struct.setNumber111IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 142: // NUMBER112
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number112 = iprot.readI32();
              struct.setNumber112IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 143: // NUMBER113
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number113 = iprot.readI32();
              struct.setNumber113IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 144: // NUMBER114
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number114 = iprot.readI32();
              struct.setNumber114IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 145: // NUMBER115
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number115 = iprot.readI32();
              struct.setNumber115IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 146: // NUMBER116
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number116 = iprot.readI32();
              struct.setNumber116IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 147: // NUMBER117
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number117 = iprot.readI32();
              struct.setNumber117IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 148: // NUMBER118
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number118 = iprot.readI32();
              struct.setNumber118IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 149: // NUMBER119
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number119 = iprot.readI32();
              struct.setNumber119IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 150: // NUMBER120
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.number120 = iprot.readI32();
              struct.setNumber120IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 151: // NUMBER121
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.number121 = iprot.readDouble();
              struct.setNumber121IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 152: // NUMBER122
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.number122 = iprot.readDouble();
              struct.setNumber122IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 153: // NUMBER123
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.number123 = iprot.readDouble();
              struct.setNumber123IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 154: // NUMBER124
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.number124 = iprot.readDouble();
              struct.setNumber124IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 155: // NUMBER125
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.number125 = iprot.readDouble();
              struct.setNumber125IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 156: // NUMBER126
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.number126 = iprot.readDouble();
              struct.setNumber126IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 157: // NUMBER127
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.number127 = iprot.readDouble();
              struct.setNumber127IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 158: // NUMBER128
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.number128 = iprot.readDouble();
              struct.setNumber128IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 159: // NUMBER129
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.number129 = iprot.readDouble();
              struct.setNumber129IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 160: // NUMBER130
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.number130 = iprot.readDouble();
              struct.setNumber130IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 161: // NUMBER131
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.number131 = iprot.readDouble();
              struct.setNumber131IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 162: // NUMBER132
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.number132 = iprot.readDouble();
              struct.setNumber132IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 163: // NUMBER133
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.number133 = iprot.readDouble();
              struct.setNumber133IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 164: // NUMBER134
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.number134 = iprot.readDouble();
              struct.setNumber134IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 165: // NUMBER135
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.number135 = iprot.readDouble();
              struct.setNumber135IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 166: // NUMBER136
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.number136 = iprot.readDouble();
              struct.setNumber136IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 167: // NUMBER137
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.number137 = iprot.readDouble();
              struct.setNumber137IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 168: // NUMBER138
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.number138 = iprot.readDouble();
              struct.setNumber138IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 169: // NUMBER139
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.number139 = iprot.readDouble();
              struct.setNumber139IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 170: // NUMBER140
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.number140 = iprot.readDouble();
              struct.setNumber140IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 171: // NUMBER141
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.number141 = iprot.readDouble();
              struct.setNumber141IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 172: // NUMBER142
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.number142 = iprot.readDouble();
              struct.setNumber142IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 173: // NUMBER143
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.number143 = iprot.readDouble();
              struct.setNumber143IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 174: // NUMBER144
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.number144 = iprot.readDouble();
              struct.setNumber144IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 175: // NUMBER145
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.number145 = iprot.readDouble();
              struct.setNumber145IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 176: // NUMBER146
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.number146 = iprot.readDouble();
              struct.setNumber146IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 177: // NUMBER147
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.number147 = iprot.readDouble();
              struct.setNumber147IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 178: // NUMBER148
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.number148 = iprot.readDouble();
              struct.setNumber148IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 179: // NUMBER149
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.number149 = iprot.readDouble();
              struct.setNumber149IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 180: // NUMBER150
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.number150 = iprot.readDouble();
              struct.setNumber150IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 181: // NUMBER151
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.number151 = iprot.readDouble();
              struct.setNumber151IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 182: // NUMBER152
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.number152 = iprot.readDouble();
              struct.setNumber152IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 183: // NUMBER153
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.number153 = iprot.readDouble();
              struct.setNumber153IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 184: // NUMBER154
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.number154 = iprot.readDouble();
              struct.setNumber154IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 185: // NUMBER155
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.number155 = iprot.readDouble();
              struct.setNumber155IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 186: // NUMBER156
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.number156 = iprot.readDouble();
              struct.setNumber156IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 187: // NUMBER157
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.number157 = iprot.readDouble();
              struct.setNumber157IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 188: // NUMBER158
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.number158 = iprot.readDouble();
              struct.setNumber158IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 189: // NUMBER159
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.number159 = iprot.readDouble();
              struct.setNumber159IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 190: // NUMBER160
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.number160 = iprot.readDouble();
              struct.setNumber160IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 191: // NUMBER161
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.number161 = iprot.readDouble();
              struct.setNumber161IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 192: // NUMBER162
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.number162 = iprot.readDouble();
              struct.setNumber162IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 193: // NUMBER163
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.number163 = iprot.readDouble();
              struct.setNumber163IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 194: // NUMBER164
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.number164 = iprot.readDouble();
              struct.setNumber164IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 195: // NUMBER165
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.number165 = iprot.readDouble();
              struct.setNumber165IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 196: // NUMBER166
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.number166 = iprot.readDouble();
              struct.setNumber166IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 197: // NUMBER167
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.number167 = iprot.readDouble();
              struct.setNumber167IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 198: // NUMBER168
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.number168 = iprot.readDouble();
              struct.setNumber168IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 199: // NUMBER169
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.number169 = iprot.readDouble();
              struct.setNumber169IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 200: // NUMBER170
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.number170 = iprot.readDouble();
              struct.setNumber170IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, Data6Thrift struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.string1 != null) {
        oprot.writeFieldBegin(STRING1_FIELD_DESC);
        oprot.writeString(struct.string1);
        oprot.writeFieldEnd();
      }
      if (struct.string2 != null) {
        oprot.writeFieldBegin(STRING2_FIELD_DESC);
        oprot.writeString(struct.string2);
        oprot.writeFieldEnd();
      }
      if (struct.string3 != null) {
        oprot.writeFieldBegin(STRING3_FIELD_DESC);
        oprot.writeString(struct.string3);
        oprot.writeFieldEnd();
      }
      if (struct.string4 != null) {
        oprot.writeFieldBegin(STRING4_FIELD_DESC);
        oprot.writeString(struct.string4);
        oprot.writeFieldEnd();
      }
      if (struct.string5 != null) {
        oprot.writeFieldBegin(STRING5_FIELD_DESC);
        oprot.writeString(struct.string5);
        oprot.writeFieldEnd();
      }
      if (struct.string6 != null) {
        oprot.writeFieldBegin(STRING6_FIELD_DESC);
        oprot.writeString(struct.string6);
        oprot.writeFieldEnd();
      }
      if (struct.string7 != null) {
        oprot.writeFieldBegin(STRING7_FIELD_DESC);
        oprot.writeString(struct.string7);
        oprot.writeFieldEnd();
      }
      if (struct.string8 != null) {
        oprot.writeFieldBegin(STRING8_FIELD_DESC);
        oprot.writeString(struct.string8);
        oprot.writeFieldEnd();
      }
      if (struct.string9 != null) {
        oprot.writeFieldBegin(STRING9_FIELD_DESC);
        oprot.writeString(struct.string9);
        oprot.writeFieldEnd();
      }
      if (struct.string10 != null) {
        oprot.writeFieldBegin(STRING10_FIELD_DESC);
        oprot.writeString(struct.string10);
        oprot.writeFieldEnd();
      }
      if (struct.string11 != null) {
        oprot.writeFieldBegin(STRING11_FIELD_DESC);
        oprot.writeString(struct.string11);
        oprot.writeFieldEnd();
      }
      if (struct.string12 != null) {
        oprot.writeFieldBegin(STRING12_FIELD_DESC);
        oprot.writeString(struct.string12);
        oprot.writeFieldEnd();
      }
      if (struct.string13 != null) {
        oprot.writeFieldBegin(STRING13_FIELD_DESC);
        oprot.writeString(struct.string13);
        oprot.writeFieldEnd();
      }
      if (struct.string14 != null) {
        oprot.writeFieldBegin(STRING14_FIELD_DESC);
        oprot.writeString(struct.string14);
        oprot.writeFieldEnd();
      }
      if (struct.string15 != null) {
        oprot.writeFieldBegin(STRING15_FIELD_DESC);
        oprot.writeString(struct.string15);
        oprot.writeFieldEnd();
      }
      if (struct.string16 != null) {
        oprot.writeFieldBegin(STRING16_FIELD_DESC);
        oprot.writeString(struct.string16);
        oprot.writeFieldEnd();
      }
      if (struct.string17 != null) {
        oprot.writeFieldBegin(STRING17_FIELD_DESC);
        oprot.writeString(struct.string17);
        oprot.writeFieldEnd();
      }
      if (struct.string18 != null) {
        oprot.writeFieldBegin(STRING18_FIELD_DESC);
        oprot.writeString(struct.string18);
        oprot.writeFieldEnd();
      }
      if (struct.string19 != null) {
        oprot.writeFieldBegin(STRING19_FIELD_DESC);
        oprot.writeString(struct.string19);
        oprot.writeFieldEnd();
      }
      if (struct.string20 != null) {
        oprot.writeFieldBegin(STRING20_FIELD_DESC);
        oprot.writeString(struct.string20);
        oprot.writeFieldEnd();
      }
      if (struct.string21 != null) {
        oprot.writeFieldBegin(STRING21_FIELD_DESC);
        oprot.writeString(struct.string21);
        oprot.writeFieldEnd();
      }
      if (struct.string22 != null) {
        oprot.writeFieldBegin(STRING22_FIELD_DESC);
        oprot.writeString(struct.string22);
        oprot.writeFieldEnd();
      }
      if (struct.string23 != null) {
        oprot.writeFieldBegin(STRING23_FIELD_DESC);
        oprot.writeString(struct.string23);
        oprot.writeFieldEnd();
      }
      if (struct.string24 != null) {
        oprot.writeFieldBegin(STRING24_FIELD_DESC);
        oprot.writeString(struct.string24);
        oprot.writeFieldEnd();
      }
      if (struct.string25 != null) {
        oprot.writeFieldBegin(STRING25_FIELD_DESC);
        oprot.writeString(struct.string25);
        oprot.writeFieldEnd();
      }
      if (struct.string26 != null) {
        oprot.writeFieldBegin(STRING26_FIELD_DESC);
        oprot.writeString(struct.string26);
        oprot.writeFieldEnd();
      }
      if (struct.string27 != null) {
        oprot.writeFieldBegin(STRING27_FIELD_DESC);
        oprot.writeString(struct.string27);
        oprot.writeFieldEnd();
      }
      if (struct.string28 != null) {
        oprot.writeFieldBegin(STRING28_FIELD_DESC);
        oprot.writeString(struct.string28);
        oprot.writeFieldEnd();
      }
      if (struct.string29 != null) {
        oprot.writeFieldBegin(STRING29_FIELD_DESC);
        oprot.writeString(struct.string29);
        oprot.writeFieldEnd();
      }
      if (struct.string30 != null) {
        oprot.writeFieldBegin(STRING30_FIELD_DESC);
        oprot.writeString(struct.string30);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(NUMBER1_FIELD_DESC);
      oprot.writeI32(struct.number1);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER2_FIELD_DESC);
      oprot.writeI32(struct.number2);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER3_FIELD_DESC);
      oprot.writeI32(struct.number3);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER4_FIELD_DESC);
      oprot.writeI32(struct.number4);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER5_FIELD_DESC);
      oprot.writeI32(struct.number5);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER6_FIELD_DESC);
      oprot.writeI32(struct.number6);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER7_FIELD_DESC);
      oprot.writeI32(struct.number7);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER8_FIELD_DESC);
      oprot.writeI32(struct.number8);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER9_FIELD_DESC);
      oprot.writeI32(struct.number9);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER10_FIELD_DESC);
      oprot.writeI32(struct.number10);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER11_FIELD_DESC);
      oprot.writeI32(struct.number11);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER12_FIELD_DESC);
      oprot.writeI32(struct.number12);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER13_FIELD_DESC);
      oprot.writeI32(struct.number13);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER14_FIELD_DESC);
      oprot.writeI32(struct.number14);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER15_FIELD_DESC);
      oprot.writeI32(struct.number15);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER16_FIELD_DESC);
      oprot.writeI32(struct.number16);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER17_FIELD_DESC);
      oprot.writeI32(struct.number17);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER18_FIELD_DESC);
      oprot.writeI32(struct.number18);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER19_FIELD_DESC);
      oprot.writeI32(struct.number19);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER20_FIELD_DESC);
      oprot.writeI32(struct.number20);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER21_FIELD_DESC);
      oprot.writeI32(struct.number21);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER22_FIELD_DESC);
      oprot.writeI32(struct.number22);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER23_FIELD_DESC);
      oprot.writeI32(struct.number23);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER24_FIELD_DESC);
      oprot.writeI32(struct.number24);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER25_FIELD_DESC);
      oprot.writeI32(struct.number25);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER26_FIELD_DESC);
      oprot.writeI32(struct.number26);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER27_FIELD_DESC);
      oprot.writeI32(struct.number27);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER28_FIELD_DESC);
      oprot.writeI32(struct.number28);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER29_FIELD_DESC);
      oprot.writeI32(struct.number29);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER30_FIELD_DESC);
      oprot.writeI32(struct.number30);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER31_FIELD_DESC);
      oprot.writeI32(struct.number31);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER32_FIELD_DESC);
      oprot.writeI32(struct.number32);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER33_FIELD_DESC);
      oprot.writeI32(struct.number33);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER34_FIELD_DESC);
      oprot.writeI32(struct.number34);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER35_FIELD_DESC);
      oprot.writeI32(struct.number35);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER36_FIELD_DESC);
      oprot.writeI32(struct.number36);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER37_FIELD_DESC);
      oprot.writeI32(struct.number37);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER38_FIELD_DESC);
      oprot.writeI32(struct.number38);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER39_FIELD_DESC);
      oprot.writeI32(struct.number39);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER40_FIELD_DESC);
      oprot.writeI32(struct.number40);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER41_FIELD_DESC);
      oprot.writeI32(struct.number41);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER42_FIELD_DESC);
      oprot.writeI32(struct.number42);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER43_FIELD_DESC);
      oprot.writeI32(struct.number43);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER44_FIELD_DESC);
      oprot.writeI32(struct.number44);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER45_FIELD_DESC);
      oprot.writeI32(struct.number45);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER46_FIELD_DESC);
      oprot.writeI32(struct.number46);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER47_FIELD_DESC);
      oprot.writeI32(struct.number47);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER48_FIELD_DESC);
      oprot.writeI32(struct.number48);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER49_FIELD_DESC);
      oprot.writeI32(struct.number49);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER50_FIELD_DESC);
      oprot.writeI32(struct.number50);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER51_FIELD_DESC);
      oprot.writeI32(struct.number51);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER52_FIELD_DESC);
      oprot.writeI32(struct.number52);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER53_FIELD_DESC);
      oprot.writeI32(struct.number53);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER54_FIELD_DESC);
      oprot.writeI32(struct.number54);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER55_FIELD_DESC);
      oprot.writeI32(struct.number55);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER56_FIELD_DESC);
      oprot.writeI32(struct.number56);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER57_FIELD_DESC);
      oprot.writeI32(struct.number57);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER58_FIELD_DESC);
      oprot.writeI32(struct.number58);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER59_FIELD_DESC);
      oprot.writeI32(struct.number59);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER60_FIELD_DESC);
      oprot.writeI32(struct.number60);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER61_FIELD_DESC);
      oprot.writeI32(struct.number61);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER62_FIELD_DESC);
      oprot.writeI32(struct.number62);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER63_FIELD_DESC);
      oprot.writeI32(struct.number63);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER64_FIELD_DESC);
      oprot.writeI32(struct.number64);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER65_FIELD_DESC);
      oprot.writeI32(struct.number65);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER66_FIELD_DESC);
      oprot.writeI32(struct.number66);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER67_FIELD_DESC);
      oprot.writeI32(struct.number67);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER68_FIELD_DESC);
      oprot.writeI32(struct.number68);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER69_FIELD_DESC);
      oprot.writeI32(struct.number69);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER70_FIELD_DESC);
      oprot.writeI32(struct.number70);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER71_FIELD_DESC);
      oprot.writeI32(struct.number71);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER72_FIELD_DESC);
      oprot.writeI32(struct.number72);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER73_FIELD_DESC);
      oprot.writeI32(struct.number73);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER74_FIELD_DESC);
      oprot.writeI32(struct.number74);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER75_FIELD_DESC);
      oprot.writeI32(struct.number75);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER76_FIELD_DESC);
      oprot.writeI32(struct.number76);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER77_FIELD_DESC);
      oprot.writeI32(struct.number77);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER78_FIELD_DESC);
      oprot.writeI32(struct.number78);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER79_FIELD_DESC);
      oprot.writeI32(struct.number79);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER80_FIELD_DESC);
      oprot.writeI32(struct.number80);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER81_FIELD_DESC);
      oprot.writeI32(struct.number81);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER82_FIELD_DESC);
      oprot.writeI32(struct.number82);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER83_FIELD_DESC);
      oprot.writeI32(struct.number83);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER84_FIELD_DESC);
      oprot.writeI32(struct.number84);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER85_FIELD_DESC);
      oprot.writeI32(struct.number85);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER86_FIELD_DESC);
      oprot.writeI32(struct.number86);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER87_FIELD_DESC);
      oprot.writeI32(struct.number87);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER88_FIELD_DESC);
      oprot.writeI32(struct.number88);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER89_FIELD_DESC);
      oprot.writeI32(struct.number89);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER90_FIELD_DESC);
      oprot.writeI32(struct.number90);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER91_FIELD_DESC);
      oprot.writeI32(struct.number91);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER92_FIELD_DESC);
      oprot.writeI32(struct.number92);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER93_FIELD_DESC);
      oprot.writeI32(struct.number93);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER94_FIELD_DESC);
      oprot.writeI32(struct.number94);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER95_FIELD_DESC);
      oprot.writeI32(struct.number95);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER96_FIELD_DESC);
      oprot.writeI32(struct.number96);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER97_FIELD_DESC);
      oprot.writeI32(struct.number97);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER98_FIELD_DESC);
      oprot.writeI32(struct.number98);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER99_FIELD_DESC);
      oprot.writeI32(struct.number99);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER100_FIELD_DESC);
      oprot.writeI32(struct.number100);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER101_FIELD_DESC);
      oprot.writeI32(struct.number101);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER102_FIELD_DESC);
      oprot.writeI32(struct.number102);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER103_FIELD_DESC);
      oprot.writeI32(struct.number103);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER104_FIELD_DESC);
      oprot.writeI32(struct.number104);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER105_FIELD_DESC);
      oprot.writeI32(struct.number105);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER106_FIELD_DESC);
      oprot.writeI32(struct.number106);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER107_FIELD_DESC);
      oprot.writeI32(struct.number107);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER108_FIELD_DESC);
      oprot.writeI32(struct.number108);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER109_FIELD_DESC);
      oprot.writeI32(struct.number109);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER110_FIELD_DESC);
      oprot.writeI32(struct.number110);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER111_FIELD_DESC);
      oprot.writeI32(struct.number111);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER112_FIELD_DESC);
      oprot.writeI32(struct.number112);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER113_FIELD_DESC);
      oprot.writeI32(struct.number113);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER114_FIELD_DESC);
      oprot.writeI32(struct.number114);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER115_FIELD_DESC);
      oprot.writeI32(struct.number115);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER116_FIELD_DESC);
      oprot.writeI32(struct.number116);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER117_FIELD_DESC);
      oprot.writeI32(struct.number117);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER118_FIELD_DESC);
      oprot.writeI32(struct.number118);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER119_FIELD_DESC);
      oprot.writeI32(struct.number119);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER120_FIELD_DESC);
      oprot.writeI32(struct.number120);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER121_FIELD_DESC);
      oprot.writeDouble(struct.number121);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER122_FIELD_DESC);
      oprot.writeDouble(struct.number122);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER123_FIELD_DESC);
      oprot.writeDouble(struct.number123);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER124_FIELD_DESC);
      oprot.writeDouble(struct.number124);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER125_FIELD_DESC);
      oprot.writeDouble(struct.number125);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER126_FIELD_DESC);
      oprot.writeDouble(struct.number126);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER127_FIELD_DESC);
      oprot.writeDouble(struct.number127);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER128_FIELD_DESC);
      oprot.writeDouble(struct.number128);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER129_FIELD_DESC);
      oprot.writeDouble(struct.number129);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER130_FIELD_DESC);
      oprot.writeDouble(struct.number130);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER131_FIELD_DESC);
      oprot.writeDouble(struct.number131);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER132_FIELD_DESC);
      oprot.writeDouble(struct.number132);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER133_FIELD_DESC);
      oprot.writeDouble(struct.number133);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER134_FIELD_DESC);
      oprot.writeDouble(struct.number134);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER135_FIELD_DESC);
      oprot.writeDouble(struct.number135);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER136_FIELD_DESC);
      oprot.writeDouble(struct.number136);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER137_FIELD_DESC);
      oprot.writeDouble(struct.number137);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER138_FIELD_DESC);
      oprot.writeDouble(struct.number138);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER139_FIELD_DESC);
      oprot.writeDouble(struct.number139);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER140_FIELD_DESC);
      oprot.writeDouble(struct.number140);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER141_FIELD_DESC);
      oprot.writeDouble(struct.number141);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER142_FIELD_DESC);
      oprot.writeDouble(struct.number142);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER143_FIELD_DESC);
      oprot.writeDouble(struct.number143);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER144_FIELD_DESC);
      oprot.writeDouble(struct.number144);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER145_FIELD_DESC);
      oprot.writeDouble(struct.number145);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER146_FIELD_DESC);
      oprot.writeDouble(struct.number146);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER147_FIELD_DESC);
      oprot.writeDouble(struct.number147);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER148_FIELD_DESC);
      oprot.writeDouble(struct.number148);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER149_FIELD_DESC);
      oprot.writeDouble(struct.number149);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER150_FIELD_DESC);
      oprot.writeDouble(struct.number150);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER151_FIELD_DESC);
      oprot.writeDouble(struct.number151);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER152_FIELD_DESC);
      oprot.writeDouble(struct.number152);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER153_FIELD_DESC);
      oprot.writeDouble(struct.number153);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER154_FIELD_DESC);
      oprot.writeDouble(struct.number154);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER155_FIELD_DESC);
      oprot.writeDouble(struct.number155);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER156_FIELD_DESC);
      oprot.writeDouble(struct.number156);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER157_FIELD_DESC);
      oprot.writeDouble(struct.number157);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER158_FIELD_DESC);
      oprot.writeDouble(struct.number158);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER159_FIELD_DESC);
      oprot.writeDouble(struct.number159);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER160_FIELD_DESC);
      oprot.writeDouble(struct.number160);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER161_FIELD_DESC);
      oprot.writeDouble(struct.number161);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER162_FIELD_DESC);
      oprot.writeDouble(struct.number162);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER163_FIELD_DESC);
      oprot.writeDouble(struct.number163);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER164_FIELD_DESC);
      oprot.writeDouble(struct.number164);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER165_FIELD_DESC);
      oprot.writeDouble(struct.number165);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER166_FIELD_DESC);
      oprot.writeDouble(struct.number166);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER167_FIELD_DESC);
      oprot.writeDouble(struct.number167);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER168_FIELD_DESC);
      oprot.writeDouble(struct.number168);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER169_FIELD_DESC);
      oprot.writeDouble(struct.number169);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NUMBER170_FIELD_DESC);
      oprot.writeDouble(struct.number170);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class Data6ThriftTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public Data6ThriftTupleScheme getScheme() {
      return new Data6ThriftTupleScheme();
    }
  }

  private static class Data6ThriftTupleScheme extends org.apache.thrift.scheme.TupleScheme<Data6Thrift> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, Data6Thrift struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetString1()) {
        optionals.set(0);
      }
      if (struct.isSetString2()) {
        optionals.set(1);
      }
      if (struct.isSetString3()) {
        optionals.set(2);
      }
      if (struct.isSetString4()) {
        optionals.set(3);
      }
      if (struct.isSetString5()) {
        optionals.set(4);
      }
      if (struct.isSetString6()) {
        optionals.set(5);
      }
      if (struct.isSetString7()) {
        optionals.set(6);
      }
      if (struct.isSetString8()) {
        optionals.set(7);
      }
      if (struct.isSetString9()) {
        optionals.set(8);
      }
      if (struct.isSetString10()) {
        optionals.set(9);
      }
      if (struct.isSetString11()) {
        optionals.set(10);
      }
      if (struct.isSetString12()) {
        optionals.set(11);
      }
      if (struct.isSetString13()) {
        optionals.set(12);
      }
      if (struct.isSetString14()) {
        optionals.set(13);
      }
      if (struct.isSetString15()) {
        optionals.set(14);
      }
      if (struct.isSetString16()) {
        optionals.set(15);
      }
      if (struct.isSetString17()) {
        optionals.set(16);
      }
      if (struct.isSetString18()) {
        optionals.set(17);
      }
      if (struct.isSetString19()) {
        optionals.set(18);
      }
      if (struct.isSetString20()) {
        optionals.set(19);
      }
      if (struct.isSetString21()) {
        optionals.set(20);
      }
      if (struct.isSetString22()) {
        optionals.set(21);
      }
      if (struct.isSetString23()) {
        optionals.set(22);
      }
      if (struct.isSetString24()) {
        optionals.set(23);
      }
      if (struct.isSetString25()) {
        optionals.set(24);
      }
      if (struct.isSetString26()) {
        optionals.set(25);
      }
      if (struct.isSetString27()) {
        optionals.set(26);
      }
      if (struct.isSetString28()) {
        optionals.set(27);
      }
      if (struct.isSetString29()) {
        optionals.set(28);
      }
      if (struct.isSetString30()) {
        optionals.set(29);
      }
      if (struct.isSetNumber1()) {
        optionals.set(30);
      }
      if (struct.isSetNumber2()) {
        optionals.set(31);
      }
      if (struct.isSetNumber3()) {
        optionals.set(32);
      }
      if (struct.isSetNumber4()) {
        optionals.set(33);
      }
      if (struct.isSetNumber5()) {
        optionals.set(34);
      }
      if (struct.isSetNumber6()) {
        optionals.set(35);
      }
      if (struct.isSetNumber7()) {
        optionals.set(36);
      }
      if (struct.isSetNumber8()) {
        optionals.set(37);
      }
      if (struct.isSetNumber9()) {
        optionals.set(38);
      }
      if (struct.isSetNumber10()) {
        optionals.set(39);
      }
      if (struct.isSetNumber11()) {
        optionals.set(40);
      }
      if (struct.isSetNumber12()) {
        optionals.set(41);
      }
      if (struct.isSetNumber13()) {
        optionals.set(42);
      }
      if (struct.isSetNumber14()) {
        optionals.set(43);
      }
      if (struct.isSetNumber15()) {
        optionals.set(44);
      }
      if (struct.isSetNumber16()) {
        optionals.set(45);
      }
      if (struct.isSetNumber17()) {
        optionals.set(46);
      }
      if (struct.isSetNumber18()) {
        optionals.set(47);
      }
      if (struct.isSetNumber19()) {
        optionals.set(48);
      }
      if (struct.isSetNumber20()) {
        optionals.set(49);
      }
      if (struct.isSetNumber21()) {
        optionals.set(50);
      }
      if (struct.isSetNumber22()) {
        optionals.set(51);
      }
      if (struct.isSetNumber23()) {
        optionals.set(52);
      }
      if (struct.isSetNumber24()) {
        optionals.set(53);
      }
      if (struct.isSetNumber25()) {
        optionals.set(54);
      }
      if (struct.isSetNumber26()) {
        optionals.set(55);
      }
      if (struct.isSetNumber27()) {
        optionals.set(56);
      }
      if (struct.isSetNumber28()) {
        optionals.set(57);
      }
      if (struct.isSetNumber29()) {
        optionals.set(58);
      }
      if (struct.isSetNumber30()) {
        optionals.set(59);
      }
      if (struct.isSetNumber31()) {
        optionals.set(60);
      }
      if (struct.isSetNumber32()) {
        optionals.set(61);
      }
      if (struct.isSetNumber33()) {
        optionals.set(62);
      }
      if (struct.isSetNumber34()) {
        optionals.set(63);
      }
      if (struct.isSetNumber35()) {
        optionals.set(64);
      }
      if (struct.isSetNumber36()) {
        optionals.set(65);
      }
      if (struct.isSetNumber37()) {
        optionals.set(66);
      }
      if (struct.isSetNumber38()) {
        optionals.set(67);
      }
      if (struct.isSetNumber39()) {
        optionals.set(68);
      }
      if (struct.isSetNumber40()) {
        optionals.set(69);
      }
      if (struct.isSetNumber41()) {
        optionals.set(70);
      }
      if (struct.isSetNumber42()) {
        optionals.set(71);
      }
      if (struct.isSetNumber43()) {
        optionals.set(72);
      }
      if (struct.isSetNumber44()) {
        optionals.set(73);
      }
      if (struct.isSetNumber45()) {
        optionals.set(74);
      }
      if (struct.isSetNumber46()) {
        optionals.set(75);
      }
      if (struct.isSetNumber47()) {
        optionals.set(76);
      }
      if (struct.isSetNumber48()) {
        optionals.set(77);
      }
      if (struct.isSetNumber49()) {
        optionals.set(78);
      }
      if (struct.isSetNumber50()) {
        optionals.set(79);
      }
      if (struct.isSetNumber51()) {
        optionals.set(80);
      }
      if (struct.isSetNumber52()) {
        optionals.set(81);
      }
      if (struct.isSetNumber53()) {
        optionals.set(82);
      }
      if (struct.isSetNumber54()) {
        optionals.set(83);
      }
      if (struct.isSetNumber55()) {
        optionals.set(84);
      }
      if (struct.isSetNumber56()) {
        optionals.set(85);
      }
      if (struct.isSetNumber57()) {
        optionals.set(86);
      }
      if (struct.isSetNumber58()) {
        optionals.set(87);
      }
      if (struct.isSetNumber59()) {
        optionals.set(88);
      }
      if (struct.isSetNumber60()) {
        optionals.set(89);
      }
      if (struct.isSetNumber61()) {
        optionals.set(90);
      }
      if (struct.isSetNumber62()) {
        optionals.set(91);
      }
      if (struct.isSetNumber63()) {
        optionals.set(92);
      }
      if (struct.isSetNumber64()) {
        optionals.set(93);
      }
      if (struct.isSetNumber65()) {
        optionals.set(94);
      }
      if (struct.isSetNumber66()) {
        optionals.set(95);
      }
      if (struct.isSetNumber67()) {
        optionals.set(96);
      }
      if (struct.isSetNumber68()) {
        optionals.set(97);
      }
      if (struct.isSetNumber69()) {
        optionals.set(98);
      }
      if (struct.isSetNumber70()) {
        optionals.set(99);
      }
      if (struct.isSetNumber71()) {
        optionals.set(100);
      }
      if (struct.isSetNumber72()) {
        optionals.set(101);
      }
      if (struct.isSetNumber73()) {
        optionals.set(102);
      }
      if (struct.isSetNumber74()) {
        optionals.set(103);
      }
      if (struct.isSetNumber75()) {
        optionals.set(104);
      }
      if (struct.isSetNumber76()) {
        optionals.set(105);
      }
      if (struct.isSetNumber77()) {
        optionals.set(106);
      }
      if (struct.isSetNumber78()) {
        optionals.set(107);
      }
      if (struct.isSetNumber79()) {
        optionals.set(108);
      }
      if (struct.isSetNumber80()) {
        optionals.set(109);
      }
      if (struct.isSetNumber81()) {
        optionals.set(110);
      }
      if (struct.isSetNumber82()) {
        optionals.set(111);
      }
      if (struct.isSetNumber83()) {
        optionals.set(112);
      }
      if (struct.isSetNumber84()) {
        optionals.set(113);
      }
      if (struct.isSetNumber85()) {
        optionals.set(114);
      }
      if (struct.isSetNumber86()) {
        optionals.set(115);
      }
      if (struct.isSetNumber87()) {
        optionals.set(116);
      }
      if (struct.isSetNumber88()) {
        optionals.set(117);
      }
      if (struct.isSetNumber89()) {
        optionals.set(118);
      }
      if (struct.isSetNumber90()) {
        optionals.set(119);
      }
      if (struct.isSetNumber91()) {
        optionals.set(120);
      }
      if (struct.isSetNumber92()) {
        optionals.set(121);
      }
      if (struct.isSetNumber93()) {
        optionals.set(122);
      }
      if (struct.isSetNumber94()) {
        optionals.set(123);
      }
      if (struct.isSetNumber95()) {
        optionals.set(124);
      }
      if (struct.isSetNumber96()) {
        optionals.set(125);
      }
      if (struct.isSetNumber97()) {
        optionals.set(126);
      }
      if (struct.isSetNumber98()) {
        optionals.set(127);
      }
      if (struct.isSetNumber99()) {
        optionals.set(128);
      }
      if (struct.isSetNumber100()) {
        optionals.set(129);
      }
      if (struct.isSetNumber101()) {
        optionals.set(130);
      }
      if (struct.isSetNumber102()) {
        optionals.set(131);
      }
      if (struct.isSetNumber103()) {
        optionals.set(132);
      }
      if (struct.isSetNumber104()) {
        optionals.set(133);
      }
      if (struct.isSetNumber105()) {
        optionals.set(134);
      }
      if (struct.isSetNumber106()) {
        optionals.set(135);
      }
      if (struct.isSetNumber107()) {
        optionals.set(136);
      }
      if (struct.isSetNumber108()) {
        optionals.set(137);
      }
      if (struct.isSetNumber109()) {
        optionals.set(138);
      }
      if (struct.isSetNumber110()) {
        optionals.set(139);
      }
      if (struct.isSetNumber111()) {
        optionals.set(140);
      }
      if (struct.isSetNumber112()) {
        optionals.set(141);
      }
      if (struct.isSetNumber113()) {
        optionals.set(142);
      }
      if (struct.isSetNumber114()) {
        optionals.set(143);
      }
      if (struct.isSetNumber115()) {
        optionals.set(144);
      }
      if (struct.isSetNumber116()) {
        optionals.set(145);
      }
      if (struct.isSetNumber117()) {
        optionals.set(146);
      }
      if (struct.isSetNumber118()) {
        optionals.set(147);
      }
      if (struct.isSetNumber119()) {
        optionals.set(148);
      }
      if (struct.isSetNumber120()) {
        optionals.set(149);
      }
      if (struct.isSetNumber121()) {
        optionals.set(150);
      }
      if (struct.isSetNumber122()) {
        optionals.set(151);
      }
      if (struct.isSetNumber123()) {
        optionals.set(152);
      }
      if (struct.isSetNumber124()) {
        optionals.set(153);
      }
      if (struct.isSetNumber125()) {
        optionals.set(154);
      }
      if (struct.isSetNumber126()) {
        optionals.set(155);
      }
      if (struct.isSetNumber127()) {
        optionals.set(156);
      }
      if (struct.isSetNumber128()) {
        optionals.set(157);
      }
      if (struct.isSetNumber129()) {
        optionals.set(158);
      }
      if (struct.isSetNumber130()) {
        optionals.set(159);
      }
      if (struct.isSetNumber131()) {
        optionals.set(160);
      }
      if (struct.isSetNumber132()) {
        optionals.set(161);
      }
      if (struct.isSetNumber133()) {
        optionals.set(162);
      }
      if (struct.isSetNumber134()) {
        optionals.set(163);
      }
      if (struct.isSetNumber135()) {
        optionals.set(164);
      }
      if (struct.isSetNumber136()) {
        optionals.set(165);
      }
      if (struct.isSetNumber137()) {
        optionals.set(166);
      }
      if (struct.isSetNumber138()) {
        optionals.set(167);
      }
      if (struct.isSetNumber139()) {
        optionals.set(168);
      }
      if (struct.isSetNumber140()) {
        optionals.set(169);
      }
      if (struct.isSetNumber141()) {
        optionals.set(170);
      }
      if (struct.isSetNumber142()) {
        optionals.set(171);
      }
      if (struct.isSetNumber143()) {
        optionals.set(172);
      }
      if (struct.isSetNumber144()) {
        optionals.set(173);
      }
      if (struct.isSetNumber145()) {
        optionals.set(174);
      }
      if (struct.isSetNumber146()) {
        optionals.set(175);
      }
      if (struct.isSetNumber147()) {
        optionals.set(176);
      }
      if (struct.isSetNumber148()) {
        optionals.set(177);
      }
      if (struct.isSetNumber149()) {
        optionals.set(178);
      }
      if (struct.isSetNumber150()) {
        optionals.set(179);
      }
      if (struct.isSetNumber151()) {
        optionals.set(180);
      }
      if (struct.isSetNumber152()) {
        optionals.set(181);
      }
      if (struct.isSetNumber153()) {
        optionals.set(182);
      }
      if (struct.isSetNumber154()) {
        optionals.set(183);
      }
      if (struct.isSetNumber155()) {
        optionals.set(184);
      }
      if (struct.isSetNumber156()) {
        optionals.set(185);
      }
      if (struct.isSetNumber157()) {
        optionals.set(186);
      }
      if (struct.isSetNumber158()) {
        optionals.set(187);
      }
      if (struct.isSetNumber159()) {
        optionals.set(188);
      }
      if (struct.isSetNumber160()) {
        optionals.set(189);
      }
      if (struct.isSetNumber161()) {
        optionals.set(190);
      }
      if (struct.isSetNumber162()) {
        optionals.set(191);
      }
      if (struct.isSetNumber163()) {
        optionals.set(192);
      }
      if (struct.isSetNumber164()) {
        optionals.set(193);
      }
      if (struct.isSetNumber165()) {
        optionals.set(194);
      }
      if (struct.isSetNumber166()) {
        optionals.set(195);
      }
      if (struct.isSetNumber167()) {
        optionals.set(196);
      }
      if (struct.isSetNumber168()) {
        optionals.set(197);
      }
      if (struct.isSetNumber169()) {
        optionals.set(198);
      }
      if (struct.isSetNumber170()) {
        optionals.set(199);
      }
      oprot.writeBitSet(optionals, 200);
      if (struct.isSetString1()) {
        oprot.writeString(struct.string1);
      }
      if (struct.isSetString2()) {
        oprot.writeString(struct.string2);
      }
      if (struct.isSetString3()) {
        oprot.writeString(struct.string3);
      }
      if (struct.isSetString4()) {
        oprot.writeString(struct.string4);
      }
      if (struct.isSetString5()) {
        oprot.writeString(struct.string5);
      }
      if (struct.isSetString6()) {
        oprot.writeString(struct.string6);
      }
      if (struct.isSetString7()) {
        oprot.writeString(struct.string7);
      }
      if (struct.isSetString8()) {
        oprot.writeString(struct.string8);
      }
      if (struct.isSetString9()) {
        oprot.writeString(struct.string9);
      }
      if (struct.isSetString10()) {
        oprot.writeString(struct.string10);
      }
      if (struct.isSetString11()) {
        oprot.writeString(struct.string11);
      }
      if (struct.isSetString12()) {
        oprot.writeString(struct.string12);
      }
      if (struct.isSetString13()) {
        oprot.writeString(struct.string13);
      }
      if (struct.isSetString14()) {
        oprot.writeString(struct.string14);
      }
      if (struct.isSetString15()) {
        oprot.writeString(struct.string15);
      }
      if (struct.isSetString16()) {
        oprot.writeString(struct.string16);
      }
      if (struct.isSetString17()) {
        oprot.writeString(struct.string17);
      }
      if (struct.isSetString18()) {
        oprot.writeString(struct.string18);
      }
      if (struct.isSetString19()) {
        oprot.writeString(struct.string19);
      }
      if (struct.isSetString20()) {
        oprot.writeString(struct.string20);
      }
      if (struct.isSetString21()) {
        oprot.writeString(struct.string21);
      }
      if (struct.isSetString22()) {
        oprot.writeString(struct.string22);
      }
      if (struct.isSetString23()) {
        oprot.writeString(struct.string23);
      }
      if (struct.isSetString24()) {
        oprot.writeString(struct.string24);
      }
      if (struct.isSetString25()) {
        oprot.writeString(struct.string25);
      }
      if (struct.isSetString26()) {
        oprot.writeString(struct.string26);
      }
      if (struct.isSetString27()) {
        oprot.writeString(struct.string27);
      }
      if (struct.isSetString28()) {
        oprot.writeString(struct.string28);
      }
      if (struct.isSetString29()) {
        oprot.writeString(struct.string29);
      }
      if (struct.isSetString30()) {
        oprot.writeString(struct.string30);
      }
      if (struct.isSetNumber1()) {
        oprot.writeI32(struct.number1);
      }
      if (struct.isSetNumber2()) {
        oprot.writeI32(struct.number2);
      }
      if (struct.isSetNumber3()) {
        oprot.writeI32(struct.number3);
      }
      if (struct.isSetNumber4()) {
        oprot.writeI32(struct.number4);
      }
      if (struct.isSetNumber5()) {
        oprot.writeI32(struct.number5);
      }
      if (struct.isSetNumber6()) {
        oprot.writeI32(struct.number6);
      }
      if (struct.isSetNumber7()) {
        oprot.writeI32(struct.number7);
      }
      if (struct.isSetNumber8()) {
        oprot.writeI32(struct.number8);
      }
      if (struct.isSetNumber9()) {
        oprot.writeI32(struct.number9);
      }
      if (struct.isSetNumber10()) {
        oprot.writeI32(struct.number10);
      }
      if (struct.isSetNumber11()) {
        oprot.writeI32(struct.number11);
      }
      if (struct.isSetNumber12()) {
        oprot.writeI32(struct.number12);
      }
      if (struct.isSetNumber13()) {
        oprot.writeI32(struct.number13);
      }
      if (struct.isSetNumber14()) {
        oprot.writeI32(struct.number14);
      }
      if (struct.isSetNumber15()) {
        oprot.writeI32(struct.number15);
      }
      if (struct.isSetNumber16()) {
        oprot.writeI32(struct.number16);
      }
      if (struct.isSetNumber17()) {
        oprot.writeI32(struct.number17);
      }
      if (struct.isSetNumber18()) {
        oprot.writeI32(struct.number18);
      }
      if (struct.isSetNumber19()) {
        oprot.writeI32(struct.number19);
      }
      if (struct.isSetNumber20()) {
        oprot.writeI32(struct.number20);
      }
      if (struct.isSetNumber21()) {
        oprot.writeI32(struct.number21);
      }
      if (struct.isSetNumber22()) {
        oprot.writeI32(struct.number22);
      }
      if (struct.isSetNumber23()) {
        oprot.writeI32(struct.number23);
      }
      if (struct.isSetNumber24()) {
        oprot.writeI32(struct.number24);
      }
      if (struct.isSetNumber25()) {
        oprot.writeI32(struct.number25);
      }
      if (struct.isSetNumber26()) {
        oprot.writeI32(struct.number26);
      }
      if (struct.isSetNumber27()) {
        oprot.writeI32(struct.number27);
      }
      if (struct.isSetNumber28()) {
        oprot.writeI32(struct.number28);
      }
      if (struct.isSetNumber29()) {
        oprot.writeI32(struct.number29);
      }
      if (struct.isSetNumber30()) {
        oprot.writeI32(struct.number30);
      }
      if (struct.isSetNumber31()) {
        oprot.writeI32(struct.number31);
      }
      if (struct.isSetNumber32()) {
        oprot.writeI32(struct.number32);
      }
      if (struct.isSetNumber33()) {
        oprot.writeI32(struct.number33);
      }
      if (struct.isSetNumber34()) {
        oprot.writeI32(struct.number34);
      }
      if (struct.isSetNumber35()) {
        oprot.writeI32(struct.number35);
      }
      if (struct.isSetNumber36()) {
        oprot.writeI32(struct.number36);
      }
      if (struct.isSetNumber37()) {
        oprot.writeI32(struct.number37);
      }
      if (struct.isSetNumber38()) {
        oprot.writeI32(struct.number38);
      }
      if (struct.isSetNumber39()) {
        oprot.writeI32(struct.number39);
      }
      if (struct.isSetNumber40()) {
        oprot.writeI32(struct.number40);
      }
      if (struct.isSetNumber41()) {
        oprot.writeI32(struct.number41);
      }
      if (struct.isSetNumber42()) {
        oprot.writeI32(struct.number42);
      }
      if (struct.isSetNumber43()) {
        oprot.writeI32(struct.number43);
      }
      if (struct.isSetNumber44()) {
        oprot.writeI32(struct.number44);
      }
      if (struct.isSetNumber45()) {
        oprot.writeI32(struct.number45);
      }
      if (struct.isSetNumber46()) {
        oprot.writeI32(struct.number46);
      }
      if (struct.isSetNumber47()) {
        oprot.writeI32(struct.number47);
      }
      if (struct.isSetNumber48()) {
        oprot.writeI32(struct.number48);
      }
      if (struct.isSetNumber49()) {
        oprot.writeI32(struct.number49);
      }
      if (struct.isSetNumber50()) {
        oprot.writeI32(struct.number50);
      }
      if (struct.isSetNumber51()) {
        oprot.writeI32(struct.number51);
      }
      if (struct.isSetNumber52()) {
        oprot.writeI32(struct.number52);
      }
      if (struct.isSetNumber53()) {
        oprot.writeI32(struct.number53);
      }
      if (struct.isSetNumber54()) {
        oprot.writeI32(struct.number54);
      }
      if (struct.isSetNumber55()) {
        oprot.writeI32(struct.number55);
      }
      if (struct.isSetNumber56()) {
        oprot.writeI32(struct.number56);
      }
      if (struct.isSetNumber57()) {
        oprot.writeI32(struct.number57);
      }
      if (struct.isSetNumber58()) {
        oprot.writeI32(struct.number58);
      }
      if (struct.isSetNumber59()) {
        oprot.writeI32(struct.number59);
      }
      if (struct.isSetNumber60()) {
        oprot.writeI32(struct.number60);
      }
      if (struct.isSetNumber61()) {
        oprot.writeI32(struct.number61);
      }
      if (struct.isSetNumber62()) {
        oprot.writeI32(struct.number62);
      }
      if (struct.isSetNumber63()) {
        oprot.writeI32(struct.number63);
      }
      if (struct.isSetNumber64()) {
        oprot.writeI32(struct.number64);
      }
      if (struct.isSetNumber65()) {
        oprot.writeI32(struct.number65);
      }
      if (struct.isSetNumber66()) {
        oprot.writeI32(struct.number66);
      }
      if (struct.isSetNumber67()) {
        oprot.writeI32(struct.number67);
      }
      if (struct.isSetNumber68()) {
        oprot.writeI32(struct.number68);
      }
      if (struct.isSetNumber69()) {
        oprot.writeI32(struct.number69);
      }
      if (struct.isSetNumber70()) {
        oprot.writeI32(struct.number70);
      }
      if (struct.isSetNumber71()) {
        oprot.writeI32(struct.number71);
      }
      if (struct.isSetNumber72()) {
        oprot.writeI32(struct.number72);
      }
      if (struct.isSetNumber73()) {
        oprot.writeI32(struct.number73);
      }
      if (struct.isSetNumber74()) {
        oprot.writeI32(struct.number74);
      }
      if (struct.isSetNumber75()) {
        oprot.writeI32(struct.number75);
      }
      if (struct.isSetNumber76()) {
        oprot.writeI32(struct.number76);
      }
      if (struct.isSetNumber77()) {
        oprot.writeI32(struct.number77);
      }
      if (struct.isSetNumber78()) {
        oprot.writeI32(struct.number78);
      }
      if (struct.isSetNumber79()) {
        oprot.writeI32(struct.number79);
      }
      if (struct.isSetNumber80()) {
        oprot.writeI32(struct.number80);
      }
      if (struct.isSetNumber81()) {
        oprot.writeI32(struct.number81);
      }
      if (struct.isSetNumber82()) {
        oprot.writeI32(struct.number82);
      }
      if (struct.isSetNumber83()) {
        oprot.writeI32(struct.number83);
      }
      if (struct.isSetNumber84()) {
        oprot.writeI32(struct.number84);
      }
      if (struct.isSetNumber85()) {
        oprot.writeI32(struct.number85);
      }
      if (struct.isSetNumber86()) {
        oprot.writeI32(struct.number86);
      }
      if (struct.isSetNumber87()) {
        oprot.writeI32(struct.number87);
      }
      if (struct.isSetNumber88()) {
        oprot.writeI32(struct.number88);
      }
      if (struct.isSetNumber89()) {
        oprot.writeI32(struct.number89);
      }
      if (struct.isSetNumber90()) {
        oprot.writeI32(struct.number90);
      }
      if (struct.isSetNumber91()) {
        oprot.writeI32(struct.number91);
      }
      if (struct.isSetNumber92()) {
        oprot.writeI32(struct.number92);
      }
      if (struct.isSetNumber93()) {
        oprot.writeI32(struct.number93);
      }
      if (struct.isSetNumber94()) {
        oprot.writeI32(struct.number94);
      }
      if (struct.isSetNumber95()) {
        oprot.writeI32(struct.number95);
      }
      if (struct.isSetNumber96()) {
        oprot.writeI32(struct.number96);
      }
      if (struct.isSetNumber97()) {
        oprot.writeI32(struct.number97);
      }
      if (struct.isSetNumber98()) {
        oprot.writeI32(struct.number98);
      }
      if (struct.isSetNumber99()) {
        oprot.writeI32(struct.number99);
      }
      if (struct.isSetNumber100()) {
        oprot.writeI32(struct.number100);
      }
      if (struct.isSetNumber101()) {
        oprot.writeI32(struct.number101);
      }
      if (struct.isSetNumber102()) {
        oprot.writeI32(struct.number102);
      }
      if (struct.isSetNumber103()) {
        oprot.writeI32(struct.number103);
      }
      if (struct.isSetNumber104()) {
        oprot.writeI32(struct.number104);
      }
      if (struct.isSetNumber105()) {
        oprot.writeI32(struct.number105);
      }
      if (struct.isSetNumber106()) {
        oprot.writeI32(struct.number106);
      }
      if (struct.isSetNumber107()) {
        oprot.writeI32(struct.number107);
      }
      if (struct.isSetNumber108()) {
        oprot.writeI32(struct.number108);
      }
      if (struct.isSetNumber109()) {
        oprot.writeI32(struct.number109);
      }
      if (struct.isSetNumber110()) {
        oprot.writeI32(struct.number110);
      }
      if (struct.isSetNumber111()) {
        oprot.writeI32(struct.number111);
      }
      if (struct.isSetNumber112()) {
        oprot.writeI32(struct.number112);
      }
      if (struct.isSetNumber113()) {
        oprot.writeI32(struct.number113);
      }
      if (struct.isSetNumber114()) {
        oprot.writeI32(struct.number114);
      }
      if (struct.isSetNumber115()) {
        oprot.writeI32(struct.number115);
      }
      if (struct.isSetNumber116()) {
        oprot.writeI32(struct.number116);
      }
      if (struct.isSetNumber117()) {
        oprot.writeI32(struct.number117);
      }
      if (struct.isSetNumber118()) {
        oprot.writeI32(struct.number118);
      }
      if (struct.isSetNumber119()) {
        oprot.writeI32(struct.number119);
      }
      if (struct.isSetNumber120()) {
        oprot.writeI32(struct.number120);
      }
      if (struct.isSetNumber121()) {
        oprot.writeDouble(struct.number121);
      }
      if (struct.isSetNumber122()) {
        oprot.writeDouble(struct.number122);
      }
      if (struct.isSetNumber123()) {
        oprot.writeDouble(struct.number123);
      }
      if (struct.isSetNumber124()) {
        oprot.writeDouble(struct.number124);
      }
      if (struct.isSetNumber125()) {
        oprot.writeDouble(struct.number125);
      }
      if (struct.isSetNumber126()) {
        oprot.writeDouble(struct.number126);
      }
      if (struct.isSetNumber127()) {
        oprot.writeDouble(struct.number127);
      }
      if (struct.isSetNumber128()) {
        oprot.writeDouble(struct.number128);
      }
      if (struct.isSetNumber129()) {
        oprot.writeDouble(struct.number129);
      }
      if (struct.isSetNumber130()) {
        oprot.writeDouble(struct.number130);
      }
      if (struct.isSetNumber131()) {
        oprot.writeDouble(struct.number131);
      }
      if (struct.isSetNumber132()) {
        oprot.writeDouble(struct.number132);
      }
      if (struct.isSetNumber133()) {
        oprot.writeDouble(struct.number133);
      }
      if (struct.isSetNumber134()) {
        oprot.writeDouble(struct.number134);
      }
      if (struct.isSetNumber135()) {
        oprot.writeDouble(struct.number135);
      }
      if (struct.isSetNumber136()) {
        oprot.writeDouble(struct.number136);
      }
      if (struct.isSetNumber137()) {
        oprot.writeDouble(struct.number137);
      }
      if (struct.isSetNumber138()) {
        oprot.writeDouble(struct.number138);
      }
      if (struct.isSetNumber139()) {
        oprot.writeDouble(struct.number139);
      }
      if (struct.isSetNumber140()) {
        oprot.writeDouble(struct.number140);
      }
      if (struct.isSetNumber141()) {
        oprot.writeDouble(struct.number141);
      }
      if (struct.isSetNumber142()) {
        oprot.writeDouble(struct.number142);
      }
      if (struct.isSetNumber143()) {
        oprot.writeDouble(struct.number143);
      }
      if (struct.isSetNumber144()) {
        oprot.writeDouble(struct.number144);
      }
      if (struct.isSetNumber145()) {
        oprot.writeDouble(struct.number145);
      }
      if (struct.isSetNumber146()) {
        oprot.writeDouble(struct.number146);
      }
      if (struct.isSetNumber147()) {
        oprot.writeDouble(struct.number147);
      }
      if (struct.isSetNumber148()) {
        oprot.writeDouble(struct.number148);
      }
      if (struct.isSetNumber149()) {
        oprot.writeDouble(struct.number149);
      }
      if (struct.isSetNumber150()) {
        oprot.writeDouble(struct.number150);
      }
      if (struct.isSetNumber151()) {
        oprot.writeDouble(struct.number151);
      }
      if (struct.isSetNumber152()) {
        oprot.writeDouble(struct.number152);
      }
      if (struct.isSetNumber153()) {
        oprot.writeDouble(struct.number153);
      }
      if (struct.isSetNumber154()) {
        oprot.writeDouble(struct.number154);
      }
      if (struct.isSetNumber155()) {
        oprot.writeDouble(struct.number155);
      }
      if (struct.isSetNumber156()) {
        oprot.writeDouble(struct.number156);
      }
      if (struct.isSetNumber157()) {
        oprot.writeDouble(struct.number157);
      }
      if (struct.isSetNumber158()) {
        oprot.writeDouble(struct.number158);
      }
      if (struct.isSetNumber159()) {
        oprot.writeDouble(struct.number159);
      }
      if (struct.isSetNumber160()) {
        oprot.writeDouble(struct.number160);
      }
      if (struct.isSetNumber161()) {
        oprot.writeDouble(struct.number161);
      }
      if (struct.isSetNumber162()) {
        oprot.writeDouble(struct.number162);
      }
      if (struct.isSetNumber163()) {
        oprot.writeDouble(struct.number163);
      }
      if (struct.isSetNumber164()) {
        oprot.writeDouble(struct.number164);
      }
      if (struct.isSetNumber165()) {
        oprot.writeDouble(struct.number165);
      }
      if (struct.isSetNumber166()) {
        oprot.writeDouble(struct.number166);
      }
      if (struct.isSetNumber167()) {
        oprot.writeDouble(struct.number167);
      }
      if (struct.isSetNumber168()) {
        oprot.writeDouble(struct.number168);
      }
      if (struct.isSetNumber169()) {
        oprot.writeDouble(struct.number169);
      }
      if (struct.isSetNumber170()) {
        oprot.writeDouble(struct.number170);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, Data6Thrift struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(200);
      if (incoming.get(0)) {
        struct.string1 = iprot.readString();
        struct.setString1IsSet(true);
      }
      if (incoming.get(1)) {
        struct.string2 = iprot.readString();
        struct.setString2IsSet(true);
      }
      if (incoming.get(2)) {
        struct.string3 = iprot.readString();
        struct.setString3IsSet(true);
      }
      if (incoming.get(3)) {
        struct.string4 = iprot.readString();
        struct.setString4IsSet(true);
      }
      if (incoming.get(4)) {
        struct.string5 = iprot.readString();
        struct.setString5IsSet(true);
      }
      if (incoming.get(5)) {
        struct.string6 = iprot.readString();
        struct.setString6IsSet(true);
      }
      if (incoming.get(6)) {
        struct.string7 = iprot.readString();
        struct.setString7IsSet(true);
      }
      if (incoming.get(7)) {
        struct.string8 = iprot.readString();
        struct.setString8IsSet(true);
      }
      if (incoming.get(8)) {
        struct.string9 = iprot.readString();
        struct.setString9IsSet(true);
      }
      if (incoming.get(9)) {
        struct.string10 = iprot.readString();
        struct.setString10IsSet(true);
      }
      if (incoming.get(10)) {
        struct.string11 = iprot.readString();
        struct.setString11IsSet(true);
      }
      if (incoming.get(11)) {
        struct.string12 = iprot.readString();
        struct.setString12IsSet(true);
      }
      if (incoming.get(12)) {
        struct.string13 = iprot.readString();
        struct.setString13IsSet(true);
      }
      if (incoming.get(13)) {
        struct.string14 = iprot.readString();
        struct.setString14IsSet(true);
      }
      if (incoming.get(14)) {
        struct.string15 = iprot.readString();
        struct.setString15IsSet(true);
      }
      if (incoming.get(15)) {
        struct.string16 = iprot.readString();
        struct.setString16IsSet(true);
      }
      if (incoming.get(16)) {
        struct.string17 = iprot.readString();
        struct.setString17IsSet(true);
      }
      if (incoming.get(17)) {
        struct.string18 = iprot.readString();
        struct.setString18IsSet(true);
      }
      if (incoming.get(18)) {
        struct.string19 = iprot.readString();
        struct.setString19IsSet(true);
      }
      if (incoming.get(19)) {
        struct.string20 = iprot.readString();
        struct.setString20IsSet(true);
      }
      if (incoming.get(20)) {
        struct.string21 = iprot.readString();
        struct.setString21IsSet(true);
      }
      if (incoming.get(21)) {
        struct.string22 = iprot.readString();
        struct.setString22IsSet(true);
      }
      if (incoming.get(22)) {
        struct.string23 = iprot.readString();
        struct.setString23IsSet(true);
      }
      if (incoming.get(23)) {
        struct.string24 = iprot.readString();
        struct.setString24IsSet(true);
      }
      if (incoming.get(24)) {
        struct.string25 = iprot.readString();
        struct.setString25IsSet(true);
      }
      if (incoming.get(25)) {
        struct.string26 = iprot.readString();
        struct.setString26IsSet(true);
      }
      if (incoming.get(26)) {
        struct.string27 = iprot.readString();
        struct.setString27IsSet(true);
      }
      if (incoming.get(27)) {
        struct.string28 = iprot.readString();
        struct.setString28IsSet(true);
      }
      if (incoming.get(28)) {
        struct.string29 = iprot.readString();
        struct.setString29IsSet(true);
      }
      if (incoming.get(29)) {
        struct.string30 = iprot.readString();
        struct.setString30IsSet(true);
      }
      if (incoming.get(30)) {
        struct.number1 = iprot.readI32();
        struct.setNumber1IsSet(true);
      }
      if (incoming.get(31)) {
        struct.number2 = iprot.readI32();
        struct.setNumber2IsSet(true);
      }
      if (incoming.get(32)) {
        struct.number3 = iprot.readI32();
        struct.setNumber3IsSet(true);
      }
      if (incoming.get(33)) {
        struct.number4 = iprot.readI32();
        struct.setNumber4IsSet(true);
      }
      if (incoming.get(34)) {
        struct.number5 = iprot.readI32();
        struct.setNumber5IsSet(true);
      }
      if (incoming.get(35)) {
        struct.number6 = iprot.readI32();
        struct.setNumber6IsSet(true);
      }
      if (incoming.get(36)) {
        struct.number7 = iprot.readI32();
        struct.setNumber7IsSet(true);
      }
      if (incoming.get(37)) {
        struct.number8 = iprot.readI32();
        struct.setNumber8IsSet(true);
      }
      if (incoming.get(38)) {
        struct.number9 = iprot.readI32();
        struct.setNumber9IsSet(true);
      }
      if (incoming.get(39)) {
        struct.number10 = iprot.readI32();
        struct.setNumber10IsSet(true);
      }
      if (incoming.get(40)) {
        struct.number11 = iprot.readI32();
        struct.setNumber11IsSet(true);
      }
      if (incoming.get(41)) {
        struct.number12 = iprot.readI32();
        struct.setNumber12IsSet(true);
      }
      if (incoming.get(42)) {
        struct.number13 = iprot.readI32();
        struct.setNumber13IsSet(true);
      }
      if (incoming.get(43)) {
        struct.number14 = iprot.readI32();
        struct.setNumber14IsSet(true);
      }
      if (incoming.get(44)) {
        struct.number15 = iprot.readI32();
        struct.setNumber15IsSet(true);
      }
      if (incoming.get(45)) {
        struct.number16 = iprot.readI32();
        struct.setNumber16IsSet(true);
      }
      if (incoming.get(46)) {
        struct.number17 = iprot.readI32();
        struct.setNumber17IsSet(true);
      }
      if (incoming.get(47)) {
        struct.number18 = iprot.readI32();
        struct.setNumber18IsSet(true);
      }
      if (incoming.get(48)) {
        struct.number19 = iprot.readI32();
        struct.setNumber19IsSet(true);
      }
      if (incoming.get(49)) {
        struct.number20 = iprot.readI32();
        struct.setNumber20IsSet(true);
      }
      if (incoming.get(50)) {
        struct.number21 = iprot.readI32();
        struct.setNumber21IsSet(true);
      }
      if (incoming.get(51)) {
        struct.number22 = iprot.readI32();
        struct.setNumber22IsSet(true);
      }
      if (incoming.get(52)) {
        struct.number23 = iprot.readI32();
        struct.setNumber23IsSet(true);
      }
      if (incoming.get(53)) {
        struct.number24 = iprot.readI32();
        struct.setNumber24IsSet(true);
      }
      if (incoming.get(54)) {
        struct.number25 = iprot.readI32();
        struct.setNumber25IsSet(true);
      }
      if (incoming.get(55)) {
        struct.number26 = iprot.readI32();
        struct.setNumber26IsSet(true);
      }
      if (incoming.get(56)) {
        struct.number27 = iprot.readI32();
        struct.setNumber27IsSet(true);
      }
      if (incoming.get(57)) {
        struct.number28 = iprot.readI32();
        struct.setNumber28IsSet(true);
      }
      if (incoming.get(58)) {
        struct.number29 = iprot.readI32();
        struct.setNumber29IsSet(true);
      }
      if (incoming.get(59)) {
        struct.number30 = iprot.readI32();
        struct.setNumber30IsSet(true);
      }
      if (incoming.get(60)) {
        struct.number31 = iprot.readI32();
        struct.setNumber31IsSet(true);
      }
      if (incoming.get(61)) {
        struct.number32 = iprot.readI32();
        struct.setNumber32IsSet(true);
      }
      if (incoming.get(62)) {
        struct.number33 = iprot.readI32();
        struct.setNumber33IsSet(true);
      }
      if (incoming.get(63)) {
        struct.number34 = iprot.readI32();
        struct.setNumber34IsSet(true);
      }
      if (incoming.get(64)) {
        struct.number35 = iprot.readI32();
        struct.setNumber35IsSet(true);
      }
      if (incoming.get(65)) {
        struct.number36 = iprot.readI32();
        struct.setNumber36IsSet(true);
      }
      if (incoming.get(66)) {
        struct.number37 = iprot.readI32();
        struct.setNumber37IsSet(true);
      }
      if (incoming.get(67)) {
        struct.number38 = iprot.readI32();
        struct.setNumber38IsSet(true);
      }
      if (incoming.get(68)) {
        struct.number39 = iprot.readI32();
        struct.setNumber39IsSet(true);
      }
      if (incoming.get(69)) {
        struct.number40 = iprot.readI32();
        struct.setNumber40IsSet(true);
      }
      if (incoming.get(70)) {
        struct.number41 = iprot.readI32();
        struct.setNumber41IsSet(true);
      }
      if (incoming.get(71)) {
        struct.number42 = iprot.readI32();
        struct.setNumber42IsSet(true);
      }
      if (incoming.get(72)) {
        struct.number43 = iprot.readI32();
        struct.setNumber43IsSet(true);
      }
      if (incoming.get(73)) {
        struct.number44 = iprot.readI32();
        struct.setNumber44IsSet(true);
      }
      if (incoming.get(74)) {
        struct.number45 = iprot.readI32();
        struct.setNumber45IsSet(true);
      }
      if (incoming.get(75)) {
        struct.number46 = iprot.readI32();
        struct.setNumber46IsSet(true);
      }
      if (incoming.get(76)) {
        struct.number47 = iprot.readI32();
        struct.setNumber47IsSet(true);
      }
      if (incoming.get(77)) {
        struct.number48 = iprot.readI32();
        struct.setNumber48IsSet(true);
      }
      if (incoming.get(78)) {
        struct.number49 = iprot.readI32();
        struct.setNumber49IsSet(true);
      }
      if (incoming.get(79)) {
        struct.number50 = iprot.readI32();
        struct.setNumber50IsSet(true);
      }
      if (incoming.get(80)) {
        struct.number51 = iprot.readI32();
        struct.setNumber51IsSet(true);
      }
      if (incoming.get(81)) {
        struct.number52 = iprot.readI32();
        struct.setNumber52IsSet(true);
      }
      if (incoming.get(82)) {
        struct.number53 = iprot.readI32();
        struct.setNumber53IsSet(true);
      }
      if (incoming.get(83)) {
        struct.number54 = iprot.readI32();
        struct.setNumber54IsSet(true);
      }
      if (incoming.get(84)) {
        struct.number55 = iprot.readI32();
        struct.setNumber55IsSet(true);
      }
      if (incoming.get(85)) {
        struct.number56 = iprot.readI32();
        struct.setNumber56IsSet(true);
      }
      if (incoming.get(86)) {
        struct.number57 = iprot.readI32();
        struct.setNumber57IsSet(true);
      }
      if (incoming.get(87)) {
        struct.number58 = iprot.readI32();
        struct.setNumber58IsSet(true);
      }
      if (incoming.get(88)) {
        struct.number59 = iprot.readI32();
        struct.setNumber59IsSet(true);
      }
      if (incoming.get(89)) {
        struct.number60 = iprot.readI32();
        struct.setNumber60IsSet(true);
      }
      if (incoming.get(90)) {
        struct.number61 = iprot.readI32();
        struct.setNumber61IsSet(true);
      }
      if (incoming.get(91)) {
        struct.number62 = iprot.readI32();
        struct.setNumber62IsSet(true);
      }
      if (incoming.get(92)) {
        struct.number63 = iprot.readI32();
        struct.setNumber63IsSet(true);
      }
      if (incoming.get(93)) {
        struct.number64 = iprot.readI32();
        struct.setNumber64IsSet(true);
      }
      if (incoming.get(94)) {
        struct.number65 = iprot.readI32();
        struct.setNumber65IsSet(true);
      }
      if (incoming.get(95)) {
        struct.number66 = iprot.readI32();
        struct.setNumber66IsSet(true);
      }
      if (incoming.get(96)) {
        struct.number67 = iprot.readI32();
        struct.setNumber67IsSet(true);
      }
      if (incoming.get(97)) {
        struct.number68 = iprot.readI32();
        struct.setNumber68IsSet(true);
      }
      if (incoming.get(98)) {
        struct.number69 = iprot.readI32();
        struct.setNumber69IsSet(true);
      }
      if (incoming.get(99)) {
        struct.number70 = iprot.readI32();
        struct.setNumber70IsSet(true);
      }
      if (incoming.get(100)) {
        struct.number71 = iprot.readI32();
        struct.setNumber71IsSet(true);
      }
      if (incoming.get(101)) {
        struct.number72 = iprot.readI32();
        struct.setNumber72IsSet(true);
      }
      if (incoming.get(102)) {
        struct.number73 = iprot.readI32();
        struct.setNumber73IsSet(true);
      }
      if (incoming.get(103)) {
        struct.number74 = iprot.readI32();
        struct.setNumber74IsSet(true);
      }
      if (incoming.get(104)) {
        struct.number75 = iprot.readI32();
        struct.setNumber75IsSet(true);
      }
      if (incoming.get(105)) {
        struct.number76 = iprot.readI32();
        struct.setNumber76IsSet(true);
      }
      if (incoming.get(106)) {
        struct.number77 = iprot.readI32();
        struct.setNumber77IsSet(true);
      }
      if (incoming.get(107)) {
        struct.number78 = iprot.readI32();
        struct.setNumber78IsSet(true);
      }
      if (incoming.get(108)) {
        struct.number79 = iprot.readI32();
        struct.setNumber79IsSet(true);
      }
      if (incoming.get(109)) {
        struct.number80 = iprot.readI32();
        struct.setNumber80IsSet(true);
      }
      if (incoming.get(110)) {
        struct.number81 = iprot.readI32();
        struct.setNumber81IsSet(true);
      }
      if (incoming.get(111)) {
        struct.number82 = iprot.readI32();
        struct.setNumber82IsSet(true);
      }
      if (incoming.get(112)) {
        struct.number83 = iprot.readI32();
        struct.setNumber83IsSet(true);
      }
      if (incoming.get(113)) {
        struct.number84 = iprot.readI32();
        struct.setNumber84IsSet(true);
      }
      if (incoming.get(114)) {
        struct.number85 = iprot.readI32();
        struct.setNumber85IsSet(true);
      }
      if (incoming.get(115)) {
        struct.number86 = iprot.readI32();
        struct.setNumber86IsSet(true);
      }
      if (incoming.get(116)) {
        struct.number87 = iprot.readI32();
        struct.setNumber87IsSet(true);
      }
      if (incoming.get(117)) {
        struct.number88 = iprot.readI32();
        struct.setNumber88IsSet(true);
      }
      if (incoming.get(118)) {
        struct.number89 = iprot.readI32();
        struct.setNumber89IsSet(true);
      }
      if (incoming.get(119)) {
        struct.number90 = iprot.readI32();
        struct.setNumber90IsSet(true);
      }
      if (incoming.get(120)) {
        struct.number91 = iprot.readI32();
        struct.setNumber91IsSet(true);
      }
      if (incoming.get(121)) {
        struct.number92 = iprot.readI32();
        struct.setNumber92IsSet(true);
      }
      if (incoming.get(122)) {
        struct.number93 = iprot.readI32();
        struct.setNumber93IsSet(true);
      }
      if (incoming.get(123)) {
        struct.number94 = iprot.readI32();
        struct.setNumber94IsSet(true);
      }
      if (incoming.get(124)) {
        struct.number95 = iprot.readI32();
        struct.setNumber95IsSet(true);
      }
      if (incoming.get(125)) {
        struct.number96 = iprot.readI32();
        struct.setNumber96IsSet(true);
      }
      if (incoming.get(126)) {
        struct.number97 = iprot.readI32();
        struct.setNumber97IsSet(true);
      }
      if (incoming.get(127)) {
        struct.number98 = iprot.readI32();
        struct.setNumber98IsSet(true);
      }
      if (incoming.get(128)) {
        struct.number99 = iprot.readI32();
        struct.setNumber99IsSet(true);
      }
      if (incoming.get(129)) {
        struct.number100 = iprot.readI32();
        struct.setNumber100IsSet(true);
      }
      if (incoming.get(130)) {
        struct.number101 = iprot.readI32();
        struct.setNumber101IsSet(true);
      }
      if (incoming.get(131)) {
        struct.number102 = iprot.readI32();
        struct.setNumber102IsSet(true);
      }
      if (incoming.get(132)) {
        struct.number103 = iprot.readI32();
        struct.setNumber103IsSet(true);
      }
      if (incoming.get(133)) {
        struct.number104 = iprot.readI32();
        struct.setNumber104IsSet(true);
      }
      if (incoming.get(134)) {
        struct.number105 = iprot.readI32();
        struct.setNumber105IsSet(true);
      }
      if (incoming.get(135)) {
        struct.number106 = iprot.readI32();
        struct.setNumber106IsSet(true);
      }
      if (incoming.get(136)) {
        struct.number107 = iprot.readI32();
        struct.setNumber107IsSet(true);
      }
      if (incoming.get(137)) {
        struct.number108 = iprot.readI32();
        struct.setNumber108IsSet(true);
      }
      if (incoming.get(138)) {
        struct.number109 = iprot.readI32();
        struct.setNumber109IsSet(true);
      }
      if (incoming.get(139)) {
        struct.number110 = iprot.readI32();
        struct.setNumber110IsSet(true);
      }
      if (incoming.get(140)) {
        struct.number111 = iprot.readI32();
        struct.setNumber111IsSet(true);
      }
      if (incoming.get(141)) {
        struct.number112 = iprot.readI32();
        struct.setNumber112IsSet(true);
      }
      if (incoming.get(142)) {
        struct.number113 = iprot.readI32();
        struct.setNumber113IsSet(true);
      }
      if (incoming.get(143)) {
        struct.number114 = iprot.readI32();
        struct.setNumber114IsSet(true);
      }
      if (incoming.get(144)) {
        struct.number115 = iprot.readI32();
        struct.setNumber115IsSet(true);
      }
      if (incoming.get(145)) {
        struct.number116 = iprot.readI32();
        struct.setNumber116IsSet(true);
      }
      if (incoming.get(146)) {
        struct.number117 = iprot.readI32();
        struct.setNumber117IsSet(true);
      }
      if (incoming.get(147)) {
        struct.number118 = iprot.readI32();
        struct.setNumber118IsSet(true);
      }
      if (incoming.get(148)) {
        struct.number119 = iprot.readI32();
        struct.setNumber119IsSet(true);
      }
      if (incoming.get(149)) {
        struct.number120 = iprot.readI32();
        struct.setNumber120IsSet(true);
      }
      if (incoming.get(150)) {
        struct.number121 = iprot.readDouble();
        struct.setNumber121IsSet(true);
      }
      if (incoming.get(151)) {
        struct.number122 = iprot.readDouble();
        struct.setNumber122IsSet(true);
      }
      if (incoming.get(152)) {
        struct.number123 = iprot.readDouble();
        struct.setNumber123IsSet(true);
      }
      if (incoming.get(153)) {
        struct.number124 = iprot.readDouble();
        struct.setNumber124IsSet(true);
      }
      if (incoming.get(154)) {
        struct.number125 = iprot.readDouble();
        struct.setNumber125IsSet(true);
      }
      if (incoming.get(155)) {
        struct.number126 = iprot.readDouble();
        struct.setNumber126IsSet(true);
      }
      if (incoming.get(156)) {
        struct.number127 = iprot.readDouble();
        struct.setNumber127IsSet(true);
      }
      if (incoming.get(157)) {
        struct.number128 = iprot.readDouble();
        struct.setNumber128IsSet(true);
      }
      if (incoming.get(158)) {
        struct.number129 = iprot.readDouble();
        struct.setNumber129IsSet(true);
      }
      if (incoming.get(159)) {
        struct.number130 = iprot.readDouble();
        struct.setNumber130IsSet(true);
      }
      if (incoming.get(160)) {
        struct.number131 = iprot.readDouble();
        struct.setNumber131IsSet(true);
      }
      if (incoming.get(161)) {
        struct.number132 = iprot.readDouble();
        struct.setNumber132IsSet(true);
      }
      if (incoming.get(162)) {
        struct.number133 = iprot.readDouble();
        struct.setNumber133IsSet(true);
      }
      if (incoming.get(163)) {
        struct.number134 = iprot.readDouble();
        struct.setNumber134IsSet(true);
      }
      if (incoming.get(164)) {
        struct.number135 = iprot.readDouble();
        struct.setNumber135IsSet(true);
      }
      if (incoming.get(165)) {
        struct.number136 = iprot.readDouble();
        struct.setNumber136IsSet(true);
      }
      if (incoming.get(166)) {
        struct.number137 = iprot.readDouble();
        struct.setNumber137IsSet(true);
      }
      if (incoming.get(167)) {
        struct.number138 = iprot.readDouble();
        struct.setNumber138IsSet(true);
      }
      if (incoming.get(168)) {
        struct.number139 = iprot.readDouble();
        struct.setNumber139IsSet(true);
      }
      if (incoming.get(169)) {
        struct.number140 = iprot.readDouble();
        struct.setNumber140IsSet(true);
      }
      if (incoming.get(170)) {
        struct.number141 = iprot.readDouble();
        struct.setNumber141IsSet(true);
      }
      if (incoming.get(171)) {
        struct.number142 = iprot.readDouble();
        struct.setNumber142IsSet(true);
      }
      if (incoming.get(172)) {
        struct.number143 = iprot.readDouble();
        struct.setNumber143IsSet(true);
      }
      if (incoming.get(173)) {
        struct.number144 = iprot.readDouble();
        struct.setNumber144IsSet(true);
      }
      if (incoming.get(174)) {
        struct.number145 = iprot.readDouble();
        struct.setNumber145IsSet(true);
      }
      if (incoming.get(175)) {
        struct.number146 = iprot.readDouble();
        struct.setNumber146IsSet(true);
      }
      if (incoming.get(176)) {
        struct.number147 = iprot.readDouble();
        struct.setNumber147IsSet(true);
      }
      if (incoming.get(177)) {
        struct.number148 = iprot.readDouble();
        struct.setNumber148IsSet(true);
      }
      if (incoming.get(178)) {
        struct.number149 = iprot.readDouble();
        struct.setNumber149IsSet(true);
      }
      if (incoming.get(179)) {
        struct.number150 = iprot.readDouble();
        struct.setNumber150IsSet(true);
      }
      if (incoming.get(180)) {
        struct.number151 = iprot.readDouble();
        struct.setNumber151IsSet(true);
      }
      if (incoming.get(181)) {
        struct.number152 = iprot.readDouble();
        struct.setNumber152IsSet(true);
      }
      if (incoming.get(182)) {
        struct.number153 = iprot.readDouble();
        struct.setNumber153IsSet(true);
      }
      if (incoming.get(183)) {
        struct.number154 = iprot.readDouble();
        struct.setNumber154IsSet(true);
      }
      if (incoming.get(184)) {
        struct.number155 = iprot.readDouble();
        struct.setNumber155IsSet(true);
      }
      if (incoming.get(185)) {
        struct.number156 = iprot.readDouble();
        struct.setNumber156IsSet(true);
      }
      if (incoming.get(186)) {
        struct.number157 = iprot.readDouble();
        struct.setNumber157IsSet(true);
      }
      if (incoming.get(187)) {
        struct.number158 = iprot.readDouble();
        struct.setNumber158IsSet(true);
      }
      if (incoming.get(188)) {
        struct.number159 = iprot.readDouble();
        struct.setNumber159IsSet(true);
      }
      if (incoming.get(189)) {
        struct.number160 = iprot.readDouble();
        struct.setNumber160IsSet(true);
      }
      if (incoming.get(190)) {
        struct.number161 = iprot.readDouble();
        struct.setNumber161IsSet(true);
      }
      if (incoming.get(191)) {
        struct.number162 = iprot.readDouble();
        struct.setNumber162IsSet(true);
      }
      if (incoming.get(192)) {
        struct.number163 = iprot.readDouble();
        struct.setNumber163IsSet(true);
      }
      if (incoming.get(193)) {
        struct.number164 = iprot.readDouble();
        struct.setNumber164IsSet(true);
      }
      if (incoming.get(194)) {
        struct.number165 = iprot.readDouble();
        struct.setNumber165IsSet(true);
      }
      if (incoming.get(195)) {
        struct.number166 = iprot.readDouble();
        struct.setNumber166IsSet(true);
      }
      if (incoming.get(196)) {
        struct.number167 = iprot.readDouble();
        struct.setNumber167IsSet(true);
      }
      if (incoming.get(197)) {
        struct.number168 = iprot.readDouble();
        struct.setNumber168IsSet(true);
      }
      if (incoming.get(198)) {
        struct.number169 = iprot.readDouble();
        struct.setNumber169IsSet(true);
      }
      if (incoming.get(199)) {
        struct.number170 = iprot.readDouble();
        struct.setNumber170IsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

