// automatically generated by the FlatBuffers compiler, do not modify

package testing.flatbuffers;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.Table;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class PhoneNumberFlat extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_2_0_0(); }
  public static PhoneNumberFlat getRootAsPhoneNumberFlat(ByteBuffer _bb) { return getRootAsPhoneNumberFlat(_bb, new PhoneNumberFlat()); }
  public static PhoneNumberFlat getRootAsPhoneNumberFlat(ByteBuffer _bb, PhoneNumberFlat obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public PhoneNumberFlat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String number() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer numberAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer numberInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public byte type() { int o = __offset(6); return o != 0 ? bb.get(o + bb_pos) : 1; }

  public static int createPhoneNumberFlat(FlatBufferBuilder builder,
      int numberOffset,
      byte type) {
    builder.startTable(2);
    PhoneNumberFlat.addNumber(builder, numberOffset);
    PhoneNumberFlat.addType(builder, type);
    return PhoneNumberFlat.endPhoneNumberFlat(builder);
  }

  public static void startPhoneNumberFlat(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addNumber(FlatBufferBuilder builder, int numberOffset) { builder.addOffset(0, numberOffset, 0); }
  public static void addType(FlatBufferBuilder builder, byte type) { builder.addByte(1, type, 1); }
  public static int endPhoneNumberFlat(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public PhoneNumberFlat get(int j) { return get(new PhoneNumberFlat(), j); }
    public PhoneNumberFlat get(PhoneNumberFlat obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

